update to include/fcntl.h from cvs 20050325 (remove readahead(2)).

--- ../../dietlibc/include/fcntl.h	2005-03-25 10:17:43.000000000 +0000
+++ include/fcntl.h	2005-03-24 12:56:22.000000000 +0000
@@ -31,6 +31,7 @@
 #define O_LARGEFILE	0100000
 #define O_DIRECTORY	0200000	/* must be a directory */
 #define O_NOFOLLOW	0400000 /* don't follow links */
+#define O_NOATIME	01000000
 
 #define F_DUPFD		0	/* dup */
 #define F_GETFD		1	/* get close_on_exec */
@@ -109,10 +110,11 @@
 #define O_NDELAY	O_NONBLOCK
 #define O_SYNC		040000
 #define FASYNC		020000	/* fcntl, for BSD compatibility */
-#define O_DIRECT	040000	/* direct disk access - should check with OSF/1 */
 #define O_DIRECTORY	0100000	/* must be a directory */
 #define O_NOFOLLOW	0200000 /* don't follow links */
 #define O_LARGEFILE	0400000 /* will be set by the kernel on every open */
+#define O_DIRECT	02000000	/* direct disk access - should check with OSF/1 */
+#define O_NOATIME	04000000
 
 #define F_DUPFD		0	/* dup */
 #define F_GETFD		1	/* get close_on_exec */
@@ -181,6 +183,7 @@
 #define O_DIRECT	0x8000	/* direct disk access hint - currently ignored */
 #define O_DIRECTORY	0x10000	/* must be a directory */
 #define O_NOFOLLOW	0x20000	/* don't follow links */
+#define O_NOATIME	0x40000
 
 #define O_NDELAY	O_NONBLOCK
 
@@ -198,6 +201,12 @@
 #define F_SETSIG	10	/*  for sockets. */
 #define F_GETSIG	11	/*  for sockets. */
 
+#ifndef __mips64__
+#define F_GETLK64	33	/*  using 'struct flock64' */
+#define F_SETLK64	34
+#define F_SETLKW64	35
+#endif
+
 /* for F_[GET|SET]FL */
 #define FD_CLOEXEC	1	/* actually anything with low bit set goes */
 
@@ -255,6 +264,8 @@
 #define O_DIRECTORY	0x10000	/* must be a directory */
 #define O_NOFOLLOW	0x20000	/* don't follow links */
 #define O_LARGEFILE	0x40000
+#define O_DIRECT        0x100000 /* direct disk access hint */
+#define O_NOATIME	0x200000
 
 #define F_DUPFD		0	/* dup */
 #define F_GETFD		1	/* get close_on_exec */
@@ -343,6 +354,7 @@
 #define O_NOFOLLOW      0100000	/* don't follow links */
 #define O_LARGEFILE     0200000
 #define O_DIRECT	0400000	/* direct disk access hint - currently ignored */
+#define O_NOATIME	01000000
 
 #define F_DUPFD		0	/* dup */
 #define F_GETFD		1	/* get close_on_exec */
@@ -426,6 +438,7 @@
 #define O_NOFOLLOW	0100000	/* don't follow links */
 #define O_DIRECT	0200000	/* direct disk access hint - currently ignored */
 #define O_LARGEFILE	0400000
+#define O_NOATIME	01000000
 
 #define F_DUPFD		0	/* dup */
 #define F_GETFD		1	/* get close_on_exec */
@@ -501,13 +514,21 @@
 #define O_CREAT     00000400 /* not fcntl */
 #define O_TRUNC     00001000 /* not fcntl */
 #define O_EXCL      00002000 /* not fcntl */
+#define O_LARGEFILE 00004000
 #define O_ASYNC     00020000
 #define O_SYNC      00100000
 #define O_NONBLOCK  00200004 /* HPUX has separate NDELAY & NONBLOCK */
 #define O_NDELAY    O_NONBLOCK
 #define O_NOCTTY    00400000 /* not fcntl */
+#define O_DSYNC     01000000 /* HPUX only */
+#define O_RSYNC     02000000 /* HPUX only */
+#define O_NOATIME   04000000
 #define O_DIRECTORY  00010000
 
+#define O_DIRECT    00040000 /* direct disk access hint - currently ignored */
+#define O_NOFOLLOW  00000200 /* don't follow links */
+#define O_INVISIBLE 04000000 /* invisible I/O, for DMAPI/XDSM */
+
 #define F_DUPFD     0   /* Duplicate file descriptor.  */
 #define F_GETFD     1   /* Get file descriptor flags.  */
 #define F_SETFD     2   /* Set file descriptor flags.  */
@@ -521,6 +542,11 @@
 #define F_SETLK64   9   /* Set record locking info (non-blocking).  */
 #define F_SETLKW64  10  /* Set record locking info (blocking).  */
 
+#define F_GETOWN    11 /*  for sockets. */
+#define F_SETOWN    12 /*  for sockets. */
+#define F_SETSIG    13 /*  for sockets. */
+#define F_GETSIG    14 /*  for sockets. */
+
 #define FD_CLOEXEC  1   /* actually anything with low bit set goes */
 
 #define F_RDLCK     1   /* Read lock.  */
@@ -530,6 +556,21 @@
 #define F_EXLCK     4   /* or 3 */
 #define F_SHLCK     8   /* or 4 */
 
+/* for leases */
+#define F_INPROGRESS   16
+
+/* operations for bsd flock(), also used by the kernel implementation */
+#define LOCK_SH                1       /* shared lock */
+#define LOCK_EX                2       /* exclusive lock */
+#define LOCK_NB                4       /* or'd with one of the above to prevent blocking */
+#define LOCK_UN                8       /* remove lock */
+
+#define LOCK_MAND      32      /* This is a mandatory flock */
+#define LOCK_READ      64      /* ... Which allows concurrent read operations */
+#define LOCK_WRITE     128     /* ... Which allows concurrent write operations */
+#define LOCK_RW                192     /* ... Which allows concurrent read & write ops */
+
+
 struct flock
 {
     short int l_type;   /* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.  */
