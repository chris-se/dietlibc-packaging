diff -urNxCVS -xdebian ../../dietlibc/CHANGES ./CHANGES
--- ../../dietlibc/CHANGES	2005-10-05 13:17:23.000000000 +0000
+++ ./CHANGES	2005-10-12 08:53:33.000000000 +0000
@@ -1,4 +1,47 @@
-0.29
+0.30:
+  put exception handling frames in read-only section on AMD64 and S/390
+  make sys/stat.h ILP64 compatible
+    (both Markus Oberhumer)
+  whoops, strptime was completely broken, and noone noticed :-)
+  fix DNS resolver to only use shorter timeout for .local queries
+  remove throw() statements for functions taking function pointer
+    arguments (qsort, besearch, ftw)
+  fix embarassing bug in pclose (Juergen Sawinski, René Rebe)
+  when asking for an IPv6 address and there is an IPv4 address in
+    /etc/hosts but not an IPv6 address, return NO_DATA without
+    querying DNS.  This is how glibc does it, and it means you can use
+    e.g. elinks to browse http://localhost/ without being connected to
+    the internet / a DNS server.
+  make libcrypt/crypt.c to work when compiled with gcc 4
+  provide toascii and ustat (Reynir Stefansson)
+  change size of struct sigaction.sa_flags from long to int on alpha.
+  beginnings of wide char string routines
+  fix regex match bug ("@(a|b)" would also match "x@z")
+  ARM big-endian support (Paul Clifford)
+  support %s in strftime, so date in embutils does :-)
+  fix two strptime bugs (Gernot Tenchio)
+  add strnlen and clearenv (for udev)
+  #define IOV_MAX in limits.h behind _XOPEN_SOURCE (for opennntpd)
+  tzfile fix (Nikola Vladov)
+  lots of fixes from Markus FX Oberhumer:
+    * better signal handling error detection
+    * setjmp.S on i386
+    * getenv on i386
+    * sys/stat.h -malign-double fix
+    * update fcntl.h for MIPS to 2.6.13 version
+    * jmp_buf is 40*8 instead of 58*8 on ppc64.
+    * This patch fixes the section of the TOC entries on ppc64
+    * libstdc++ updates for gcc 4
+    * remove cstddef and cwchar (no longer needed)
+    * int -> ssize_t for read and write
+    * sigjmp.c: __mask_was_saved was not set in all cases!
+    * another round of ILP64 cleanups
+  add ngettext, dngettext (for glib)
+  add strdupa and strndupa (for directfb)
+  add extended attribute, thread, and misc syscalls
+  Olaf: fixed my libdl code to run with gcc-4.0.x
+
+0.29:
   oops, fix LD_RUN_PATH unsetting (Enrico Scholz)
   Markus Oberhumer sent the following diffs:
     dl_iterate_phdr for libgcc_eh
diff -urNxCVS -xdebian ../../dietlibc/Makefile ./Makefile
--- ../../dietlibc/Makefile	2005-10-05 13:18:01.000000000 +0000
+++ ./Makefile	2005-10-12 08:54:22.000000000 +0000
@@ -8,7 +8,7 @@
 BINDIR=${prefix}/bin
 MAN1DIR=${prefix}/man/man1
 
-MYARCH:=$(shell uname -m | sed -e 's/i[4-9]86/i386/' -e 's/armv[3-6][lb]/arm/')
+MYARCH:=$(shell uname -m | sed -e 's/i[4-9]86/i386/' -e 's/armv[3-6]t\?e\?[lb]/arm/')
 
 # This extra-ugly cruft is here so make will not run uname and sed each
 # time it looks at $(OBJDIR).  This alone sped up running make when
@@ -100,6 +100,7 @@
 CROSS=
 
 CC=gcc
+INC=-I. -isystem include
 
 VPATH=lib:libstdio:libugly:libcruft:libcrypt:libshell:liblatin1:libcompat:libdl:librpc:libregex:libm:profiling
 
@@ -150,19 +151,28 @@
 
 % :: %,v
 
+ifeq ($(CC),tcc)
+$(OBJDIR)/%.o: %.S $(ARCH)/syscalls.h
+	$(CROSS)cpp $(INC) $< | $(CROSS)as -o $@
+
+$(OBJDIR)/%.o: %.c
+	tcc -I. -Iinclude -c $< -o $@
+	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
+else
 $(OBJDIR)/pstart.o: start.S
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -DPROFILING -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -DPROFILING -c $< -o $@
 
 $(OBJDIR)/%.o: %.S $(ARCH)/syscalls.h
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 
 $(OBJDIR)/pthread_%.o: libpthread/pthread_%.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
 
 $(OBJDIR)/%.o: %.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
+endif
 
 ifeq ($(shell $(CC) -v 2>&1 | grep "gcc version"),gcc version 4.0.0)
 SAFE_CFLAGS=$(shell echo $(CFLAGS)|sed 's/-Os/-O2/')
@@ -173,7 +183,7 @@
 endif
 
 $(OBJDIR)/crypt.o: libcrypt/crypt.c
-	$(CROSS)$(CC) -I. -isystem include $(SAFER_CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(SAFER_CFLAGS) -c $< -o $@
 
 DIETLIBC_OBJ = $(OBJDIR)/unified.o \
 $(SYSCALLOBJ) $(LIBOBJ) $(LIBSTDIOOBJ) $(LIBUGLYOBJ) \
@@ -228,21 +238,21 @@
 	$(PICODIR)/libm.so $(PICODIR)/diet-dyn $(PICODIR)/diet-dyn-i
 
 $(PICODIR)/%.o: %.S $(ARCH)/syscalls.h
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 
 $(PICODIR)/pthread_%.o: libpthread/pthread_%.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 $(PICODIR)/%.o: %.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 $(PICODIR)/dstart.o: start.S
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 
 $(PICODIR)/dyn_so_start.o: dyn_start.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -D__DYN_LIB_SHARED -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -D__DYN_LIB_SHARED -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 DYN_LIBC_PIC = $(LIBOBJ) $(LIBSTDIOOBJ) $(LIBUGLYOBJ) \
@@ -267,7 +277,7 @@
 
 $(PICODIR)/libdl.so: libdl/_dl_main.c dietfeatures.h
 	$(LD_UNSET) $(CROSS)$(CC) -D__OD_CLEAN_ROOM -DNODIETREF -fPIC -nostdlib -shared -Bsymbolic -Wl,-Bsymbolic \
-		-o $@ $(SAFE_CFLAGS) -I. -isystem include libdl/_dl_main.c -Wl,-soname=libdl.so
+		-o $@ $(SAFE_CFLAGS) $(INC) libdl/_dl_main.c -Wl,-soname=libdl.so
 
 #$(PICODIR)/libdl.so: $(DYN_LIBDL_OBJS) dietfeatures.h
 #	$(CROSS)$(CC) -nostdlib -shared -o $@ $(CFLAGS) -fPIC $(DYN_LIBDL_OBJS) -L$(PICODIR) -ldietc -Wl,-soname=libdl.so
@@ -405,7 +415,7 @@
 
 
 # these depend on dietfeatures.h for large file backward compatibility
-$(OBJDIR)/__fstat64.o $(OBJDIR)/__lstat64.o $(OBJDIR)/__stat64.o $(OBJDIR)/lseek64.o $(OBJDIR)/readdir64.o $(OBJDIR)/stat64.o $(OBJDIR)/lstat64.o $(OBJDIR)/fstat64.o $(OBJDIR)/truncate64.o $(OBJDIR)/__truncate64.o $(OBJDIR)/ftruncate64.o $(OBJDIR)/__ftruncate64.o $(OBJDIR)/sendfile64.o $(OBJDIR)/__sendfile64.o $(PICODIR)/dyn_syscalls.o $(PICODIR)/__truncate64.o $(PICODIR)/__ftruncate64.o $(PICODIR)/__stat64.o $(PICODIR)/__lstat64.o $(PICODIR)/__fstat64.o $(OBJDIR)/__sendfile64.o: dietfeatures.h
+$(OBJDIR)/__fstat64.o $(OBJDIR)/__lstat64.o $(OBJDIR)/__stat64.o $(OBJDIR)/lseek64.o $(OBJDIR)/readdir64.o $(OBJDIR)/stat64.o $(OBJDIR)/lstat64.o $(OBJDIR)/fstat64.o $(OBJDIR)/truncate64.o $(OBJDIR)/__truncate64.o $(OBJDIR)/ftruncate64.o $(OBJDIR)/__ftruncate64.o $(OBJDIR)/sendfile64.o $(OBJDIR)/__sendfile64.o $(PICODIR)/dyn_syscalls.o $(PICODIR)/__truncate64.o $(PICODIR)/__ftruncate64.o $(PICODIR)/__stat64.o $(PICODIR)/__lstat64.o $(PICODIR)/__fstat64.o $(OBJDIR)/__sendfile64.o $(OBJDIR)/fstatfs64.o $(OBJDIR)/statfs64.o: dietfeatures.h
 
 # these depend on dietfeatures.h for thread support
 $(OBJDIR)/alloc.o $(OBJDIR)/perror.o $(OBJDIR)/logging.o $(OBJDIR)/unified.o $(OBJDIR)/clone.o $(OBJDIR)/set_errno.o: dietfeatures.h
@@ -465,7 +475,7 @@
 
 # these depend on dietfeatures.h for WANT_LINKER_WARNINGS
 $(OBJDIR)/setlinebuf.o $(OBJDIR)/bzero.o $(OBJDIR)/setegid.o \
-$(OBJDIR)/seteuid.o: dietfeatures.h
+$(OBJDIR)/seteuid.o $(OBJDIR)/toascii.o: dietfeatures.h
 
 # these depend on dietfeatures.h for WANT_FULL_POSIX_COMPAT
 $(OBJDIR)/strncpy.o: dietfeatures.h
@@ -485,3 +495,6 @@
 $(LIBPTHREAD_OBJS): include/pthread.h
 
 # CFLAGS+=-W -Wshadow -Wid-clash-31 -Wpointer-arith -Wcast-align -Wstrict-prototypes -Wwrite-strings
+
+# WANT_LARGEFILE_BACKCOMPAT
+$(OBJDIR)/fcntl64.o: dietfeatures.h
diff -urNxCVS -xdebian ../../dietlibc/alpha/syscalls.h ./alpha/syscalls.h
--- ../../dietlibc/alpha/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./alpha/syscalls.h	2005-10-05 12:30:49.000000000 +0000
@@ -372,6 +372,15 @@
 #define __NR_mq_notify			436
 #define __NR_mq_getsetattr		437
 #define __NR_waitid			438
+#define __NR_add_key			439
+#define __NR_request_key		440
+#define __NR_keyctl			441
+#define __NR_ioprio_set			442
+#define __NR_ioprio_get			443
+#define __NR_inotify_init		444
+#define __NR_inotify_add_watch		445
+#define __NR_inotify_rm_watch		446
+
 
 #define syscall_weak(name,wsym,sym) \
 .text ; \
diff -urNxCVS -xdebian ../../dietlibc/arm/dyn_syscalls.S ./arm/dyn_syscalls.S
--- ../../dietlibc/arm/dyn_syscalls.S	2005-10-05 13:17:23.000000000 +0000
+++ ./arm/dyn_syscalls.S	2005-10-12 08:53:33.000000000 +0000
@@ -29,6 +29,7 @@
 
 /* ok now include all syscalls.s (*.S) and sysdep *.S */
 #include "mmap.S"
+#include "waitpid.S"
 
 #include "../syscalls.s/__getpagesize.S"
 #include "../syscalls.s/__pread.S"
@@ -176,7 +177,6 @@
 #include "../syscalls.s/utime.S"
 #include "../syscalls.s/vhangup.S"
 #include "../syscalls.s/wait4.S"
-#include "../syscalls.s/waitpid.S"
 #include "../syscalls.s/write.S"
 #include "../syscalls.s/writev.S"
 #include "../syscalls.s/msync.S"
@@ -203,6 +203,79 @@
 #include "../syscalls.s/ptrace.S"
 #include "../syscalls.s/ftruncate64.S"
 #include "../syscalls.s/truncate64.S"
+#include "../syscalls.s/ustat.S"
+#include "../syscalls.s/epoll_create.S"
+#include "../syscalls.s/epoll_ctl.S"
+#include "../syscalls.s/epoll_wait.S"
+#include "../syscalls.s/fcntl64.S"
+
+#include "../syscalls.s/timer_create.S"
+#include "../syscalls.s/timer_settime.S"
+#include "../syscalls.s/timer_gettime.S"
+#include "../syscalls.s/timer_getoverrun.S"
+#include "../syscalls.s/timer_delete.S"
+
+#include "../syscalls.s/clock_settime.S"
+#include "../syscalls.s/clock_gettime.S"
+#include "../syscalls.s/clock_getres.S"
+#include "../syscalls.s/clock_nanosleep.S"
+
+#include "../syscalls.s/mq_getsetattr.S"
+#include "../syscalls.s/mq_notify.S"
+#include "../syscalls.s/mq_open.S"
+#include "../syscalls.s/mq_timedreceive.S"
+#include "../syscalls.s/mq_timedsend.S"
+#include "../syscalls.s/mq_unlink.S"
+
+#include "../syscalls.s/statfs64.S"
+#include "../syscalls.s/fstatfs64.S"
+
+#include "../syscalls.s/tkill.S"
+#include "../syscalls.s/tgkill.S"
+#include "../syscalls.s/set_tid_address.S"
+#include "../syscalls.s/set_thread_area.S"
+#include "../syscalls.s/set_mempolicy.S"
+#include "../syscalls.s/rt_sigreturn.S"
+#include "../syscalls.s/gettid.S"
+#include "../syscalls.s/get_thread_area.S"
+
+#include "../syscalls.s/remap_file_pages.S"
+#include "../syscalls.s/readahead.S"
+#include "../syscalls.s/quotactl.S"
+#include "../syscalls.s/mincore.S"
+#include "../syscalls.s/mbind.S"
+#include "../syscalls.s/get_mempolicy.S"
+#include "../syscalls.s/futex.S"
+#include "../syscalls.s/fadvise64.S"
+#include "../syscalls.s/fadvise64_64.S"
+#include "../syscalls.s/vserver.S"
+
+#include "../syscalls.s/request_key.S"
+#include "../syscalls.s/keyctl.S"
+#include "../syscalls.s/add_key.S"
+
+#include "../syscalls.s/io_submit.S"
+#include "../syscalls.s/io_setup.S"
+#include "../syscalls.s/io_getevents.S"
+#include "../syscalls.s/io_destroy.S"
+#include "../syscalls.s/io_cancel.S"
+
+#include "../syscalls.s/inotify_rm_watch.S"
+#include "../syscalls.s/inotify_init.S"
+#include "../syscalls.s/inotify_add_watch.S"
+
+#include "../syscalls.s/setxattr.S"
+#include "../syscalls.s/lsetxattr.S"
+#include "../syscalls.s/fsetxattr.S"
+#include "../syscalls.s/removexattr.S"
+#include "../syscalls.s/lremovexattr.S"
+#include "../syscalls.s/fremovexattr.S"
+#include "../syscalls.s/listxattr.S"
+#include "../syscalls.s/llistxattr.S"
+#include "../syscalls.s/flistxattr.S"
+#include "../syscalls.s/getxattr.S"
+#include "../syscalls.s/lgetxattr.S"
+#include "../syscalls.s/fgetxattr.S"
 
 /* other asm-files w.o. changes ... */
 __exit:
diff -urNxCVS -xdebian ../../dietlibc/arm/strcpy.S ./arm/strcpy.S
--- ../../dietlibc/arm/strcpy.S	2005-10-05 13:17:23.000000000 +0000
+++ ./arm/strcpy.S	2005-07-25 14:53:14.000000000 +0000
@@ -1,39 +1,66 @@
+#include "dietfeatures.h"
+
 .text
 	.align	2
 	.global	strcpy
-	.type	 strcpy,function
+
 strcpy:
-	mov	ip, r0
 #ifndef WANT_SMALL_STRING_ROUTINES
+	mov	ip, r0
 	ands	r2, r1, #3
 	ldr	r3, [r1, -r2]!
 	movne	r2, r2, lsl #3
+#ifdef __ARMEB__
+	movne	r3, r3, lsl r2
+#else
 	movne	r3, r3, lsr r2
+#endif
 	addne	pc, pc, r2, lsl #1
 	mov	r0, r0			@ nop
 .Lloop:
+#ifdef __ARMEB__
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
+	mov	r3, r3, ror #24
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	ldrne	r3, [r1, #4]!
+#else
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
 	ldrne	r3, [r1, #4]!
+#endif
 #else
+	ldrb	r2, [r1], #1
+	mov	r3, r0
 .Lloop:
-	ldrb	r3, [ip], #1
-	strb	r3, [r1], #1
-	tst	r3, #255
+	strb	r2, [r3], #1
+	tst	r2, #255
+	ldrneb	r2, [r1], #1
 #endif
 	bne	.Lloop
-	movs	pc, lr
+	mov	pc, lr
 .Lfe1:
 	.size	 strcpy,.Lfe1-strcpy
diff -urNxCVS -xdebian ../../dietlibc/arm/strlen.S ./arm/strlen.S
--- ../../dietlibc/arm/strlen.S	2005-10-05 13:17:23.000000000 +0000
+++ ./arm/strlen.S	2005-07-25 14:53:14.000000000 +0000
@@ -1,3 +1,4 @@
+#include "dietfeatures.h"
 
 	.text
 	.align	2
@@ -11,16 +12,21 @@
 	moveq	pc, lr			@ if so, return 0
 #endif
 
+#ifndef WANT_SMALL_STRING_ROUTINES
 	ands	a3, a1, #3
 	ldr	ip, .Lmagic
-	rsb	a2, a1, #0
+	mov	a2, a1
 	ldr	a4, [a1, -a3]!
 
 	/* ensure junk bytes aren't nulls */
 
 	rsbne	a3, a3, #4
 	movne	a3, a3, lsl #3
+#ifdef __ARMEB__
+	orrne	a4, a4, ip, lsl a3
+#else
 	orrne	a4, a4, ip, lsr a3
+#endif
 
 .Lloop:
 	sub	a3, a4, ip
@@ -31,17 +37,36 @@
 
 	/* a3 & 0x80808080 == a3 */
 
-	sub	a3, a3, #1
-	tst	a3, #0x10000
-	movne	a3, a3, lsr #16
-	addne	a1, a1, #2
-	movs	a3, a3, lsr #9
-	adc	a1, a1, a2
+#ifdef __ARMEB__
+	tst	a3, ip, lsl #16 + 7
+	moveq	a3, a3, lsl #16
+	addeq	a1, a1, #2
+	tst	a3, #0x80000000
+	addeq	a1, a1, #1
+#else
+	tst	a3, ip, lsr #16 - 7
+	moveq	a3, a3, lsr #16
+	addeq	a1, a1, #2
+	tst	a3, #0x80
+	addeq	a1, a1, #1
+#endif
+	sub	a1, a1, a2
+#else
+	ldrb	a3, [a1], #1
+	mov	a2, a1
+.Lloop:
+	tst	a3, #255
+	ldrneb	a3, [a1], #1
+	bne	.Lloop
+	sub	a1, a1, a2
+#endif
 
 	mov	pc, lr
 
+#ifndef WANT_SMALL_STRING_ROUTINES
 .Lmagic:
 	.word	0x01010101
+#endif
 
 .Lstrlen:
 	.size	strlen,.Lstrlen-strlen
diff -urNxCVS -xdebian ../../dietlibc/arm/syscalls.h ./arm/syscalls.h
--- ../../dietlibc/arm/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./arm/syscalls.h	2005-10-12 08:53:33.000000000 +0000
@@ -281,6 +281,16 @@
 #define __NR_mq_getsetattr		(__NR_SYSCALL_BASE+279)
 #define __NR_waitid			(__NR_SYSCALL_BASE+280)
 
+#define __NR_add_key			(__NR_SYSCALL_BASE+309)
+#define __NR_request_key		(__NR_SYSCALL_BASE+310)
+#define __NR_keyctl			(__NR_SYSCALL_BASE+311)
+#define __NR_vserver			(__NR_SYSCALL_BASE+313)
+#define __NR_ioprio_set			(__NR_SYSCALL_BASE+314)
+#define __NR_ioprio_get			(__NR_SYSCALL_BASE+315)
+#define __NR_inotify_init		(__NR_SYSCALL_BASE+316)
+#define __NR_inotify_add_watch		(__NR_SYSCALL_BASE+317)
+#define __NR_inotify_rm_watch		(__NR_SYSCALL_BASE+318)
+
 
 /* ok the next few values are for the optimization of the unified syscalls
  * on arm.
@@ -562,6 +572,7 @@
 #define __ARGS_tgkill			0
 #define __ARGS_utimes			0
 
+#define __ARGS_fadvise64		0
 #define __ARGS_fadvise64_64		0
 #define __ARGS_pciconfig_iobase		0
 #define __ARGS_pciconfig_read		1
@@ -574,6 +585,17 @@
 #define __ARGS_mq_getsetattr		0
 #define __ARGS_waitid			0
 
+#define __ARGS_add_key			5
+#define __ARGS_request_key		4
+#define __ARGS_keyctl			3
+#define __ARGS_vserver			3
+#define __ARGS_ioprio_set		3
+#define __ARGS_ioprio_get		2
+#define __ARGS_inotify_init		0
+#define __ARGS_inotify_add_watch	3
+#define __ARGS_inotify_rm_watch		2
+
+
 #ifdef __ASSEMBLER__
 #define syscall_weak(name,wsym,sym) __syscall_weak $__NR_##name, wsym, sym, __ARGS_##name
 .macro __syscall_weak name wsym sym typ
diff -urNxCVS -xdebian ../../dietlibc/diet.c ./diet.c
--- ../../dietlibc/diet.c	2005-10-05 13:17:23.000000000 +0000
+++ ./diet.c	2005-07-31 09:47:16.000000000 +0000
@@ -285,15 +285,17 @@
 
       dest=newargv;
       *dest++=argv[1];
-      if (!strcmp(argv[2],"-V")) {
-	*dest++=argv[2];
-	*dest++=argv[3];
-	argv+=2;
-	argc-=2;
-      } else if (!memcmp(argv[2],"-V",2)) {
-	*dest++=argv[2];
-	++argv;
-	--argc;
+      if (argv[2]) {
+	if (!strcmp(argv[2],"-V")) {
+	  *dest++=argv[2];
+	  *dest++=argv[3];
+	  argv+=2;
+	  argc-=2;
+	} else if (!memcmp(argv[2],"-V",2)) {
+	  *dest++=argv[2];
+	  ++argv;
+	  --argc;
+	}
       }
 #ifndef __DYN_LIB
       if (_link) { *dest++=(char*)nostdlib; *dest++=dashstatic; *dest++=dashL; }
diff -urNxCVS -xdebian ../../dietlibc/dietstdio.h ./dietstdio.h
--- ../../dietlibc/dietstdio.h	2005-10-05 13:17:23.000000000 +0000
+++ ./dietstdio.h	2005-10-05 12:30:49.000000000 +0000
@@ -17,9 +17,9 @@
 struct __stdio_file {
   int fd;
   int flags;
-  unsigned int bs;	/* read: bytes in buffer */
-  unsigned int bm;	/* position in buffer */
-  unsigned int buflen;	/* length of buf */
+  uint32_t bs;	/* read: bytes in buffer */
+  uint32_t bm;	/* position in buffer */
+  uint32_t buflen;	/* length of buf */
   char *buf;
   struct __stdio_file *next;	/* for fflush */
   pid_t popen_kludge;
@@ -81,8 +81,8 @@
 #ifndef __THREAD_INTERNAL_H__
 int __libc_close(int fd);
 int __libc_open(const char*fn,int flags,...);
-int __libc_read(int fd,void*buf,int len);
-int __libc_write(int fd,const void*buf,int len);
+ssize_t __libc_read(int fd,void*buf,size_t len);
+ssize_t __libc_write(int fd,const void*buf,size_t len);
 #endif
 
 FILE *fopen_unlocked(const char *path, const char *mode) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/dyn_start.c ./dyn_start.c
--- ../../dietlibc/dyn_start.c	2005-10-05 13:17:23.000000000 +0000
+++ ./dyn_start.c	2005-10-05 12:30:49.000000000 +0000
@@ -15,16 +15,29 @@
 typedef void(*structor)(void);
 
 __attribute__((section(".ctors")))
+__attribute__((aligned(sizeof(structor))))
 __attribute_used
 static structor __CTOR_LIST__[1]={((structor)-1)};
 
 __attribute__((section(".dtors")))
+__attribute__((aligned(sizeof(structor))))
 __attribute_used
 static structor __DTOR_LIST__[1]={((structor)-1)};
 
+/* see gcc-3.4/gcc/crtstuff.c */
+#if !defined(EH_FRAME_SECTION_CONST)
+#if defined(__s390__) || defined(__x86_64__)
+# define EH_FRAME_SECTION_CONST const
+#endif
+#endif
+#if !defined(EH_FRAME_SECTION_CONST)
+# define EH_FRAME_SECTION_CONST
+#endif
+
 __attribute__((section(".eh_frame")))
+__attribute__((aligned(sizeof(structor))))
 __attribute_used
-char __EH_FRAME_BEGIN__[] = { };
+EH_FRAME_SECTION_CONST char __EH_FRAME_BEGIN__[] = { };
 
 
 static void __do_global_dtors_aux(void)
diff -urNxCVS -xdebian ../../dietlibc/dyn_stop.c ./dyn_stop.c
--- ../../dietlibc/dyn_stop.c	2005-10-05 13:17:23.000000000 +0000
+++ ./dyn_stop.c	2005-06-08 07:50:27.000000000 +0000
@@ -14,12 +14,22 @@
 __attribute_used
 static structor __DTOR_END__[1]={((structor)0)};
 
+/* see gcc-3.4/gcc/crtstuff.c */
+#if !defined(EH_FRAME_SECTION_CONST)
+#if defined(__s390__) || defined(__x86_64__)
+# define EH_FRAME_SECTION_CONST const
+#endif
+#endif
+#if !defined(EH_FRAME_SECTION_CONST)
+# define EH_FRAME_SECTION_CONST
+#endif
+
 __attribute__((section(".eh_frame")))
 __attribute_used
 #if __WORDSIZE == 32
-char __FRAME_END__[4] = { 0, 0, 0, 0 };
+EH_FRAME_SECTION_CONST char __FRAME_END__[4] = { 0, 0, 0, 0 };
 #else
-char __FRAME_END__[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
+EH_FRAME_SECTION_CONST char __FRAME_END__[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 #endif
 
 static void __do_global_ctors_aux(void)
diff -urNxCVS -xdebian ../../dietlibc/i386/.#dyn_syscalls.S.1.38 ./i386/.#dyn_syscalls.S.1.38
--- ../../dietlibc/i386/.#dyn_syscalls.S.1.38	1970-01-01 00:00:00.000000000 +0000
+++ ./i386/.#dyn_syscalls.S.1.38	2005-10-05 13:14:18.000000000 +0000
@@ -0,0 +1,340 @@
+/*
+ * dynamic unified-syscalls
+ * Olaf Dreesen
+ */
+
+#include "../syscalls.s/environ.S"
+#include "../syscalls.s/errno.S"
+
+#include <dietfeatures.h>
+#include "syscalls.h"
+#include "PIC.h"
+
+#ifdef WANT_SYSENTER
+.data
+.type __vsyscall,@object
+.global __vsyscall
+__vsyscall:
+.Lvsyscall:
+.long	.Lcallint80
+
+.text
+.Lcallint80:
+	int	$0x80
+	ret
+#endif
+
+/* ok now include all syscalls.s (*.S) and sysdep *.S */
+
+#include "mmap.S"
+
+/* here on i386 I had split them some pre- some post-unified-syscall,
+ * because the jumps pre-u.s.c. have only a 1 byte displacement. the first
+ * post-u.s.c. have also 1 byte dsplacement the rest a 4 byte.
+ * this pre/post split saves about 250 byte of code ....
+ *
+ * Please put additional syscalls AFTER the post-u.s.c. 
+ * or try to not break the savings :) */
+
+#include "select.S"
+
+#include "../syscalls.s/fork.S"
+#include "../syscalls.s/read.S"
+#include "../syscalls.s/write.S"
+#include "../syscalls.s/open.S"
+#include "../syscalls.s/close.S"
+#include "../syscalls.s/waitpid.S"
+
+#include "../syscalls.s/getgid.S"
+#include "../syscalls.s/getpgid.S"
+#include "../syscalls.s/getpid.S"
+#include "../syscalls.s/getppid.S"
+#include "../syscalls.s/getuid.S"
+#include "../syscalls.s/kill.S"
+#include "../syscalls.s/ioctl.S"
+#include "../syscalls.s/_llseek.S"
+#include "../syscalls.s/lseek.S"
+#include "../syscalls.s/lstat.S"
+#include "../syscalls.s/lstat64.S"
+#include "../syscalls.s/mkdir.S"
+#include "../syscalls.s/mprotect.S"
+#include "../syscalls.s/nanosleep.S"
+#include "../syscalls.s/pipe.S"
+#include "../syscalls.s/poll.S"
+#include "../syscalls.s/readv.S"
+#include "../syscalls.s/stat.S"
+#include "../syscalls.s/stat64.S"
+#include "../syscalls.s/truncate.S"
+#include "../syscalls.s/umask.S"
+#include "../syscalls.s/wait4.S"
+#include "../syscalls.s/writev.S"
+#include "../syscalls.s/__getpagesize.S"
+#include "../syscalls.s/ustat.S"
+#include "../syscalls.s/__statfs64.S"
+#include "../syscalls.s/__fstatfs64.S"
+
+/* OK this is basicaly unified.S */
+.text
+.type __you_tried_to_link_a_dietlibc_object_against_glibc,@function
+.type __nop,@function
+.type __unified_syscall_256,@function
+__unified_syscall_256:
+	movzwl	%ax, %eax
+	jmp	1f
+.size __unified_syscall_256,.-__unified_syscall_256
+.type exit,@function
+.weak exit
+exit:
+.type _exit,@function
+.type __exit,@function
+.global _exit
+_exit:
+__exit:
+	mov $__NR_exit, %al
+.type __unified_syscall,@function
+__unified_syscall:
+	movzbl	%al, %eax
+1:
+	push	%edi
+	push	%esi
+	push	%ebx
+	movl	%esp,%edi
+#ifdef WANT_SYSENTER
+	/* PIC-code ... */
+	pushl	%ebp
+	PIC_INIT
+	movl	.Lvsyscall@GOTOFF(%ebx),%ebp
+	pushl	%ebx
+#endif
+	movl	0x10(%edi),%ebx
+	movl	0x14(%edi),%ecx
+	movl	0x18(%edi),%edx
+	movl	0x1c(%edi),%esi
+	movl	0x20(%edi),%edi
+#ifdef WANT_SYSENTER
+	call	*%ebp
+	popl	%ebx
+	popl	%ebp
+#else
+	int	$0x80
+#endif
+	cmp	$-124,%eax
+	jbe	.Lnoerror
+	neg	%eax
+
+	/* PIC-code Ohhhhh My. */
+	push	%eax
+#ifndef WANT_SYSENTER
+	PIC_INIT
+#endif
+	call	__errno_location@PLT
+	popl	%ebx
+	movl	%ebx,(%eax)
+	orl	$-1,%eax
+.Lnoerror:
+	pop	%ebx
+	pop	%esi
+	pop	%edi
+#include "dietuglyweaks.h"
+	ret
+
+#include "../syscalls.s/__pread.S"
+#include "../syscalls.s/__pwrite.S"
+#include "../syscalls.s/__reboot.S"
+#include "../syscalls.s/access.S"
+#include "../syscalls.s/adjtimex.S"
+#include "../syscalls.s/brk.S"
+#include "../syscalls.s/chdir.S"
+#include "../syscalls.s/chmod.S"
+#include "../syscalls.s/chown.S"
+#include "../syscalls.s/chroot.S"
+#include "../syscalls.s/dup.S"
+#include "../syscalls.s/dup2.S"
+#include "../syscalls.s/execve.S"
+#include "../syscalls.s/fchdir.S"
+#include "../syscalls.s/fchmod.S"
+#include "../syscalls.s/fchown.S"
+#include "../syscalls.s/fcntl.S"
+#include "../syscalls.s/flock.S"
+#include "../syscalls.s/fstat.S"
+#include "../syscalls.s/fstat64.S"
+#include "../syscalls.s/fstatfs.S"
+#include "../syscalls.s/fsync.S"
+#include "../syscalls.s/fdatasync.S"
+#include "../syscalls.s/ftruncate.S"
+#include "../syscalls.s/getcwd.S"
+#include "../syscalls.s/getdents.S"
+#include "../syscalls.s/getdents64.S"
+#include "../syscalls.s/getegid.S"
+#include "../syscalls.s/geteuid.S"
+#include "../syscalls.s/getgroups.S"
+#include "../syscalls.s/getitimer.S"
+#include "../syscalls.s/getpriority.S"
+#include "../syscalls.s/getresgid.S"
+#include "../syscalls.s/getresuid.S"
+#include "../syscalls.s/getrlimit.S"
+#include "../syscalls.s/getrusage.S"
+#include "../syscalls.s/getsid.S"
+#include "../syscalls.s/gettimeofday.S"
+#include "../syscalls.s/settimeofday.S"
+#include "../syscalls.s/ioperm.S"
+#include "../syscalls.s/iopl.S"
+#include "../syscalls.s/ipc.S"
+#include "../syscalls.s/lchown.S"
+#include "../syscalls.s/link.S"
+#include "../syscalls.s/mknod.S"
+#include "../syscalls.s/mlock.S"
+#include "../syscalls.s/mlockall.S"
+#include "../syscalls.s/mount.S"
+#include "../syscalls.s/mq_getsetattr.S"
+#include "../syscalls.s/mq_notify.S"
+#include "../syscalls.s/mq_open.S"
+#include "../syscalls.s/mq_timedreceive.S"
+#include "../syscalls.s/mq_timedsend.S"
+#include "../syscalls.s/mq_unlink.S"
+#include "../syscalls.s/mremap.S"
+#include "../syscalls.s/munlockall.S"
+#include "../syscalls.s/munmap.S"
+#include "../syscalls.s/n_sigaction.S"
+#include "../syscalls.s/n_sigpending.S"
+#include "../syscalls.s/n_sigprocmask.S"
+#include "../syscalls.s/n_sigsuspend.S"
+#include "../syscalls.s/nice.S"
+#include "../syscalls.s/pause.S"
+#include "../syscalls.s/personality.S"
+#include "../syscalls.s/query_module.S"
+#include "../syscalls.s/init_module.S"
+#include "../syscalls.s/delete_module.S"
+#include "../syscalls.s/create_module.S"
+#include "../syscalls.s/readlink.S"
+#include "../syscalls.s/rename.S"
+#include "../syscalls.s/rmdir.S"
+#include "../syscalls.s/rt_sigaction.S"
+#include "../syscalls.s/rt_sigpending.S"
+#include "../syscalls.s/rt_sigprocmask.S"
+#include "../syscalls.s/rt_sigqueueinfo.S"
+#include "../syscalls.s/rt_sigsuspend.S"
+#include "../syscalls.s/rt_sigtimedwait.S"
+#include "../syscalls.s/sched_get_priority_max.S"
+#include "../syscalls.s/sched_get_priority_min.S"
+#include "../syscalls.s/sched_getparam.S"
+#include "../syscalls.s/sched_getscheduler.S"
+#include "../syscalls.s/sched_rr_get_interval.S"
+#include "../syscalls.s/sched_setparam.S"
+#include "../syscalls.s/sched_setscheduler.S"
+#include "../syscalls.s/sched_yield.S"
+#include "../syscalls.s/sendfile.S"
+#include "../syscalls.s/setdomainname.S"
+#include "../syscalls.s/setfsgid.S"
+#include "../syscalls.s/setfsuid.S"
+#include "../syscalls.s/setgid.S"
+#include "../syscalls.s/setgroups.S"
+#include "../syscalls.s/sethostname.S"
+#include "../syscalls.s/setitimer.S"
+#include "../syscalls.s/setpgid.S"
+#include "../syscalls.s/setpriority.S"
+#include "../syscalls.s/setregid.S"
+#include "../syscalls.s/setresgid.S"
+#include "../syscalls.s/setresuid.S"
+#include "../syscalls.s/setreuid.S"
+#include "../syscalls.s/setrlimit.S"
+#include "../syscalls.s/setsid.S"
+#include "../syscalls.s/setuid.S"
+#include "../syscalls.s/sigaltstack.S"
+#include "../syscalls.s/statfs.S"
+#include "../syscalls.s/stime.S"
+#include "../syscalls.s/swapoff.S"
+#include "../syscalls.s/swapon.S"
+#include "../syscalls.s/symlink.S"
+#include "../syscalls.s/sync.S"
+#include "../syscalls.s/sysctl.S"
+#include "../syscalls.s/sysinfo.S"
+#include "../syscalls.s/syslog.S"
+#include "../syscalls.s/time.S"
+#include "../syscalls.s/times.S"
+#include "../syscalls.s/umount.S"
+#include "../syscalls.s/umount2.S"
+#include "../syscalls.s/uname.S"
+#include "../syscalls.s/unlink.S"
+#include "../syscalls.s/utime.S"
+#include "../syscalls.s/vhangup.S"
+#include "../syscalls.s/msync.S"
+
+#include "../syscalls.s/chown32.S"
+#include "../syscalls.s/fchown32.S"
+#include "../syscalls.s/getegid32.S"
+#include "../syscalls.s/geteuid32.S"
+#include "../syscalls.s/getgid32.S"
+#include "../syscalls.s/getgroups32.S"
+#include "../syscalls.s/getresgid32.S"
+#include "../syscalls.s/getuid32.S"
+#include "../syscalls.s/lchown32.S"
+#include "../syscalls.s/setfsgid32.S"
+#include "../syscalls.s/setfsuid32.S"
+#include "../syscalls.s/setgid32.S"
+#include "../syscalls.s/setregid32.S"
+#include "../syscalls.s/setresgid32.S"
+#include "../syscalls.s/setreuid32.S"
+#include "../syscalls.s/setuid32.S"
+#include "../syscalls.s/alarm.S"
+#include "../syscalls.s/ptrace.S"
+#include "../syscalls.s/truncate64.S"
+#include "../syscalls.s/ftruncate64.S"
+#include "../syscalls.s/epoll_create.S"
+#include "../syscalls.s/epoll_ctl.S"
+#include "../syscalls.s/epoll_wait.S"
+#include "../syscalls.s/sendfile64.S"
+#include "../syscalls.s/sysfs.S"
+#include "../syscalls.s/capget.S"
+#include "../syscalls.s/capset.S"
+#include "../syscalls.s/fcntl64.S"
+
+#include "../syscalls.s/timer_create.S"
+#include "../syscalls.s/timer_settime.S"
+#include "../syscalls.s/timer_gettime.S"
+#include "../syscalls.s/timer_getoverrun.S"
+#include "../syscalls.s/timer_delete.S"
+
+#include "../syscalls.s/clock_settime.S"
+#include "../syscalls.s/clock_gettime.S"
+#include "../syscalls.s/clock_getres.S"
+
+#undef __PIC__
+#undef __socketcall
+/* oh what a kludge! */
+#define socketcall .Lsocketcall
+#include "send.S"
+#include "recv.S"
+#include "socket.S"
+#include "accept.S"
+#include "shutdown.S"
+#include "socketpair.S"
+#include "setsockopt.S"
+#include "sendto.S"
+#include "sendmsg.S"
+#include "recvmsg.S"
+#include "recvfrom.S"
+#include "listen.S"
+#include "getsockopt.S"
+#include "getsockname.S"
+#include "getpeername.S"
+#include "connect.S"
+#include "bind.S"
+#undef socketcall
+.Lsocketcall:
+#include "socketcall.S"
+#define __PIC__
+#undef __socketcall
+
+
+/* so now this was the last u.s.c. */
+
+/* other asm-files ... */
+#define PIC
+
+#define _exit __exit
+#include "clone.S"
+#undef _exit
+
+#include "__longjmp.S"
+#include "setjmp.S"
diff -urNxCVS -xdebian ../../dietlibc/i386/__restore_rt.S ./i386/__restore_rt.S
--- ../../dietlibc/i386/__restore_rt.S	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/__restore_rt.S	2005-10-05 12:30:49.000000000 +0000
@@ -1,12 +1,22 @@
 #include "syscalls.h"
+
 .text
 .type   __restore_rt,@function
 .global __restore_rt
-
+.align 8
 __restore_rt:
-	popl %eax
-	mov $__NR_sigreturn,%eax
+	movl $__NR_rt_sigreturn,%eax
 	int $0x80
+	hlt	/* die if syscall returns */
+.size    __restore_rt,.-__restore_rt
 
-.Lend:
-.size    __restore_rt,..Lend-__restore_rt
+.text
+.type   __restore,@function
+.global __restore
+.align 8
+__restore:
+	popl %eax
+	movl $__NR_sigreturn,%eax
+	int $0x80
+	hlt	/* die if syscall returns */
+.size    __restore,.-__restore
diff -urNxCVS -xdebian ../../dietlibc/i386/dyn_syscalls.S ./i386/dyn_syscalls.S
--- ../../dietlibc/i386/dyn_syscalls.S	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/dyn_syscalls.S	2005-10-12 08:54:23.000000000 +0000
@@ -69,6 +69,7 @@
 #include "../syscalls.s/wait4.S"
 #include "../syscalls.s/writev.S"
 #include "../syscalls.s/__getpagesize.S"
+#include "../syscalls.s/ustat.S"
 
 /* OK this is basicaly unified.S */
 .text
@@ -278,6 +279,7 @@
 #include "../syscalls.s/sysfs.S"
 #include "../syscalls.s/capget.S"
 #include "../syscalls.s/capset.S"
+#include "../syscalls.s/fcntl64.S"
 
 #include "../syscalls.s/timer_create.S"
 #include "../syscalls.s/timer_settime.S"
@@ -288,6 +290,64 @@
 #include "../syscalls.s/clock_settime.S"
 #include "../syscalls.s/clock_gettime.S"
 #include "../syscalls.s/clock_getres.S"
+#include "../syscalls.s/clock_nanosleep.S"
+
+#include "../syscalls.s/mq_getsetattr.S"
+#include "../syscalls.s/mq_notify.S"
+#include "../syscalls.s/mq_open.S"
+#include "../syscalls.s/mq_timedreceive.S"
+#include "../syscalls.s/mq_timedsend.S"
+#include "../syscalls.s/mq_unlink.S"
+
+#include "../syscalls.s/statfs64.S"
+#include "../syscalls.s/fstatfs64.S"
+
+#include "../syscalls.s/tkill.S"
+#include "../syscalls.s/tgkill.S"
+#include "../syscalls.s/set_tid_address.S"
+#include "../syscalls.s/set_thread_area.S"
+#include "../syscalls.s/set_mempolicy.S"
+#include "../syscalls.s/rt_sigreturn.S"
+#include "../syscalls.s/gettid.S"
+#include "../syscalls.s/get_thread_area.S"
+
+#include "../syscalls.s/remap_file_pages.S"
+#include "../syscalls.s/readahead.S"
+#include "../syscalls.s/quotactl.S"
+#include "../syscalls.s/mincore.S"
+#include "../syscalls.s/mbind.S"
+#include "../syscalls.s/get_mempolicy.S"
+#include "../syscalls.s/futex.S"
+#include "../syscalls.s/fadvise64.S"
+#include "../syscalls.s/fadvise64_64.S"
+#include "../syscalls.s/vserver.S"
+
+#include "../syscalls.s/request_key.S"
+#include "../syscalls.s/keyctl.S"
+#include "../syscalls.s/add_key.S"
+
+#include "../syscalls.s/io_submit.S"
+#include "../syscalls.s/io_setup.S"
+#include "../syscalls.s/io_getevents.S"
+#include "../syscalls.s/io_destroy.S"
+#include "../syscalls.s/io_cancel.S"
+
+#include "../syscalls.s/inotify_rm_watch.S"
+#include "../syscalls.s/inotify_init.S"
+#include "../syscalls.s/inotify_add_watch.S"
+
+#include "../syscalls.s/setxattr.S"
+#include "../syscalls.s/lsetxattr.S"
+#include "../syscalls.s/fsetxattr.S"
+#include "../syscalls.s/removexattr.S"
+#include "../syscalls.s/lremovexattr.S"
+#include "../syscalls.s/fremovexattr.S"
+#include "../syscalls.s/listxattr.S"
+#include "../syscalls.s/llistxattr.S"
+#include "../syscalls.s/flistxattr.S"
+#include "../syscalls.s/getxattr.S"
+#include "../syscalls.s/lgetxattr.S"
+#include "../syscalls.s/fgetxattr.S"
 
 #undef __PIC__
 #undef __socketcall
diff -urNxCVS -xdebian ../../dietlibc/i386/getenv.S ./i386/getenv.S
--- ../../dietlibc/i386/getenv.S	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/getenv.S	2005-10-05 12:30:49.000000000 +0000
@@ -15,13 +15,13 @@
 	not %ecx
 	dec %ecx
 	pushl %ecx
-	movl (%edx), %ecx
+	movzbl (%edx), %ecx
 
 	GET_1VAR environ, %esi		# non-PIC: movl environ, %esi
 	jmp .Lloop
 
 .Lprepare:
-	movl (%edx), %ecx
+	movzbl (%edx), %ecx
 	movl %eax, %esi
 .Lloop:
 	lodsl
diff -urNxCVS -xdebian ../../dietlibc/i386/setjmp.S ./i386/setjmp.S
--- ../../dietlibc/i386/setjmp.S	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/setjmp.S	2005-10-05 12:30:49.000000000 +0000
@@ -7,24 +7,30 @@
 .globl __setjmp
 .type __setjmp,@function
 __setjmp:
-	popl %eax
-	popl %ecx
-	pushl $0
-	pushl %ecx
-	pushl %eax
+	movl	0(%esp), %ecx	/* Save PC we are returning to now.  */
+	leal	4(%esp), %edx	/* Save SP as it will be after we return.  */
+	movl	(%edx), %eax
+
+	pushl	$0
+	pushl	%eax
+	call	__sigsetjmp_internal
+	add	$8,%esp
+	ret
+
 
 .globl __sigsetjmp
 .type __sigsetjmp,@function
 __sigsetjmp:
-	movl 4(%esp), %eax
+	movl	0(%esp), %ecx	/* Save PC we are returning to now.  */
+	leal	4(%esp), %edx	/* Save SP as it will be after we return.  */
+	movl	(%edx), %eax
 
+__sigsetjmp_internal:
 	/* Save registers.  */
 	movl %ebx, (JB_BX*4)(%eax)
 	movl %esi, (JB_SI*4)(%eax)
 	movl %edi, (JB_DI*4)(%eax)
 	movl %ebp, (JB_BP*4)(%eax)
-	leal 4(%esp), %edx	/* Save SP as it will be after we return.  */
-	movl 0(%esp), %ecx	/* Save PC we are returning to now.  */
 	movl %edx, (JB_SP*4)(%eax)
 	movl %ecx, (JB_PC*4)(%eax)
 
diff -urNxCVS -xdebian ../../dietlibc/i386/sigaction.c ./i386/sigaction.c
--- ../../dietlibc/i386/sigaction.c	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/sigaction.c	2005-10-05 12:30:49.000000000 +0000
@@ -5,23 +5,7 @@
 int __rt_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact, long nr);
 
 void __restore_rt(void);
-
-#define RESTORE(name, syscall) \
-asm                                             \
-  (                                             \
-   ".text\n"                                    \
-   "    .align 8\n"                             \
-   "__" #name ":\n"                             \
-   "    popl %eax\n"                            \
-   "    movl $" #syscall ", %eax\n"             \
-   "    int  $0x80"                             \
-   );
-
-//RESTORE (restore_rt, __NR_rt_sigreturn)
-//RESTORE (restore, __NR_sigreturn)
-
-extern void restore_rt (void) asm ("__restore_rt");
-extern void restore (void) asm ("__restore");
+void __restore(void);
 
 int __libc_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);
 int __libc_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact) {
@@ -30,7 +14,7 @@
     newact = alloca(sizeof(*newact));
     newact->sa_handler = act->sa_handler;
     newact->sa_flags = act->sa_flags | SA_RESTORER;
-    newact->sa_restorer = __restore_rt;
+    newact->sa_restorer = (act->sa_flags & SA_SIGINFO) ? &__restore_rt : &__restore;
     newact->sa_mask = act->sa_mask;
   }
   return __rt_sigaction(signum, newact, oldact, _NSIG/8);
diff -urNxCVS -xdebian ../../dietlibc/i386/syscalls.h ./i386/syscalls.h
--- ../../dietlibc/i386/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./i386/syscalls.h	2005-10-05 12:30:49.000000000 +0000
@@ -287,6 +287,12 @@
 #define __NR_add_key		286
 #define __NR_request_key	287
 #define __NR_keyctl		288
+#define __NR_ioprio_set		289
+#define __NR_ioprio_get		290
+#define __NR_inotify_init	291
+#define __NR_inotify_add_watch	292
+#define __NR_inotify_rm_watch	293
+
 
 #define syscall_weak(name,wsym,sym) \
 .text; \
diff -urNxCVS -xdebian ../../dietlibc/ia64/syscalls.h ./ia64/syscalls.h
--- ../../dietlibc/ia64/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./ia64/syscalls.h	2005-10-05 12:31:50.000000000 +0000
@@ -251,6 +251,13 @@
 #define __NR_add_key			1271
 #define __NR_request_key		1272
 #define __NR_keyctl			1273
+#define __NR_ioprio_set			1274
+#define __NR_ioprio_get			1275
+#define __NR_set_zone_reclaim		1276
+#define __NR_inotify_init		1277
+#define __NR_inotify_add_watch		1278
+#define __NR_inotify_rm_watch		1279
+
 
 #define syscall(name, sym) \
 .text; \
diff -urNxCVS -xdebian ../../dietlibc/include/asm/i386-sigcontext.h ./include/asm/i386-sigcontext.h
--- ../../dietlibc/include/asm/i386-sigcontext.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/asm/i386-sigcontext.h	2005-10-05 12:30:49.000000000 +0000
@@ -1,13 +1,14 @@
+#include <asm/types.h>
 
 struct _fpreg {
-	unsigned short significand[4];
-	unsigned short exponent;
+	__u16          significand[4];
+	__u16          exponent;
 };
 
 struct _fpxreg {
-	unsigned short significand[4];
-	unsigned short exponent;
-	unsigned short padding[3];
+	__u16          significand[4];
+	__u16          exponent;
+	__u16          padding[3];
 };
 
 struct _xmmreg {
@@ -24,8 +25,8 @@
 	unsigned long	dataoff;
 	unsigned long	datasel;
 	struct _fpreg	_st[8];
-	unsigned short	status;
-	unsigned short	magic;		/* 0xffff = regular FPU data only */
+	__u16         	status;
+	__u16         	magic;		/* 0xffff = regular FPU data only */
 
 	/* FXSR FPU environment */
 	unsigned long	_fxsr_env[6];	/* FXSR FPU env is ignored */
@@ -40,10 +41,10 @@
 #define PC(ctx) (ctx.eip)
 
 struct sigcontext {
-	unsigned short gs, __gsh;
-	unsigned short fs, __fsh;
-	unsigned short es, __esh;
-	unsigned short ds, __dsh;
+	__u16         gs, __gsh;
+	__u16         fs, __fsh;
+	__u16         es, __esh;
+	__u16         ds, __dsh;
 	unsigned long edi;
 	unsigned long esi;
 	unsigned long ebp;
@@ -55,10 +56,10 @@
 	unsigned long trapno;
 	unsigned long err;
 	unsigned long eip;
-	unsigned short cs, __csh;
+	__u16         cs, __csh;
 	unsigned long eflags;
 	unsigned long esp_at_signal;
-	unsigned short ss, __ssh;
+	__u16         ss, __ssh;
 	struct _fpstate * fpstate;
 	unsigned long oldmask;
 	unsigned long cr2;
diff -urNxCVS -xdebian ../../dietlibc/include/asm/ppc-sigcontext.h ./include/asm/ppc-sigcontext.h
--- ../../dietlibc/include/asm/ppc-sigcontext.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/asm/ppc-sigcontext.h	2005-10-05 12:30:49.000000000 +0000
@@ -1,3 +1,5 @@
+#include <asm/types.h>
+
 #ifndef ASM_PPC_SIGCONTEXT_H
 
 struct pt_regs {
@@ -70,7 +72,7 @@
 #define sigcontext_struct sigcontext
 struct sigcontext {
 	unsigned long	_unused[4];
-	int		signal;
+	__s32		signal;
 	unsigned long	handler;
 	unsigned long	oldmask;
 	struct pt_regs 	*regs;
diff -urNxCVS -xdebian ../../dietlibc/include/asm/types.h ./include/asm/types.h
--- ../../dietlibc/include/asm/types.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/asm/types.h	2005-10-05 12:30:49.000000000 +0000
@@ -6,9 +6,9 @@
 __BEGIN_DECLS
 
 #ifdef __alpha__
-typedef unsigned int umode_t;
+typedef uint32_t umode_t;
 #else
-typedef unsigned short umode_t;
+typedef uint16_t umode_t;
 #endif
 
 typedef uint8_t __u8;
@@ -28,7 +28,7 @@
 #if defined(__alpha__)
 typedef unsigned long __kernel_size_t;
 #else
-typedef unsigned int __kernel_size_t;
+typedef uint32_t __kernel_size_t;
 #endif
 
 #define __force
diff -urNxCVS -xdebian ../../dietlibc/include/asm/x86_64-sigcontext.h ./include/asm/x86_64-sigcontext.h
--- ../../dietlibc/include/asm/x86_64-sigcontext.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/asm/x86_64-sigcontext.h	2005-10-05 12:30:49.000000000 +0000
@@ -36,10 +36,10 @@
 	unsigned long rsp;
 	unsigned long rip;
 	unsigned long eflags;		/* RFLAGS */
-	unsigned short cs;
-	unsigned short gs;
-	unsigned short fs;
-	unsigned short __pad0; 
+	__u16         cs;
+	__u16         gs;
+	__u16         fs;
+	__u16         __pad0;
 	unsigned long err;
 	unsigned long trapno;
 	unsigned long oldmask;
diff -urNxCVS -xdebian ../../dietlibc/include/attr/xattr.h ./include/attr/xattr.h
--- ../../dietlibc/include/attr/xattr.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/attr/xattr.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,29 @@
+#ifndef _ATTR_XATTR_H
+#define _ATTR_XATTR_H
+
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
+enum { XATTR_CREATE=1, XATTR_REPLACE=2 };
+#define XATTR_CREATE XATTR_CREATE
+#define XATTR_REPLACE XATTR_REPLACE
+
+#define XATTR_SECURITY_PREFIX	"security."
+
+int setxattr(const char *path, const char *name, const void *value, size_t size, int flags);
+int lsetxattr(const char *path, const char *name, const void *value, size_t size, int flags);
+int fsetxattr(int filedes, const char *name, const void *value, size_t size, int flags);
+
+ssize_t getxattr(const char *path, const char *name, void *value, size_t size);
+ssize_t lgetxattr(const char *path, const char *name, void *value, size_t size);
+ssize_t fgetxattr(int filedes, const char *name, void *value, size_t size);
+
+ssize_t listxattr(const char *path, char *list, size_t size);
+ssize_t llistxattr(const char *path, char *list, size_t size);
+ssize_t flistxattr(int filedes, char *list, size_t size);
+
+int removexattr(const char *path, const char *name);
+int lremovexattr(const char *path, const char *name);
+int fremovexattr(int filedes, const char *name);
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/clocale ./include/clocale
--- ../../dietlibc/include/clocale	1970-01-01 00:00:00.000000000 +0000
+++ ./include/clocale	2005-09-22 07:26:32.000000000 +0000
@@ -0,0 +1,23 @@
+#ifndef __DIETLIBC_CLOCALE_INCLUDED
+#define __DIETLIBC_CLOCALE_INCLUDED
+
+#include <sys/types.h>
+#include <locale.h>
+
+struct __locale_struct
+{
+    struct locale_data *__locales[13];
+    const uint16_t *__ctype_b;
+    const int32_t *__ctype_tolower;
+    const int32_t *__ctype_toupper;
+    const char *__names[13];
+};
+typedef struct __locale_struct *__locale_t;
+
+namespace std {
+    using ::lconv;
+    using ::localeconv;
+    using ::setlocale;
+}
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/ctype.h ./include/ctype.h
--- ../../dietlibc/include/ctype.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/ctype.h	2005-07-13 13:22:28.000000000 +0000
@@ -15,6 +15,7 @@
 extern int isupper (int c) __THROW __attribute__ ((__const__));
 extern int islower (int c) __THROW __attribute__ ((__const__));
 
+extern int toascii(int c) __THROW __attribute__ ((__const__));
 extern int tolower(int c) __THROW __attribute__ ((__const__));
 extern int toupper(int c) __THROW __attribute__ ((__const__));
 
diff -urNxCVS -xdebian ../../dietlibc/include/cwctype ./include/cwctype
--- ../../dietlibc/include/cwctype	2005-10-05 13:17:23.000000000 +0000
+++ ./include/cwctype	2005-10-05 12:30:49.000000000 +0000
@@ -2,10 +2,9 @@
 #define __DIETLIBC_CWCTYPE_INCLUDED
 
 #include <endian.h>
+#include <wctype.h>
 #include <cstddef>
-#include <ctype.h>
-
-typedef unsigned long int wctype_t;
+#include <cwchar>
 
 #if __BYTE_ORDER == __BIG_ENDIAN
 #  define _ISbit(bit)	(1 << (bit))
@@ -31,7 +30,27 @@
 
 namespace std {
     using ::wctype_t;
+    using ::wctrans_t;
     using ::wint_t;
+
+    using ::iswalnum;
+    using ::iswalpha;
+    using ::iswblank;
+    using ::iswcntrl;
+    using ::iswctype;
+    using ::iswdigit;
+    using ::iswgraph;
+    using ::iswlower;
+    using ::iswprint;
+    using ::iswpunct;
+    using ::iswspace;
+    using ::iswupper;
+    using ::iswxdigit;
+    using ::towctrans;
+    using ::towlower;
+    using ::towupper;
+    using ::wctrans;
+    using ::wctype;
 }
 
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/dirent.h ./include/dirent.h
--- ../../dietlibc/include/dirent.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/dirent.h	2005-10-05 12:30:49.000000000 +0000
@@ -10,7 +10,7 @@
 struct dirent {
   long		d_ino;
   off_t		d_off;
-  unsigned short	d_reclen;
+  uint16_t	d_reclen;
   char		d_name[256]; /* We must not include limits.h! */
 };
 
@@ -18,7 +18,7 @@
 struct dirent64 {
   uint64_t	d_ino;
   int64_t	d_off;
-  unsigned short	d_reclen;
+  uint16_t	d_reclen;
   unsigned char	d_type;
   char		d_name[256];
 };
@@ -42,10 +42,10 @@
 
 int scandir(const char *dir, struct dirent ***namelist,
       int (*selection)(const struct dirent *),
-      int (*compar)(const struct dirent **, const struct dirent **)) __THROW;
+      int (*compar)(const struct dirent **, const struct dirent **));
 int scandir64(const char *dir, struct dirent64 ***namelist,
       int (*selection)(const struct dirent64 *),
-      int (*compar)(const struct dirent64 **, const struct dirent64 **)) __THROW;
+      int (*compar)(const struct dirent64 **, const struct dirent64 **));
 
 int alphasort(const struct dirent **a, const struct dirent **b) __THROW __attribute__((const));
 int alphasort64(const struct dirent64 **a, const struct dirent64 **b) __THROW __attribute__((const));
diff -urNxCVS -xdebian ../../dietlibc/include/endian.h ./include/endian.h
--- ../../dietlibc/include/endian.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/endian.h	2005-10-05 12:30:49.000000000 +0000
@@ -4,6 +4,14 @@
 #define	__LITTLE_ENDIAN	1234
 #define	__BIG_ENDIAN	4321
 
+#ifdef __mips__
+#if _MIPS_SIM == _MIPS_SIM_ABI64
+#define __mips64__
+#else
+#undef __mips64__
+#endif
+#endif
+
 #if defined(__i386__) || defined(__x86_64__) || defined(__ia64__) || defined(__alpha__)
 #define __BYTE_ORDER		__LITTLE_ENDIAN
 #define __FLOAT_WORD_ORDER	__BYTE_ORDER
@@ -31,7 +39,7 @@
 # define __LONG_LONG_PAIR(HI, LO) HI, LO
 #endif
 
-#if defined(__alpha__) || defined(__mips64) || defined(__sparc_v9__) || defined(__x86_64__) || defined(__ia64__) || defined(__powerpc64__) || defined(__s390x__)
+#if defined(__alpha__) || defined(__mips64__) || defined(__sparc_v9__) || defined(__x86_64__) || defined(__ia64__) || defined(__powerpc64__) || defined(__s390x__)
 #define __WORDSIZE 64
 #endif
 
diff -urNxCVS -xdebian ../../dietlibc/include/fcntl.h ./include/fcntl.h
--- ../../dietlibc/include/fcntl.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/fcntl.h	2005-10-05 12:30:49.000000000 +0000
@@ -3,8 +3,10 @@
 
 #include <sys/cdefs.h>
 
+#include <endian.h>
 #include <sys/types.h>
 #include <unistd.h>
+#include <sys/stat.h>
 
 __BEGIN_DECLS
 
@@ -77,16 +79,16 @@
 #define LOCK_RW		192	/* ... Which allows concurrent read & write ops */
 
 struct flock {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   pid_t l_pid;
 };
 
 struct flock64 {
-  short  l_type;
-  short  l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   loff_t l_start;
   loff_t l_len;
   pid_t  l_pid;
@@ -156,8 +158,8 @@
 #define LOCK_RW        192     /* ... Which allows concurrent read & write ops */
 
 struct flock {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   pid_t l_pid;
@@ -234,15 +236,33 @@
 #define LOCK_WRITE	128	/* ... Which allows concurrent write operations */
 #define LOCK_RW		192	/* ... Which allows concurrent read & write ops */
 
-typedef struct flock {
-  short l_type;
-  short l_whence;
+#ifndef __mips64__
+struct flock {
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   long  l_sysid;			/* XXXXXXXXXXXXXXXXXXXXXXXXX */
   pid_t l_pid;
   long  pad[4];			/* ZZZZZZZZZZZZZZZZZZZZZZZZZZ */
-} flock_t;
+};
+struct flock64 {
+  int16_t l_type;
+  int16_t l_whence;
+  loff_t l_start;
+  loff_t l_len;
+  pid_t l_pid;
+};
+#else
+struct flock {
+  int16_t l_type;
+  int16_t l_whence;
+  off_t l_start;
+  off_t l_len;
+  pid_t l_pid;
+};
+#define flock64 flock
+#endif
 
 #elif defined(__sparc__)
 
@@ -312,24 +332,24 @@
 #define LOCK_RW		192	/* ... Which allows concurrent read & write ops */
 
 struct flock {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   pid_t l_pid;
-  short __unused;
+  int16_t __unused;
 };
 
 #ifdef __arch64__
 #define flock64 flock
 #else
 struct flock64 {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   loff_t l_start;
   loff_t l_len;
   pid_t l_pid;
-  short __unused;
+  int16_t __unused;
 };
 #endif
 
@@ -402,16 +422,16 @@
 #define LOCK_RW		192	/* ... Which allows concurrent read & write ops */
 
 struct flock {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   pid_t l_pid;
 };
 
 struct flock64 {
-  short  l_type;
-  short  l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   loff_t l_start;
   loff_t l_len;
   pid_t  l_pid;
@@ -486,16 +506,16 @@
 #define LOCK_RW		192	/* ... Which allows concurrent read & write ops */
 
 struct flock {
-  short l_type;
-  short l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   off_t l_start;
   off_t l_len;
   pid_t l_pid;
 };
 
 struct flock64 {
-  short  l_type;
-  short  l_whence;
+  int16_t l_type;
+  int16_t l_whence;
   loff_t l_start;
   loff_t l_len;
   pid_t  l_pid;
@@ -573,8 +593,8 @@
 
 struct flock
 {
-    short int l_type;   /* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.  */
-    short int l_whence; /* Where `l_start' is relative to (like `lseek').  */
+    int16_t l_type;   /* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.  */
+    int16_t l_whence; /* Where `l_start' is relative to (like `lseek').  */
     off_t l_start;    /* Offset where the lock begins.  */
     off_t l_len;  /* Size of the locked area; zero means until EOF.  */
     pid_t l_pid;  /* Process holding the lock.  */
@@ -582,8 +602,8 @@
 
 struct flock64
 {
-    short int l_type;   /* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.  */
-    short int l_whence; /* Where `l_start' is relative to (like `lseek').  */
+    int16_t l_type;   /* Type of lock: F_RDLCK, F_WRLCK, or F_UNLCK.  */
+    int16_t l_whence; /* Where `l_start' is relative to (like `lseek').  */
     off64_t l_start;  /* Offset where the lock begins.  */
     off64_t l_len;    /* Size of the locked area; zero means until EOF.  */
     pid_t l_pid;  /* Process holding the lock.  */
@@ -592,12 +612,18 @@
 #endif
 
 extern int fcntl (int __fd, int __cmd, ...) __THROW;
+#ifndef __NO_STAT64
+extern int fcntl64 (int __fd, int __cmd, ...) __THROW;
+#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
+#define fcntl fcntl64
+#endif
+#endif
 
 #if !defined(O_ASYNC) && defined(FASYNC)
 #define O_ASYNC FASYNC
 #endif
 
-#ifdef _GNU_SOURCE
+#if defined(_LINUX_SOURCE) || defined(_GNU_SOURCE)
 ssize_t readahead(int fd, off64_t *offset, size_t count);
 #endif
 
diff -urNxCVS -xdebian ../../dietlibc/include/ftw.h ./include/ftw.h
--- ../../dietlibc/include/ftw.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/ftw.h	2005-07-10 18:32:53.000000000 +0000
@@ -11,11 +11,11 @@
   int level;
 };
 
-int ftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag), int depth) __THROW;
-int nftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag, struct FTW *s), int depth, int flags) __THROW;
+int ftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag), int depth);
+int nftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag, struct FTW *s), int depth, int flags);
 
 #ifndef __NO_STAT64
-int ftw64(const char *dir, int (*fn)(const char *file, const struct stat64 *sb, int flag), int depth) __THROW;
+int ftw64(const char *dir, int (*fn)(const char *file, const struct stat64 *sb, int flag), int depth);
 
 #if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
 #define ftw(dir,fn,depth) ftw64(dir,fn,depth)
@@ -42,19 +42,19 @@
 };
 
 typedef int (*__ftw_func_t) (const char *__filename,
-			     const struct stat *__status, int __flag) __THROW;
+			     const struct stat *__status, int __flag);
 
 typedef int (*__nftw_func_t) (const char *__filename,
 			      const struct stat *__status, int __flag,
-			      struct FTW *__info) __THROW;
+			      struct FTW *__info);
 
 #ifndef __NO_STAT64
 typedef int (*__ftw64_func_t) (const char *__filename,
-			       const struct stat64 *__status, int __flag) __THROW;
+			       const struct stat64 *__status, int __flag);
 
 typedef int (*__nftw64_func_t) (const char *__filename,
 				const struct stat64 *__status,
-				int __flag, struct FTW *__info) __THROW;
+				int __flag, struct FTW *__info);
 #endif
 
 __END_DECLS
diff -urNxCVS -xdebian ../../dietlibc/include/iconv.h ./include/iconv.h
--- ../../dietlibc/include/iconv.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/iconv.h	2005-10-05 12:30:49.000000000 +0000
@@ -7,7 +7,7 @@
 __BEGIN_DECLS
 
 /* Identifier for conversion method from one codeset to another.  */
-typedef unsigned int iconv_t;
+typedef uint32_t iconv_t;
 
 /* Allocate descriptor for code conversion from codeset FROMCODE to
    codeset TOCODE.  */
diff -urNxCVS -xdebian ../../dietlibc/include/libintl.h ./include/libintl.h
--- ../../dietlibc/include/libintl.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/libintl.h	2005-10-05 12:30:49.000000000 +0000
@@ -10,8 +10,11 @@
 char* gettext(const char* msgid) __THROW;
 char* dgettext(const char* domainname, const char* msgid) __THROW;
 char* dcgettext(const char *domainname, const char *msgid, int category) __THROW;
-char* dcngettext(const char *domainname,
-		 const char *msgid1, const char *msgid2,
+
+char* ngettext (const char* msgid, const char* msgid_plural, unsigned long int n) __THROW;
+char* dngettext (const char* domainname, const char* msgid, const char* msgid_plural, unsigned long int n) __THROW;
+char* dcngettext(const char* domainname,
+		 const char* msgid1, const char* msgid2,
 		 unsigned long int n, int __category) __THROW;
 
 char* textdomain(const char *domainname) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/include/limits.h ./include/limits.h
--- ../../dietlibc/include/limits.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/limits.h	2005-09-08 12:08:16.000000000 +0000
@@ -86,4 +86,8 @@
 #define _POSIX_PATH_MAX PATH_MAX
 #define MB_LEN_MAX 16
 
+#ifdef _XOPEN_SOURCE
+#define IOV_MAX 1024
+#endif
+
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/linux/aio.h ./include/linux/aio.h
--- ../../dietlibc/include/linux/aio.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/linux/aio.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,67 @@
+#ifndef _LINUX_AIO_H
+#define _LINUX_AIO_H
+
+#ifdef <endian.h>
+
+typedef unsigned long aio_context_t;
+
+enum {
+  IOCB_CMD_PREAD = 0,
+  IOCB_CMD_PWRITE = 1,
+  IOCB_CMD_FSYNC = 2,
+  IOCB_CMD_FDSYNC = 3,
+  /* These two are experimental. */
+  IOCB_CMD_PREADX = 4,
+  IOCB_CMD_POLL = 5,
+  /* */
+  IOCB_CMD_NOOP = 6,
+};
+
+struct io_event {
+  uint64_t data;	/* the data field from the iocb */
+  uint64_t obj;		/* what iocb this event came from */
+  int64_t res;		/* result code for this event */
+  int64_t res2;		/* secondary result */
+};
+
+#if __BYTE_ORDER == __LITTLE_ENDIAN
+#define PADDED(x,y)	x, y
+#elif __BYTE_ORDER == __BIG_ENDIAN
+#define PADDED(x,y)	y, x
+#else
+#error edit for your odd byteorder.
+#endif
+
+/*
+ * we always use a 64bit off_t when communicating
+ * with userland.  its up to libraries to do the
+ * proper padding and aio_error abstraction
+ */
+
+struct iocb {
+  /* these are internal to the kernel/libc. */
+  uint64_t aio_data;	/* data to be returned in event's data */
+  uint32_t PADDED(aio_key, aio_reserved1);
+			/* the kernel sets aio_key to the req # */
+
+  /* common fields */
+  uint16_t aio_lio_opcode;	/* see IOCB_CMD_ above */
+  int16_t aio_reqprio;
+  uint32_t aio_fildes;
+
+  uint64_t aio_buf;
+  uint64_t aio_nbytes;
+  int64_t aio_offset;
+
+  /* extra parameters */
+  uint64_t aio_reserved2;	/* TODO: use this for a (struct sigevent *) */
+  uint64_t aio_reserved3;
+}; /* 64 bytes */
+
+long io_setup (unsigned nr_events, aio_context_t *ctxp);
+long io_destroy (aio_context_t ctx);
+long io_submit (aio_context_t ctx_id, long nr, struct iocb **iocbpp);
+long io_cancel (aio_context_t ctx_id, struct iocb *iocb, struct io_event *result);
+long io_getevents (aio_context_t ctx_id, long min_nr, long nr, struct io_event *events,struct timespec *timeout);
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/linux/fadvise.h ./include/linux/fadvise.h
--- ../../dietlibc/include/linux/fadvise.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/linux/fadvise.h	2005-10-04 17:49:09.000000000 +0000
@@ -0,0 +1,21 @@
+#ifndef _LINUX_FADVISE_H
+#define _LINUX_FADVISE_H
+
+#define POSIX_FADV_NORMAL	0 /* No further special treatment.  */
+#define POSIX_FADV_RANDOM	1 /* Expect random page references.  */
+#define POSIX_FADV_SEQUENTIAL	2 /* Expect sequential page references.  */
+#define POSIX_FADV_WILLNEED	3 /* Will need these pages.  */
+
+/*
+ * The advise values for POSIX_FADV_DONTNEED and POSIX_ADV_NOREUSE
+ * for s390-64 differ from the values for the rest of the world.
+ */
+#if defined(__s390x__)
+#define POSIX_FADV_DONTNEED	6 /* Don't need these pages.  */
+#define POSIX_FADV_NOREUSE	7 /* Data will be accessed once.  */
+#else
+#define POSIX_FADV_DONTNEED	4 /* Don't need these pages.  */
+#define POSIX_FADV_NOREUSE	5 /* Data will be accessed once.  */
+#endif
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/mqueue.h ./include/mqueue.h
--- ../../dietlibc/include/mqueue.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/mqueue.h	2005-10-04 17:49:09.000000000 +0000
@@ -0,0 +1,42 @@
+#ifndef _MQUEUE_H
+#define _MQUEUE_H
+
+#include <sys/cdefs.h>
+#include <sys/time.h>
+
+#define MQ_PRIO_MAX 	32768
+/* per-uid limit of kernel memory used by mqueue, in bytes */
+#define MQ_BYTES_MAX	819200
+
+typedef int mqd_t;
+struct mq_attr {
+  long	mq_flags;	/* message queue flags			*/
+  long	mq_maxmsg;	/* maximum number of messages		*/
+  long	mq_msgsize;	/* maximum message size			*/
+  long	mq_curmsgs;	/* number of messages currently queued	*/
+  long	__reserved[4];	/* ignored for input, zeroed for output */
+};
+
+#define NOTIFY_NONE	0
+#define NOTIFY_WOKENUP	1
+#define NOTIFY_REMOVED	2
+
+#define NOTIFY_COOKIE_LEN	32
+
+__BEGIN_DECLS
+
+mqd_t mq_open(const char *name, int oflag, ...) __THROW;
+int mq_unlink(const char *name) __THROW;
+int mq_send(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio) __THROW;
+int mq_timedsend(mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned msg_prio,
+		 const struct timespec *abs_timeout) __THROW;
+ssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned *msg_prio) __THROW;
+ssize_t mq_timedreceive(mqd_t mqdes, char *restrict msg_ptr, size_t msg_len,
+			unsigned *restrict msg_prio, const struct timespec *restrict abs_timeout) __THROW;
+int mq_notify(mqd_t mqdes, const struct sigevent *notification) __THROW;
+int mq_getattr(mqd_t mqdes, struct mq_attr *mqstat) __THROW;
+int mq_setattr(mqd_t mqdes, const struct mq_attr *restrict mqstat, struct mq_attr *restrict omqstat) __THROW;
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/netinet/in.h ./include/netinet/in.h
--- ../../dietlibc/include/netinet/in.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/netinet/in.h	2005-10-05 12:30:49.000000000 +0000
@@ -100,11 +100,11 @@
 struct ip_mreqn {
   struct in_addr	imr_multiaddr;		/* IP multicast address of group */
   struct in_addr	imr_address;		/* local IP address of interface */
-  int			imr_ifindex;		/* Interface index */
+  int32_t		imr_ifindex;		/* Interface index */
 };
 
 struct in_pktinfo {
-  int			ipi_ifindex;
+  int32_t		ipi_ifindex;
   struct in_addr	ipi_spec_dst;
   struct in_addr	ipi_addr;
 };
@@ -204,7 +204,7 @@
   /* IPv6 multicast address of group */
   struct in6_addr ipv6mr_multiaddr;
   /* local IPv6 address of interface */
-  int ipv6mr_interface;
+  int32_t ipv6mr_interface;
 };
 
 struct in6_flowlabel_req {
@@ -288,13 +288,13 @@
 
 struct in6_pktinfo {
   struct in6_addr	ipi6_addr;
-  int		ipi6_ifindex;
+  int32_t		ipi6_ifindex;
 };
 
 struct in6_ifreq {
   struct in6_addr	ifr6_addr;
   uint32_t		ifr6_prefixlen;
-  int		ifr6_ifindex; 
+  int32_t		ifr6_ifindex;
 };
 
 #define IPV6_SRCRT_STRICT	0x01	/* this hop must be a neighbor	*/
@@ -331,11 +331,11 @@
 
 struct ipv6hdr {
 #if __BYTE_ORDER == __LITTLE_ENDIAN
-  unsigned int		flow_lbl:20,
+  uint32_t		flow_lbl:20,
 			priority:8,
 			version:4;
 #else
-  unsigned int		version:4,
+  uint32_t		version:4,
 			priority:8,
 			flow_lbl:20;
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/semaphore.h ./include/semaphore.h
--- ../../dietlibc/include/semaphore.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/semaphore.h	2005-10-05 12:30:49.000000000 +0000
@@ -10,7 +10,7 @@
   pthread_mutex_t lock;
   pthread_cond_t cond;
   int value;
-  unsigned int magic;
+  uint32_t magic;
 } sem_t;
 
 #define SEM_FAILED	((sem_t*)0)
diff -urNxCVS -xdebian ../../dietlibc/include/setjmp.h ./include/setjmp.h
--- ../../dietlibc/include/setjmp.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/setjmp.h	2005-10-05 12:30:49.000000000 +0000
@@ -7,7 +7,7 @@
 
 #ifdef __i386__
 #ifndef __ASSEMBLER__
-typedef int __jmp_buf[6];
+typedef long __jmp_buf[6];
 #endif
 # define JB_BX	0
 # define JB_SI	1
@@ -171,15 +171,23 @@
 #endif
 
 #if defined(__powerpc__) || defined(__powerpc64__)
-# define JB_GPR1   0  /* Also known as the stack pointer */
-# define JB_GPR2   1
-# define JB_LR     2  /* The address we will return to */
-# define JB_GPRS   3  /* GPRs 14 through 31 are saved, 18 in total */
-# define JB_CR     21 /* Condition code registers. */
-# define JB_FPRS   22 /* FPRs 14 through 31 are saved, 18*2 words total */
-# define JB_SIZE   (58*4)
+/* 40 registers: 22 GPRs (4 or 8 bytes) + 18 FPRs (8 bytes) */
+#define JB_GPR1   0  /* Also known as the stack pointer */
+#define JB_GPR2   1
+#define JB_LR     2  /* The address we will return to */
+#define JB_GPRS   3  /* GPRs 14 through 31 are saved, 18 in total */
+#define JB_CR     21 /* Condition code registers. */
+#define JB_FPRS   22 /* FPRs 14 through 31 are saved, 18*2 words total */
+#if defined(__powerpc64__)
+#define JB_SIZE   (40*8)
 #ifndef __ASSEMBLER__
-typedef long int __jmp_buf[58];
+typedef long __jmp_buf[40];
+#endif
+#else
+#define JB_SIZE   (58*4)	/* == 22*4 + 18*8 */
+#ifndef __ASSEMBLER__
+typedef long __jmp_buf[58] __attribute__ ((__aligned__(8)));
+#endif
 #endif
 #endif
 
diff -urNxCVS -xdebian ../../dietlibc/include/signal.h ./include/signal.h
--- ../../dietlibc/include/signal.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/signal.h	2005-10-05 12:30:49.000000000 +0000
@@ -232,9 +232,9 @@
 typedef sighandler_t __sighandler_t;	/* shoot the glibc people! */
 #endif
 
-#define SIG_DFL ((sighandler_t)0)	/* default signal handling */
-#define SIG_IGN ((sighandler_t)1)	/* ignore signal */
-#define SIG_ERR ((sighandler_t)-1)	/* error return from signal */
+#define SIG_DFL ((sighandler_t)0L)	/* default signal handling */
+#define SIG_IGN ((sighandler_t)1L)	/* ignore signal */
+#define SIG_ERR ((sighandler_t)-1L)	/* error return from signal */
 
 typedef union sigval {
   int sival_int;
@@ -249,7 +249,7 @@
 #endif
 
 #ifdef __sparc_v9__
-typedef int __band_t;
+typedef int32_t __band_t;
 #else
 typedef long __band_t;
 #endif
@@ -267,8 +267,8 @@
     } _kill;
     /* POSIX.1b timers */
     struct {
-      unsigned int _timer1;
-      unsigned int _timer2;
+      uint32_t _timer1;
+      uint32_t _timer2;
     } _timer;
     /* POSIX.1b signals */
     struct {
@@ -280,7 +280,7 @@
     struct {
       pid_t _pid;		/* which child */
       uid_t _uid;		/* sender's uid */
-      int _status;		/* exit code */
+      int32_t _status;		/* exit code */
       clock_t _utime;
       clock_t _stime;
     } _sigchld;
@@ -291,7 +291,7 @@
     /* SIGPOLL */
     struct {
       __band_t _band;	/* POLL_IN, POLL_OUT, POLL_MSG */
-      int _fd;
+      int32_t _fd;
     } _sigpoll;
   } _sifields;
 } siginfo_t;
@@ -438,14 +438,7 @@
 } sigset_t;
 
 struct sigaction {
-#if defined(__alpha__)
-  union {
-    sighandler_t _sa_handler;
-    void (*_sa_sigaction)(int, siginfo_t*, void*);
-  } _u;
-  sigset_t sa_mask;
-  unsigned long sa_flags;
-#elif defined(__ia64__) || defined(__hppa__)
+#if defined(__alpha__) || defined(__ia64__) || defined(__hppa__)
   union {
     sighandler_t _sa_handler;
     void (*_sa_sigaction)(int, siginfo_t*, void*);
@@ -460,7 +453,7 @@
   } _u;
   sigset_t sa_mask;
   void (*sa_restorer)(void);
-  int sa_resv[1];
+  int32_t sa_resv[1];
 #else	/* arm, i386, ppc, s390, sparc, saprc64, x86_64 */
   union {
     sighandler_t _sa_handler;
@@ -483,16 +476,16 @@
 
 #define SIGEV_MAX_SIZE  64
 #ifndef SIGEV_PAD_SIZE
-#define SIGEV_PAD_SIZE  ((SIGEV_MAX_SIZE/sizeof(int)) - 3)
+#define SIGEV_PAD_SIZE  ((SIGEV_MAX_SIZE/sizeof(int32_t)) - 3)
 #endif
 
 typedef struct sigevent {
   sigval_t sigev_value;
-  int sigev_signo;
-  int sigev_notify;
+  int32_t sigev_signo;
+  int32_t sigev_notify;
   union {
-    int _pad[SIGEV_PAD_SIZE];
-    int _tid;
+    int32_t _pad[SIGEV_PAD_SIZE];
+    int32_t _tid;
 
     struct {
       void(*_function)(sigval_t);
@@ -509,10 +502,10 @@
 #if defined(__mips__)
   void *ss_sp;
   size_t ss_size;
-  int ss_flags;
+  int32_t ss_flags;
 #else
   void *ss_sp;
-  int ss_flags;
+  int32_t ss_flags;
   size_t ss_size;
 #endif
 } stack_t;
@@ -544,7 +537,7 @@
 #include <sys/time.h>
 
 int sigtimedwait(const sigset_t *mask, siginfo_t *info, const struct timespec *ts) __THROW;
-int sigqueueinfo(int pid, int sig, siginfo_t *info) __THROW;
+int sigqueueinfo(pid_t pid, int sig, siginfo_t *info) __THROW;
 int siginterrupt(int sig, int flag) __THROW;
 
 int killpg(pid_t pgrp, int sig) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/include/stdarg-cruft.h ./include/stdarg-cruft.h
--- ../../dietlibc/include/stdarg-cruft.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/stdarg-cruft.h	2005-10-05 12:30:49.000000000 +0000
@@ -1,3 +1,5 @@
+#include <endian.h>
+
 #if defined(__sparc__) || defined(__alpha__) || defined(__mips__)
 enum {
   __no_type_class = -1,
@@ -60,14 +62,14 @@
 
 typedef char * va_list;
 
-#ifdef __mips64
+#ifdef __mips64__
 #define __va_rounded_size(__TYPE)  \
   (((sizeof (__TYPE) + 8 - 1) / 8) * 8)
 #else
 #define __va_rounded_size(__TYPE)  \
   (((sizeof (__TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))
 #endif
-#ifdef __mips64
+#ifdef __mips64__
 #define __va_reg_size 8
 #else
 #define __va_reg_size 4
@@ -76,7 +78,7 @@
 #define va_start(__AP, __LASTARG) \
   (__AP = (va_list) __builtin_next_arg (__LASTARG))
 
-#ifdef __mips64
+#ifdef __mips64__
 #ifdef __MIPSEB__
 #define va_arg(__AP, __type)                                    \
   ((__type *) (void *) (__AP = (char *)                         \
diff -urNxCVS -xdebian ../../dietlibc/include/stdlib.h ./include/stdlib.h
--- ../../dietlibc/include/stdlib.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/stdlib.h	2005-10-05 12:30:49.000000000 +0000
@@ -64,16 +64,11 @@
 long nrand48(randbuf buf) __THROW;
 double erand48(randbuf buf) __THROW;
 
-void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *)) __THROW;
-void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *)) __THROW;
+void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
+void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
 
 extern char **environ;
 
-/* now this function is the greatest bullshit I have ever seen.
- * The ISO people must be out of their minds. */
-typedef struct { int quot,rem; } div_t;
-div_t div(int numer, int denom) __THROW __attribute__((__const__));
-
 char *realpath(const char *path, char *resolved_path) __THROW;
 
 int mkstemp(char *_template);
@@ -96,10 +91,26 @@
 #define EXIT_FAILURE 1
 #define EXIT_SUCCESS 0
 
-#define RAND_MAX 	((1<<31) -2)
+#define RAND_MAX 	0x7ffffffe
 
 #define MB_CUR_MAX 1
 
+/* now these functions are the greatest bullshit I have ever seen.
+ * The ISO people must be out of their minds. */
+
+typedef struct { int quot,rem; } div_t;
+typedef struct { long quot,rem; } ldiv_t;
+
+div_t div(int numerator, int denominator);
+ldiv_t ldiv(long numerator, long denominator);
+
+#ifdef _GNU_SOURCE
+typedef struct { long long quot,rem; } lldiv_t;
+lldiv_t lldiv(long long numerator, long long denominator);
+
+int clearenv(void);
+#endif
+
 __END_DECLS
 
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/string.h ./include/string.h
--- ../../dietlibc/include/string.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/string.h	2005-10-05 12:30:49.000000000 +0000
@@ -24,6 +24,9 @@
 int strcmp(const char *s1, const char *s2) __THROW __pure;
 
 size_t strlen(const char *s) __THROW __pure;
+#ifdef _GNU_SOURCE
+size_t strnlen(const char *s,size_t maxlen) __THROW __pure;
+#endif
 
 char *strstr(const char *haystack, const char *needle) __THROW __pure;
 
@@ -57,6 +60,9 @@
 void *memmem(const void *haystack, size_t haystacklen, const void *needle, size_t needlelen) __THROW;
 
 char *strndup(const char *s,size_t n) __THROW __attribute_malloc__ ;
+
+#define strdupa(s) ({ const char* tmp=s; size_t l=strlen(tmp)+1; char* x=alloca(l); memcpy(x,tmp,l); })
+#define strndupa(s,n) ({ const char* tmp=s; const char* y=memchr(tmp,0,(n)); size_t l=y?y-tmp:n; char* x=alloca(l+1); x[l]=0; memcpy(x,tmp,l); })
 #endif
 
 char *strtok(char *s, const char *delim) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/include/sys/cdefs.h ./include/sys/cdefs.h
--- ../../dietlibc/include/sys/cdefs.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/cdefs.h	2005-10-05 12:30:49.000000000 +0000
@@ -27,6 +27,7 @@
 #endif
 
 #ifndef __STRICT_ANSI__
+#define restrict __restrict__
 #if __GNUC__ < 3
 #define __builtin_expect(foo,bar) (foo)
 #define __expect(foo,bar) (foo)
diff -urNxCVS -xdebian ../../dietlibc/include/sys/futex.h ./include/sys/futex.h
--- ../../dietlibc/include/sys/futex.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/futex.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,16 @@
+#ifndef _SYS_FUTEX_H
+#define _SYS_FUTEX_H
+
+#include <sys/time.h>
+
+enum {
+  FUTEX_WAIT=0,
+  FUTEX_WAKE=1,
+  FUTEX_FD=2,
+  FUTEX_REQUEUE=3,
+  FUTEX_CMP_REQUEUE=4,
+};
+
+long futex(int* uaddr,int op,int val,const struct timespec* timeout,int* uaddr2,int val3);
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/inotify.h ./include/sys/inotify.h
--- ../../dietlibc/include/sys/inotify.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/inotify.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,60 @@
+#ifndef _SYS_INOTIFY_H
+#define _SYS_INOTIFY_H
+
+#include <sys/cdefs.h>
+
+struct inotify_event {
+	__s32		wd;		/* watch descriptor */
+	__u32		mask;		/* watch mask */
+	__u32		cookie;		/* cookie to synchronize two events */
+	__u32		len;		/* length (including nulls) of name */
+	char		name[0];	/* stub for possible name */
+};
+
+/* the following are legal, implemented events that user-space can watch for */
+#define IN_ACCESS		0x00000001	/* File was accessed */
+#define IN_MODIFY		0x00000002	/* File was modified */
+#define IN_ATTRIB		0x00000004	/* Metadata changed */
+#define IN_CLOSE_WRITE		0x00000008	/* Writtable file was closed */
+#define IN_CLOSE_NOWRITE	0x00000010	/* Unwrittable file closed */
+#define IN_OPEN			0x00000020	/* File was opened */
+#define IN_MOVED_FROM		0x00000040	/* File was moved from X */
+#define IN_MOVED_TO		0x00000080	/* File was moved to Y */
+#define IN_CREATE		0x00000100	/* Subfile was created */
+#define IN_DELETE		0x00000200	/* Subfile was deleted */
+#define IN_DELETE_SELF		0x00000400	/* Self was deleted */
+#define IN_MOVE_SELF		0x00000800	/* Self was moved */
+
+/* the following are legal events.  they are sent as needed to any watch */
+#define IN_UNMOUNT		0x00002000	/* Backing fs was unmounted */
+#define IN_Q_OVERFLOW		0x00004000	/* Event queued overflowed */
+#define IN_IGNORED		0x00008000	/* File was ignored */
+
+/* helper events */
+#define IN_CLOSE		(IN_CLOSE_WRITE | IN_CLOSE_NOWRITE) /* close */
+#define IN_MOVE			(IN_MOVED_FROM | IN_MOVED_TO) /* moves */
+
+/* special flags */
+#define IN_ISDIR		0x40000000	/* event occurred against dir */
+#define IN_ONESHOT		0x80000000	/* only send event once */
+
+/*
+ * All of the events - we build the list by hand so that we can add flags in
+ * the future and not break backward compatibility.  Apps will get only the
+ * events that they originally wanted.  Be sure to add new events here!
+ */
+#define IN_ALL_EVENTS	(IN_ACCESS | IN_MODIFY | IN_ATTRIB | IN_CLOSE_WRITE | \
+			 IN_CLOSE_NOWRITE | IN_OPEN | IN_MOVED_FROM | \
+			 IN_MOVED_TO | IN_DELETE | IN_CREATE | IN_DELETE_SELF | \
+			 IN_MOVE_SELF)
+
+
+__BEGIN_DECLS
+
+int inotify_init(void) __THROW;
+int inotify_add_watch(int fd,const char* path,unsigned long mask);
+int inotify_rm_watch(int fd,int wd);
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/ipc.h ./include/sys/ipc.h
--- ../../dietlibc/include/sys/ipc.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/ipc.h	2005-10-05 12:30:49.000000000 +0000
@@ -45,7 +45,7 @@
   uid_t	cuid;
   gid_t	cgid;
   mode_t	mode; 
-  unsigned short	seq;
+  uint16_t	seq;
 };
 
 /* this is so bad, we moved it to -lcompat */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/key.h ./include/sys/key.h
--- ../../dietlibc/include/sys/key.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/key.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,54 @@
+#ifndef _SYS_KEY_H
+#define _SYS_KEY_H
+
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
+typedef int32_t key_serial_t;
+typedef uint32_t key_perm_t;
+
+/* special process keyring shortcut IDs */
+#define KEY_SPEC_THREAD_KEYRING		-1	/* - key ID for thread-specific keyring */
+#define KEY_SPEC_PROCESS_KEYRING	-2	/* - key ID for process-specific keyring */
+#define KEY_SPEC_SESSION_KEYRING	-3	/* - key ID for session-specific keyring */
+#define KEY_SPEC_USER_KEYRING		-4	/* - key ID for UID-specific keyring */
+#define KEY_SPEC_USER_SESSION_KEYRING	-5	/* - key ID for UID-session keyring */
+#define KEY_SPEC_GROUP_KEYRING		-6	/* - key ID for GID-specific keyring */
+
+/* request-key default keyrings */
+#define KEY_REQKEY_DEFL_NO_CHANGE		-1
+#define KEY_REQKEY_DEFL_DEFAULT			0
+#define KEY_REQKEY_DEFL_THREAD_KEYRING		1
+#define KEY_REQKEY_DEFL_PROCESS_KEYRING		2
+#define KEY_REQKEY_DEFL_SESSION_KEYRING		3
+#define KEY_REQKEY_DEFL_USER_KEYRING		4
+#define KEY_REQKEY_DEFL_USER_SESSION_KEYRING	5
+#define KEY_REQKEY_DEFL_GROUP_KEYRING		6
+
+/* keyctl commands */
+#define KEYCTL_GET_KEYRING_ID		0	/* ask for a keyring's ID */
+#define KEYCTL_JOIN_SESSION_KEYRING	1	/* join or start named session keyring */
+#define KEYCTL_UPDATE			2	/* update a key */
+#define KEYCTL_REVOKE			3	/* revoke a key */
+#define KEYCTL_CHOWN			4	/* set ownership of a key */
+#define KEYCTL_SETPERM			5	/* set perms on a key */
+#define KEYCTL_DESCRIBE			6	/* describe a key */
+#define KEYCTL_CLEAR			7	/* clear contents of a keyring */
+#define KEYCTL_LINK			8	/* link a key into a keyring */
+#define KEYCTL_UNLINK			9	/* unlink a key from a keyring */
+#define KEYCTL_SEARCH			10	/* search for a key in a keyring */
+#define KEYCTL_READ			11	/* read a key or keyring's contents */
+#define KEYCTL_INSTANTIATE		12	/* instantiate a partially constructed key */
+#define KEYCTL_NEGATE			13	/* negate a partially constructed key */
+#define KEYCTL_SET_REQKEY_KEYRING	14	/* set default request-key keyring */
+
+key_serial_t add_key(const char *type, const char *desc, const void
+		     *payload, size_t plen, key_serial_t keyring);
+
+key_serial_t request_key(const char *type, const char *description,
+			 const char *callout_info, key_serial_t
+			 dest_keyring);
+
+key_serial_t keyctl(int cmd, ...);
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/personality.h ./include/sys/personality.h
--- ../../dietlibc/include/sys/personality.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/personality.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,114 @@
+#ifndef _PERSONALITY_H
+#define _PERSONALITY_H
+
+/*
+ * Handling of different ABIs (personalities).
+ */
+
+struct exec_domain;
+struct pt_regs;
+
+extern int		register_exec_domain(struct exec_domain *);
+extern int		unregister_exec_domain(struct exec_domain *);
+extern int		__set_personality(unsigned long);
+
+/*
+ * Flags for bug emulation.
+ *
+ * These occupy the top three bytes.
+ */
+enum {
+	ADDR_NO_RANDOMIZE = 	0x0040000,	/* disable randomization of VA space */
+	FDPIC_FUNCPTRS =	0x0080000,	/* userspace function ptrs point to descriptors
+						 * (signal handling)
+						 */
+	MMAP_PAGE_ZERO =	0x0100000,
+	ADDR_COMPAT_LAYOUT =	0x0200000,
+	READ_IMPLIES_EXEC =	0x0400000,
+	ADDR_LIMIT_32BIT =	0x0800000,
+	SHORT_INODE =		0x1000000,
+	WHOLE_SECONDS =		0x2000000,
+	STICKY_TIMEOUTS	=	0x4000000,
+	ADDR_LIMIT_3GB = 	0x8000000,
+};
+
+/*
+ * Security-relevant compatibility flags that must be
+ * cleared upon setuid or setgid exec:
+ */
+#define PER_CLEAR_ON_SETID (READ_IMPLIES_EXEC|ADDR_NO_RANDOMIZE)
+
+/*
+ * Personality types.
+ *
+ * These go in the low byte.  Avoid using the top bit, it will
+ * conflict with error returns.
+ */
+enum {
+	PER_LINUX =		0x0000,
+	PER_LINUX_32BIT =	0x0000 | ADDR_LIMIT_32BIT,
+	PER_LINUX_FDPIC =	0x0000 | FDPIC_FUNCPTRS,
+	PER_SVR4 =		0x0001 | STICKY_TIMEOUTS | MMAP_PAGE_ZERO,
+	PER_SVR3 =		0x0002 | STICKY_TIMEOUTS | SHORT_INODE,
+	PER_SCOSVR3 =		0x0003 | STICKY_TIMEOUTS |
+					 WHOLE_SECONDS | SHORT_INODE,
+	PER_OSR5 =		0x0003 | STICKY_TIMEOUTS | WHOLE_SECONDS,
+	PER_WYSEV386 =		0x0004 | STICKY_TIMEOUTS | SHORT_INODE,
+	PER_ISCR4 =		0x0005 | STICKY_TIMEOUTS,
+	PER_BSD =		0x0006,
+	PER_SUNOS =		0x0006 | STICKY_TIMEOUTS,
+	PER_XENIX =		0x0007 | STICKY_TIMEOUTS | SHORT_INODE,
+	PER_LINUX32 =		0x0008,
+	PER_LINUX32_3GB =	0x0008 | ADDR_LIMIT_3GB,
+	PER_IRIX32 =		0x0009 | STICKY_TIMEOUTS,/* IRIX5 32-bit */
+	PER_IRIXN32 =		0x000a | STICKY_TIMEOUTS,/* IRIX6 new 32-bit */
+	PER_IRIX64 =		0x000b | STICKY_TIMEOUTS,/* IRIX6 64-bit */
+	PER_RISCOS =		0x000c,
+	PER_SOLARIS =		0x000d | STICKY_TIMEOUTS,
+	PER_UW7 =		0x000e | STICKY_TIMEOUTS | MMAP_PAGE_ZERO,
+	PER_OSF4 =		0x000f,			 /* OSF/1 v4 */
+	PER_HPUX =		0x0010,
+	PER_MASK =		0x00ff,
+};
+
+
+/*
+ * Description of an execution domain.
+ * 
+ * The first two members are refernced from assembly source
+ * and should stay where they are unless explicitly needed.
+ */
+typedef void (*handler_t)(int, struct pt_regs *);
+
+struct exec_domain {
+	const char		*name;		/* name of the execdomain */
+	handler_t		handler;	/* handler for syscalls */
+	unsigned char		pers_low;	/* lowest personality */
+	unsigned char		pers_high;	/* highest personality */
+	unsigned long		*signal_map;	/* signal mapping */
+	unsigned long		*signal_invmap;	/* reverse signal mapping */
+	struct map_segment	*err_map;	/* error mapping */
+	struct map_segment	*socktype_map;	/* socket type mapping */
+	struct map_segment	*sockopt_map;	/* socket option mapping */
+	struct map_segment	*af_map;	/* address family mapping */
+	struct module		*module;	/* module context of the ed. */
+	struct exec_domain	*next;		/* linked list (internal) */
+};
+
+/*
+ * Return the base personality without flags.
+ */
+#define personality(pers)	(pers & PER_MASK)
+
+/*
+ * Personality of the currently running process.
+ */
+#define get_personality		(current->personality)
+
+/*
+ * Change personality of the currently running process.
+ */
+#define set_personality(pers) \
+	((current->personality == pers) ? 0 : __set_personality(pers))
+
+#endif /* _PERSONALITY_H */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/ptrace.h ./include/sys/ptrace.h
--- ../../dietlibc/include/sys/ptrace.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/ptrace.h	2005-10-05 12:30:49.000000000 +0000
@@ -2,6 +2,7 @@
 #define _SYS_PTRACE_H
 
 #include <sys/cdefs.h>
+#include <inttypes.h>
 
 __BEGIN_DECLS
 
@@ -71,14 +72,14 @@
   long edi;
   long ebp;
   long eax;
-  int  xds;
-  int  xes;
+  int32_t xds;
+  int32_t xes;
   long orig_eax;
   long eip;
-  int  xcs;
+  int32_t xcs;
   long eflags;
   long esp;
-  int  xss;
+  int32_t xss;
 };
 
 /* Arbitrarily choose the same ptrace numbers as used by the Sparc code. */
@@ -184,8 +185,6 @@
 
 #define STACK_FRAME_OVERHEAD	96	/* size of minimum stack frame */
 
-#include <inttypes.h>
-
 /* this typedef defines how a Program Status Word looks like */
 typedef struct {
         uint32_t   mask;
@@ -245,20 +244,20 @@
 
 typedef	struct
 {
-	unsigned em_branching          : 1;
-	unsigned em_instruction_fetch  : 1;
+	uint32_t em_branching          : 1;
+	uint32_t em_instruction_fetch  : 1;
 	/*
 	 * Switching on storage alteration automatically fixes
 	 * the storage alteration event bit in the users std.
 	 */
-	unsigned em_storage_alteration : 1;
-	unsigned em_gpr_alt_unused     : 1;
-	unsigned em_store_real_address : 1;
-	unsigned                       : 3;
-	unsigned branch_addr_ctl       : 1;
-	unsigned                       : 1;
-	unsigned storage_alt_space_ctl : 1;
-	unsigned                       : 21;
+	uint32_t em_storage_alteration : 1;
+	uint32_t em_gpr_alt_unused     : 1;
+	uint32_t em_store_real_address : 1;
+	uint32_t                       : 3;
+	uint32_t branch_addr_ctl       : 1;
+	uint32_t                       : 1;
+	uint32_t storage_alt_space_ctl : 1;
+	uint32_t                       : 21;
 	addr_t   starting_addr;
 	addr_t   ending_addr;
 } per_cr_bits  __attribute__((__packed__));
@@ -272,21 +271,21 @@
 
 typedef struct
 {
-	unsigned perc_branching          : 1; /* 0x096 */
-	unsigned perc_instruction_fetch  : 1;
-	unsigned perc_storage_alteration : 1;
-	unsigned perc_gpr_alt_unused     : 1;
-	unsigned perc_store_real_address : 1;
-	unsigned                         : 4;
-	unsigned atmid_validity_bit      : 1;
-	unsigned atmid_psw_bit_32        : 1;
-	unsigned atmid_psw_bit_5         : 1;
-	unsigned atmid_psw_bit_16        : 1;
-	unsigned atmid_psw_bit_17        : 1;
-	unsigned si                      : 2;
+	uint32_t perc_branching          : 1; /* 0x096 */
+	uint32_t perc_instruction_fetch  : 1;
+	uint32_t perc_storage_alteration : 1;
+	uint32_t perc_gpr_alt_unused     : 1;
+	uint32_t perc_store_real_address : 1;
+	uint32_t                         : 4;
+	uint32_t atmid_validity_bit      : 1;
+	uint32_t atmid_psw_bit_32        : 1;
+	uint32_t atmid_psw_bit_5         : 1;
+	uint32_t atmid_psw_bit_16        : 1;
+	uint32_t atmid_psw_bit_17        : 1;
+	uint32_t si                      : 2;
 	addr_t   address;                     /* 0x098 */
-	unsigned                         : 4; /* 0x0a1 */
-	unsigned access_id               : 4;
+	uint32_t                         : 4; /* 0x0a1 */
+	uint32_t access_id               : 4;
 } per_lowcore_bits __attribute__((__packed__));
 
 typedef struct
@@ -300,9 +299,9 @@
 	 * directly they are used so that single stepping can be
 	 * switched on & off while not affecting other tracing
 	 */
-	unsigned  single_step       : 1;
-	unsigned  instruction_fetch : 1;
-	unsigned                    : 30;
+	uint32_t  single_step       : 1;
+	uint32_t  instruction_fetch : 1;
+	uint32_t                    : 30;
 	/*
 	 * These addresses are copied into cr10 & cr11 if single
 	 * stepping is switched off
diff -urNxCVS -xdebian ../../dietlibc/include/sys/quota.h ./include/sys/quota.h
--- ../../dietlibc/include/sys/quota.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/quota.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,121 @@
+#ifndef _SYS_QUOTA_H
+#define _SYS_QUOTA_H 1
+
+#include <inttypes.h>
+#include <sys/types.h>
+#include <sys/mount.h>
+
+/*
+ * Convert diskblocks to blocks and the other way around.
+ * currently only to fool the BSD source. :-)
+ */
+#define dbtob(num) ((num) << 10)
+#define btodb(num) ((num) >> 10)
+
+/*
+ * Convert count of filesystem blocks to diskquota blocks, meant
+ * for filesystems where i_blksize != BLOCK_SIZE
+ */
+#define fs_to_dq_blocks(num, blksize) (((num) * (blksize)) / BLOCK_SIZE)
+
+/*
+ * Definitions for disk quotas imposed on the average user
+ * (big brother finally hits Linux).
+ *
+ * The following constants define the amount of time given a user
+ * before the soft limits are treated as hard limits (usually resulting
+ * in an allocation failure). The timer is started when the user crosses
+ * their soft limit, it is reset when they go below their soft limit.
+ */
+#define MAX_IQ_TIME  604800	/* (7*24*60*60) 1 week */
+#define MAX_DQ_TIME  604800	/* (7*24*60*60) 1 week */
+
+#define MAXQUOTAS 2
+#define USRQUOTA  0		/* element used for user quotas */
+#define GRPQUOTA  1		/* element used for group quotas */
+
+/*
+ * Definitions for the default names of the quotas files.
+ */
+#define INITQFNAMES { \
+   "user",      /* USRQUOTA */ \
+   "group",   /* GRPQUOTA */ \
+   "undefined", \
+};
+
+#define QUOTAFILENAME "quota"
+#define QUOTAGROUP "staff"
+
+#define NR_DQHASH 43          /* Just an arbitrary number any suggestions ? */
+#define NR_DQUOTS 256         /* Number of quotas active at one time */
+
+/*
+ * Command definitions for the 'quotactl' system call.
+ * The commands are broken into a main command defined below
+ * and a subcommand that is used to convey the type of
+ * quota that is being manipulated (see above).
+ */
+#define SUBCMDMASK  0x00ff
+#define SUBCMDSHIFT 8
+#define QCMD(cmd, type)  (((cmd) << SUBCMDSHIFT) | ((type) & SUBCMDMASK))
+
+#define Q_QUOTAON  0x0100	/* enable quotas */
+#define Q_QUOTAOFF 0x0200	/* disable quotas */
+#define Q_GETQUOTA 0x0300	/* get limits and usage */
+#define Q_SETQUOTA 0x0400	/* set limits and usage */
+#define Q_SETUSE   0x0500	/* set usage */
+#define Q_SYNC     0x0600	/* sync disk copy of a filesystems quotas */
+#define Q_SETQLIM  0x0700	/* set limits */
+#define Q_GETSTATS 0x0800	/* get collected stats */
+#define Q_RSQUASH  0x1000	/* set root_squash option */
+
+/*
+ * The following structure defines the format of the disk quota file
+ * (as it appears on disk) - the file is an array of these structures
+ * indexed by user or group number.
+ */
+struct dqblk {
+  uint32_t dqb_bhardlimit;	/* absolute limit on disk blks alloc */
+  uint32_t dqb_bsoftlimit;	/* preferred limit on disk blks */
+  uint32_t dqb_curblocks;	/* current block count */
+  uint32_t dqb_ihardlimit;	/* maximum # allocated inodes */
+  uint32_t dqb_isoftlimit;	/* preferred inode limit */
+  uint32_t dqb_curinodes;	/* current # allocated inodes */
+  time_t dqb_btime;		/* time limit for excessive disk use */
+  time_t dqb_itime;		/* time limit for excessive files */
+};
+
+/*
+ * Shorthand notation.
+ */
+#define	dq_bhardlimit	dq_dqb.dqb_bhardlimit
+#define	dq_bsoftlimit	dq_dqb.dqb_bsoftlimit
+#define	dq_curblocks	dq_dqb.dqb_curblocks
+#define	dq_ihardlimit	dq_dqb.dqb_ihardlimit
+#define	dq_isoftlimit	dq_dqb.dqb_isoftlimit
+#define	dq_curinodes	dq_dqb.dqb_curinodes
+#define	dq_btime	dq_dqb.dqb_btime
+#define	dq_itime	dq_dqb.dqb_itime
+
+#define dqoff(UID)      ((loff_t)((UID) * sizeof (struct dqblk)))
+
+struct dqstats {
+  uint32_t lookups;
+  uint32_t drops;
+  uint32_t reads;
+  uint32_t writes;
+  uint32_t cache_hits;
+  uint32_t pages_allocated;
+  uint32_t allocated_dquots;
+  uint32_t free_dquots;
+  uint32_t syncs;
+};
+
+__BEGIN_DECLS
+
+extern int quotactl (int __cmd, const char *__special, int __id,
+		     void* __addr) __THROW;
+
+__END_DECLS
+
+#endif /* sys/quota.h */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/sem.h ./include/sys/sem.h
--- ../../dietlibc/include/sys/sem.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/sem.h	2005-10-05 12:30:49.000000000 +0000
@@ -29,14 +29,14 @@
   struct sem_queue	*sem_pending;		/* pending operations to be processed */
   struct sem_queue	**sem_pending_last;	/* last pending operation */
   struct sem_undo	*undo;			/* undo requests on this array */
-  unsigned short	sem_nsems;		/* no. of semaphores in array */
+  uint16_t		sem_nsems;		/* no. of semaphores in array */
 };
 
 /* semop system calls takes an array of these. */
 struct sembuf {
-  unsigned short  sem_num;	/* semaphore index in array */
-  short		sem_op;		/* semaphore operation */
-  short		sem_flg;	/* operation flags */
+  uint16_t		sem_num;	/* semaphore index in array */
+  int16_t		sem_op;		/* semaphore operation */
+  int16_t		sem_flg;	/* operation flags */
 };
 
 /* please complain to the glibc goons for the following misbehaviour */
@@ -53,16 +53,16 @@
 #define _SEM_SEMUN_UNDEFINED
 
 struct  seminfo {
-  int semmap;
-  int semmni;
-  int semmns;
-  int semmnu;
-  int semmsl;
-  int semopm;
-  int semume;
-  int semusz;
-  int semvmx;
-  int semaem;
+  int32_t semmap;
+  int32_t semmni;
+  int32_t semmns;
+  int32_t semmnu;
+  int32_t semmsl;
+  int32_t semopm;
+  int32_t semume;
+  int32_t semusz;
+  int32_t semvmx;
+  int32_t semaem;
 };
 
 #define SEMMNI  128		/* <= IPCMNI  max # of semaphore identifiers */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/shm.h ./include/sys/shm.h
--- ../../dietlibc/include/sys/shm.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/shm.h	2005-10-05 12:30:49.000000000 +0000
@@ -13,14 +13,14 @@
 
 struct shmid_ds {
   struct ipc_perm	shm_perm;	/* operation perms */
-  int			shm_segsz;	/* size of segment (bytes) */
+  int32_t		shm_segsz;	/* size of segment (bytes) */
   time_t		shm_atime;	/* last attach time */
   time_t		shm_dtime;	/* last detach time */
   time_t		shm_ctime;	/* last change time */
   pid_t			shm_cpid;	/* pid of creator */
   pid_t			shm_lpid;	/* pid of last operator */
-  unsigned short	shm_nattch;	/* no. of current attaches */
-  unsigned short 	shm_unused;	/* compatibility */
+  uint16_t		shm_nattch;	/* no. of current attaches */
+  uint16_t 		shm_unused;	/* compatibility */
   void 			*shm_unused2;	/* ditto - used by DIPC */
   void			*shm_unused3;	/* unused */
 };
@@ -44,15 +44,15 @@
 
 /* Obsolete, used only for backwards compatibility */
 struct	shminfo {
-  int shmmax;
-  int shmmin;
-  int shmmni;
-  int shmseg;
-  int shmall;
+  int32_t shmmax;
+  int32_t shmmin;
+  int32_t shmmni;
+  int32_t shmseg;
+  int32_t shmall;
 };
 
 struct shm_info {
-  int used_ids;
+  int32_t used_ids;
   unsigned long shm_tot;	/* total allocated shm */
   unsigned long shm_rss;	/* total resident shm */
   unsigned long shm_swp;	/* total swapped shm */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/stat.h ./include/sys/stat.h
--- ../../dietlibc/include/sys/stat.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/stat.h	2005-10-05 12:30:49.000000000 +0000
@@ -9,15 +9,15 @@
 
 #if defined(__i386__)
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -32,22 +32,22 @@
 };
 
 struct stat64 {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned char	__pad0[10];
 
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 	unsigned char	__pad3[10];
 
-__extension__	long long	st_size;
+__extension__	long long	st_size __attribute__((__packed__));
 	unsigned long	st_blksize;
 
 	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
@@ -62,18 +62,18 @@
 	unsigned long	st_ctime;
 	unsigned long	__pad7;		/* will be high 32 bits of ctime someday */
 
-__extension__	unsigned long long	st_ino;
+__extension__	unsigned long long	st_ino __attribute__((__packed__));
 };
 #elif defined(__sparc__) && defined(__arch64__)
 
 struct stat {
-	unsigned int  st_dev;
+	uint32_t  st_dev;
 	unsigned long   st_ino;
-	unsigned int  st_mode;
-	short   st_nlink;
-	unsigned int   st_uid;
-	unsigned int   st_gid;
-	unsigned int  st_rdev;
+	uint32_t  st_mode;
+	int16_t   st_nlink;
+	uint32_t   st_uid;
+	uint32_t   st_gid;
+	uint32_t  st_rdev;
 	long   st_size;
 	time_t  st_atime;
 	time_t  st_mtime;
@@ -88,44 +88,44 @@
 
 	unsigned long long	st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 
 	unsigned long long	st_rdev;
 
 	unsigned char	__pad3[8];
 
 	long long	st_size;
-	unsigned int	st_blksize;
+	uint32_t	st_blksize;
 
 	unsigned char	__pad4[8];
-	unsigned int	st_blocks;
+	uint32_t	st_blocks;
 
-	unsigned int	st_atime;
-	unsigned int	st_atime_nsec;
+	uint32_t	st_atime;
+	uint32_t	st_atime_nsec;
 
-	unsigned int	st_mtime;
-	unsigned int	st_mtime_nsec;
+	uint32_t	st_mtime;
+	uint32_t	st_mtime_nsec;
 
-	unsigned int	st_ctime;
-	unsigned int	st_ctime_nsec;
+	uint32_t	st_ctime;
+	uint32_t	st_ctime_nsec;
 
-	unsigned int	__unused4;
-	unsigned int	__unused5;
+	uint32_t	__unused4;
+	uint32_t	__unused5;
 };
 
 #elif defined(__sparc__)
 struct stat {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	short		st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
+	uint16_t	st_mode;
+	int16_t		st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
 	long		st_size;
 	long		st_atime;
 	unsigned long	__unused1;
@@ -140,67 +140,67 @@
 
 struct stat64 {
 	unsigned char	__pad0[6];
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 
 __extension__	unsigned long long	st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 
 	unsigned char	__pad2[6];
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 
 	unsigned char	__pad3[8];
 
 __extension__	long long	st_size;
-	unsigned int	st_blksize;
+	uint32_t	st_blksize;
 
 	unsigned char	__pad4[8];
-	unsigned int	st_blocks;
+	uint32_t	st_blocks;
 
-	  signed int	st_atime;
-	unsigned int	__unused1;
+	 int32_t	st_atime;
+	uint32_t	__unused1;
 
-	  signed int	st_mtime;
-	unsigned int	__unused2;
+	 int32_t	st_mtime;
+	uint32_t	__unused2;
 
-	  signed int	st_ctime;
-	unsigned int	__unused3;
+	 int32_t	st_ctime;
+	uint32_t	__unused3;
 
-	unsigned int	__unused4;
-	unsigned int	__unused5;
+	uint32_t	__unused4;
+	uint32_t	__unused5;
 };
 #elif defined(__alpha__)
 struct stat {
-	unsigned int	st_dev;
-	unsigned int	st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
-	unsigned int	st_rdev;
-	long		st_size;
-	  signed long	st_atime;
-	  signed long	st_mtime;
-	  signed long	st_ctime;
-	unsigned int	st_blksize;
-	int		st_blocks;
-	unsigned int	st_flags;
-	unsigned int	st_gen;
+	uint32_t	st_dev;
+	uint32_t	st_ino;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
+	uint32_t	st_rdev;
+	signed long	st_size;
+	signed long	st_atime;
+	signed long	st_mtime;
+	signed long	st_ctime;
+	uint32_t	st_blksize;
+	int32_t		st_blocks;
+	uint32_t	st_flags;
+	uint32_t	st_gen;
 };
 #elif defined(__mips__)
 struct stat {
-	unsigned int	st_dev;
+	uint32_t	st_dev;
 	long		st_pad1[3];		/* Reserved for network id */
 	ino_t		st_ino;
-	unsigned int	st_mode;
-	int		st_nlink;
-	int		st_uid;
-	int		st_gid;
-	unsigned int	st_rdev;
+	uint32_t	st_mode;
+	int32_t		st_nlink;
+	int32_t		st_uid;
+	int32_t		st_gid;
+	uint32_t	st_rdev;
 	long		st_pad2[2];
 	long		st_size;
 	long		st_pad3;
@@ -219,18 +219,18 @@
 	char		st_fstype[16];	/* Filesystem type name */
 	long		st_pad4[8];
 	/* Linux specific fields */
-	unsigned int	st_flags;
-	unsigned int	st_gen;
+	uint32_t	st_flags;
+	uint32_t	st_gen;
 };
 
 struct stat64 {
 	unsigned long	st_dev;
 	unsigned long	st_pad0[3];	/* Reserved for st_dev expansion  */
 __extension__ unsigned long long	st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 	unsigned long	st_rdev;
 	unsigned long	st_pad1[3];	/* Reserved for st_rdev expansion  */
 __extension__ long long	st_size;
@@ -280,17 +280,17 @@
 	uint32_t 	st_gid;
 	unsigned long	st_rdev;
 	off_t		st_size;
-	unsigned long  	st_blksize;
-	unsigned long  	st_blocks;
-	unsigned long  	st_atime;
+	unsigned long	st_blksize;
+	unsigned long	st_blocks;
+	unsigned long	st_atime;
 	unsigned long	st_atime_nsec;
-	unsigned long  	st_mtime;
-	unsigned long  	st_mtime_nsec;
-	unsigned long  	st_ctime;
-	unsigned long  	st_ctime_nsec;
-	unsigned long  	__unused4;
-	unsigned long  	__unused5;
-	unsigned long  	__unused6;
+	unsigned long	st_mtime;
+	unsigned long	st_mtime_nsec;
+	unsigned long	st_ctime;
+	unsigned long	st_ctime_nsec;
+	unsigned long	__unused4;
+	unsigned long	__unused5;
+	unsigned long	__unused6;
 };
 #endif
 
@@ -320,15 +320,15 @@
 };
 #elif defined(__arm__)
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -346,25 +346,30 @@
  * insane amounts of padding around dev_t's.
  */
 struct stat64 {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned char	__pad0[10];
 
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 	unsigned char	__pad3[10];
 
 __extension__	long long	st_size;
 	unsigned long	st_blksize;
 
+#ifdef __ARMEB__
+	unsigned long	__pad4;		/* future possible st_blocks high bits */
+	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
+#else
 	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
 	unsigned long	__pad4;		/* future possible st_blocks high bits */
+#endif
 
 	  signed long	st_atime;
 	unsigned long	__pad5;
@@ -380,36 +385,36 @@
 #elif defined(__s390__)
 #if defined(__s390x__)
 struct stat {
-        unsigned long  st_dev;
-        unsigned long  st_ino;
-        unsigned long  st_nlink;
-        unsigned int   st_mode;
-        unsigned int   st_uid;
-        unsigned int   st_gid;
-        unsigned int   __pad1;
-        unsigned long  st_rdev;
-        unsigned long  st_size;
-        unsigned long  st_atime;
-        unsigned long   __reserved0;    /* reserved for atime.nanoseconds */
-        unsigned long  st_mtime;
-        unsigned long   __reserved1;    /* reserved for mtime.nanoseconds */
-        unsigned long  st_ctime;
-        unsigned long   __reserved2;    /* reserved for ctime.nanoseconds */
-        unsigned long  st_blksize;
-        long           st_blocks;
-        unsigned long  __unused[3];
+        unsigned long	st_dev;
+        unsigned long	st_ino;
+        unsigned long	st_nlink;
+        uint32_t	st_mode;
+        uint32_t	st_uid;
+        uint32_t	st_gid;
+        uint32_t	__pad1;
+        unsigned long	st_rdev;
+        unsigned long	st_size;
+        unsigned long	st_atime;
+        unsigned long	__reserved0;    /* reserved for atime.nanoseconds */
+        unsigned long	st_mtime;
+        unsigned long	__reserved1;    /* reserved for mtime.nanoseconds */
+        unsigned long	st_ctime;
+        unsigned long	__reserved2;    /* reserved for ctime.nanoseconds */
+        unsigned long	st_blksize;
+        long		st_blocks;
+        unsigned long	__unused[3];
 };
 #else
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -425,17 +430,17 @@
 #endif
 struct stat64 {
 	unsigned char	__pad0[6];
-	unsigned short	st_dev;
-	unsigned int	__pad1;
+	uint16_t	st_dev;
+	uint32_t	__pad1;
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 	unsigned char	__pad2[6];
-	unsigned short	st_rdev;
-	unsigned int	__pad3;
+	uint16_t	st_rdev;
+	uint32_t	__pad3;
 __extension__	long long	st_size;
 	unsigned long	st_blksize;
 	unsigned char	__pad4[4];
@@ -453,57 +458,57 @@
 #elif defined(__hppa__)
 
 struct stat {
-       unsigned long   st_dev;         /* dev_t is 32 bits on parisc */
-       unsigned long   st_ino;         /* 32 bits */
-       unsigned short  st_mode;        /* 16 bits */
-       unsigned short  st_nlink;       /* 16 bits */
-       unsigned short  st_reserved1;   /* old st_uid */
-       unsigned short  st_reserved2;   /* old st_gid */
-       unsigned long   st_rdev;
-       unsigned long   st_size;
-       unsigned long   st_atime;
-       unsigned long   st_spare1;
-       unsigned long   st_mtime;
-       unsigned long   st_spare2;
-       unsigned long   st_ctime;
-       unsigned long   st_spare3;
-       long            st_blksize;
-       long            st_blocks;
-       unsigned long   __unused1;      /* ACL stuff */
-       unsigned long   __unused2;      /* network */
-       unsigned long   __unused3;      /* network */
-       unsigned long   __unused4;      /* cnodes */
-       unsigned short  __unused5;      /* netsite */
-       short           st_fstype;
-       unsigned long   st_realdev;
-       unsigned short  st_basemode;
-       unsigned short  st_spareshort;
-       unsigned long   st_uid;
-       unsigned long   st_gid;
-       unsigned long   st_spare4[3];
+       unsigned long	st_dev;         /* dev_t is 32 bits on parisc */
+       unsigned long	st_ino;         /* 32 bits */
+       uint16_t		st_mode;        /* 16 bits */
+       uint16_t		st_nlink;       /* 16 bits */
+       uint16_t		st_reserved1;   /* old st_uid */
+       uint16_t		st_reserved2;   /* old st_gid */
+       unsigned long	st_rdev;
+       unsigned long	st_size;
+       unsigned long	st_atime;
+       unsigned long	st_spare1;
+       unsigned long	st_mtime;
+       unsigned long	st_spare2;
+       unsigned long	st_ctime;
+       unsigned long	st_spare3;
+       long		st_blksize;
+       long		st_blocks;
+       unsigned long	__unused1;      /* ACL stuff */
+       unsigned long	__unused2;      /* network */
+       unsigned long	__unused3;      /* network */
+       unsigned long	__unused4;      /* cnodes */
+       uint16_t		__unused5;      /* netsite */
+       int16_t		st_fstype;
+       unsigned long	st_realdev;
+       uint16_t		st_basemode;
+       uint16_t		st_spareshort;
+       unsigned long	st_uid;
+       unsigned long	st_gid;
+       unsigned long	st_spare4[3];
 };
 
 struct stat64 {
 	unsigned long long st_dev;
-	unsigned int __pad1;
+	uint32_t	__pad1;
 #define STAT64_HAS_BROKEN_ST_INO	1
-	unsigned long __st_ino;
-	unsigned long st_mode;
-	unsigned long st_nlink;
-	unsigned long st_uid;
-	unsigned long st_gid;
+	unsigned long	__st_ino;
+	unsigned long	st_mode;
+	unsigned long	st_nlink;
+	unsigned long	st_uid;
+	unsigned long	st_gid;
 	unsigned long long st_rdev;
-	unsigned int __pad2;
+	uint32_t	__pad2;
 	unsigned long long st_size;
-	unsigned long st_blksize;
+	unsigned long	st_blksize;
 
 	unsigned long long st_blocks;
- 	unsigned long st_atime;
-	unsigned long int __unused1;
-	unsigned long st_mtime;
-	unsigned long int __unused2;
-	unsigned long st_ctime;
-	unsigned long int __unused3;
+ 	unsigned long	st_atime;
+	unsigned long	__unused1;
+	unsigned long	st_mtime;
+	unsigned long	__unused2;
+	unsigned long	st_ctime;
+	unsigned long	__unused3;
 	unsigned long long st_ino;
 };
 
@@ -535,10 +540,10 @@
 	unsigned long	st_dev;
 	unsigned long	st_ino;
 	unsigned long	st_nlink;
-	unsigned int	st_mode;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
-	unsigned int	__pad;
+	uint32_t	st_mode;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
+	uint32_t	__pad;
 	unsigned long	st_rdev;
 	unsigned long	st_size;
 	unsigned long	st_atime;
@@ -554,17 +559,17 @@
 
 #endif
 
-#define S_IFMT  00170000
-#define S_IFSOCK 0140000
-#define S_IFLNK	 0120000
-#define S_IFREG  0100000
-#define S_IFBLK  0060000
-#define S_IFDIR  0040000
-#define S_IFCHR  0020000
-#define S_IFIFO  0010000
-#define S_ISUID  0004000
-#define S_ISGID  0002000
-#define S_ISVTX  0001000
+#define S_IFMT	       00170000
+#define S_IFSOCK	0140000
+#define S_IFLNK		0120000
+#define S_IFREG		0100000
+#define S_IFBLK		0060000
+#define S_IFDIR		0040000
+#define S_IFCHR		0020000
+#define S_IFIFO		0010000
+#define S_ISUID		0004000
+#define S_ISGID		0002000
+#define S_ISVTX		0001000
 
 #define S_ISLNK(m)	(((m) & S_IFMT) == S_IFLNK)
 #define S_ISREG(m)	(((m) & S_IFMT) == S_IFREG)
@@ -611,7 +616,7 @@
 
 #define major(dev) (((dev)>>8) & 0xff)
 #define minor(dev) ((dev) & 0xff)
-#define makedev(major, minor) ((((unsigned int) (major)) << 8) | ((unsigned int) (minor)))
+#define makedev(major, minor) ((((uint32_t) (major)) << 8) | ((uint32_t) (minor)))
 
 extern int chmod (const char *__file, mode_t __mode) __THROW;
 extern int fchmod (int __fd, mode_t __mode) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/include/sys/statfs.h ./include/sys/statfs.h
--- ../../dietlibc/include/sys/statfs.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/statfs.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,196 @@
+#ifndef _SYS_STATFS_H
+#define _SYS_STATFS_H
+
+#include <sys/cdefs.h>
+#include <endian.h>
+#include <sys/types.h>
+
+__BEGIN_DECLS
+
+typedef struct {
+  int32_t __val[2];
+} __kernel_fsid_t;
+
+#if defined(__mips64__)
+
+struct statfs {
+  int64_t		f_type;
+#define f_fstyp f_type
+  int64_t		f_bsize;
+  int64_t		f_frsize;	/* Fragment size - unsupported */
+  int64_t		f_blocks;
+  int64_t		f_bfree;
+  int64_t		f_files;
+  int64_t		f_ffree;
+  int64_t		f_bavail;
+
+  /* Linux specials */
+  __kernel_fsid_t	f_fsid;
+  int64_t		f_namelen;
+  int64_t		f_spare[6];
+};
+
+struct statfs64 {			/* Same as struct statfs */
+  int64_t		f_type;
+  int64_t		f_bsize;
+  int64_t		f_frsize;	/* Fragment size - unsupported */
+  int64_t		f_blocks;
+  int64_t		f_bfree;
+  int64_t		f_files;
+  int64_t		f_ffree;
+  int64_t		f_bavail;
+
+  /* Linux specials */
+  __kernel_fsid_t	f_fsid;
+  int64_t		f_namelen;
+  int64_t		f_spare[6];
+};
+
+#elif defined(__mips__)
+
+struct statfs {
+  int32_t		f_type;
+#define f_fstyp f_type
+  int32_t		f_bsize;
+  int32_t		f_frsize;	/* Fragment size - unsupported */
+  int32_t		f_blocks;
+  int32_t		f_bfree;
+  int32_t		f_files;
+  int32_t		f_ffree;
+  int32_t		f_bavail;
+
+  /* Linux specials */
+  __kernel_fsid_t	f_fsid;
+  int32_t		f_namelen;
+  int32_t		f_spare[6];
+};
+
+struct statfs64 {
+  uint32_t	f_type;
+  uint32_t	f_bsize;
+  uint32_t	f_frsize;	/* Fragment size - unsupported */
+  uint32_t	__pad;
+  uint64_t	f_blocks;
+  uint64_t	f_bfree;
+  uint64_t	f_files;
+  uint64_t	f_ffree;
+  uint64_t	f_bavail;
+  __kernel_fsid_t f_fsid;
+  uint32_t	f_namelen;
+  uint32_t	f_spare[6];
+};
+
+#elif defined(__s390x__)
+
+/* S/390 64-bit mode */
+
+struct statfs {
+  int32_t  f_type;
+  int32_t  f_bsize;
+  int64_t f_blocks;
+  int64_t f_bfree;
+  int64_t f_bavail;
+  int64_t f_files;
+  int64_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  int32_t  f_namelen;
+  int32_t  f_frsize;
+  int32_t  f_spare[5];
+};
+
+struct statfs64 {
+  int32_t  f_type;
+  int32_t  f_bsize;
+  int64_t f_blocks;
+  int64_t f_bfree;
+  int64_t f_bavail;
+  int64_t f_files;
+  int64_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  int32_t  f_namelen;
+  int32_t  f_frsize;
+  int32_t  f_spare[5];
+};
+
+#elif __WORDSIZE == 64
+
+/* generic 64-bit */
+
+struct statfs {
+  int64_t f_type;
+  int64_t f_bsize;
+  int64_t f_blocks;
+  int64_t f_bfree;
+  int64_t f_bavail;
+  int64_t f_files;
+  int64_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  int64_t f_namelen;
+  int64_t f_frsize;
+  int64_t f_spare[5];
+};
+
+struct statfs64 {
+  int64_t f_type;
+  int64_t f_bsize;
+  int64_t f_blocks;
+  int64_t f_bfree;
+  int64_t f_bavail;
+  int64_t f_files;
+  int64_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  int64_t f_namelen;
+  int64_t f_frsize;
+  int64_t f_spare[5];
+};
+
+#else
+
+/* generic 32-bit */
+
+struct statfs {
+  uint32_t f_type;
+  uint32_t f_bsize;
+  uint32_t f_blocks;
+  uint32_t f_bfree;
+  uint32_t f_bavail;
+  uint32_t f_files;
+  uint32_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  uint32_t f_namelen;
+  uint32_t f_frsize;
+  uint32_t f_spare[5];
+};
+
+struct statfs64 {
+  uint32_t f_type;
+  uint32_t f_bsize;
+  uint64_t f_blocks;
+  uint64_t f_bfree;
+  uint64_t f_bavail;
+  uint64_t f_files;
+  uint64_t f_ffree;
+  __kernel_fsid_t f_fsid;
+  uint32_t f_namelen;
+  uint32_t f_frsize;
+  uint32_t f_spare[5];
+};
+
+#endif
+
+int statfs(const char *path, struct statfs *buf) __THROW;
+int fstatfs(int fd, struct statfs *buf) __THROW;
+
+#if __WORDSIZE == 32
+int statfs64(const char *path, struct statfs64 *buf) __THROW;
+int fstatfs64(int fd, struct statfs64 *buf) __THROW;
+
+#if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
+#define statfs statfs64
+#define fstatfs fstatfs64
+#endif
+#endif
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/time.h ./include/sys/time.h
--- ../../dietlibc/include/sys/time.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/time.h	2005-10-05 12:30:49.000000000 +0000
@@ -75,7 +75,7 @@
 #define timersub(a,b,x) do { (x)->tv_sec=(a)->tv_sec-(b)->tv_sec; if (((x)->tv_usec=(a)->tv_usec-(b)->tv_usec)<0) { --(x)->tv_sec; (x)->tv_usec+=1000000; } } while (0)
 #define timerisset(x) ((x)->tv_sec || (x)->tv_usec)
 
-int utimes(char * filename, struct timeval * tvp);
+int utimes(const char * filename, struct timeval * tvp);
 #endif
 
 __END_DECLS
diff -urNxCVS -xdebian ../../dietlibc/include/sys/timex.h ./include/sys/timex.h
--- ../../dietlibc/include/sys/timex.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/timex.h	2005-10-05 12:30:49.000000000 +0000
@@ -2,16 +2,17 @@
 #define _SYS_TIMEX_H
 
 #include <sys/cdefs.h>
+#include <sys/types.h>
 
 __BEGIN_DECLS
 
 struct timex {
-  unsigned int modes;	/* mode selector */
+  uint32_t modes;	/* mode selector */
   long int offset;	/* time offset (usec) */
   long int freq;	/* frequency offset (scaled ppm) */
   long int maxerror;	/* maximum error (usec) */
   long int esterror;	/* estimated error (usec) */
-  int status;		/* clock command/status */
+  int32_t status;	/* clock command/status */
   long int constant;	/* pll time constant */
   long int precision;	/* clock precision (usec) (read only) */
   long int tolerance;	/* clock frequency tolerance (ppm) (read only) */
@@ -20,7 +21,7 @@
 
   long int ppsfreq;	/* pps frequency (scaled ppm) (ro) */
   long int jitter;	/* pps jitter (us) (ro) */
-  int shift;		/* interval duration (s) (shift) (ro) */
+  int32_t shift;	/* interval duration (s) (shift) (ro) */
   long int stabil;	/* pps stability (scaled ppm) (ro) */
   long int jitcnt;	/* jitter limit exceeded (ro) */
   long int calcnt;	/* calibration intervals (ro) */
@@ -28,9 +29,9 @@
   long int stbcnt;	/* stability limit exceeded (ro) */
 
   /* ??? */
-  int  :32; int  :32; int  :32; int  :32;
-  int  :32; int  :32; int  :32; int  :32;
-  int  :32; int  :32; int  :32; int  :32;
+  int32_t  :32; int32_t  :32; int32_t  :32; int32_t  :32;
+  int32_t  :32; int32_t  :32; int32_t  :32; int32_t  :32;
+  int32_t  :32; int32_t  :32; int32_t  :32; int32_t  :32;
 };
 
 #define ADJ_OFFSET            0x0001 /* time offset */
diff -urNxCVS -xdebian ../../dietlibc/include/sys/types.h ./include/sys/types.h
--- ../../dietlibc/include/sys/types.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/types.h	2005-10-05 12:30:49.000000000 +0000
@@ -50,29 +50,29 @@
     typedef uint32_t nlink_t;		/* Used for link counts. */
     typedef uint32_t uid_t;		/* Used for user IDs. */
 #elif defined(__arm__) || defined(__i386__) || defined(__sparc__) || defined(__s390__) /* make sure __s390x__ hits before __s390__ */
-    typedef unsigned short dev_t;
-    typedef unsigned short gid_t;
-    typedef unsigned short mode_t;
-    typedef unsigned short nlink_t;
-    typedef unsigned short uid_t;
+    typedef uint16_t dev_t;
+    typedef uint16_t gid_t;
+    typedef uint16_t mode_t;
+    typedef uint16_t nlink_t;
+    typedef uint16_t uid_t;
 #elif defined(__hppa__)
-    typedef unsigned int dev_t;
-    typedef unsigned int gid_t;
-    typedef unsigned short mode_t;
-    typedef unsigned short nlink_t;
-    typedef unsigned int uid_t;
+    typedef uint32_t dev_t;
+    typedef uint32_t gid_t;
+    typedef uint16_t mode_t;
+    typedef uint16_t nlink_t;
+    typedef uint32_t uid_t;
 #elif defined(__mips__)
-    typedef unsigned int dev_t;
-    typedef int gid_t;
-    typedef unsigned int mode_t;
-    typedef int nlink_t;
-    typedef int uid_t;
+    typedef uint32_t dev_t;
+    typedef int32_t gid_t;
+    typedef uint32_t mode_t;
+    typedef int32_t nlink_t;
+    typedef int32_t uid_t;
 #elif defined(__powerpc__) && !defined(__powerpc64__)
-    typedef unsigned int dev_t;
-    typedef unsigned int gid_t;
-    typedef unsigned int mode_t;
-    typedef unsigned short nlink_t;
-    typedef unsigned int uid_t;
+    typedef uint32_t dev_t;
+    typedef uint32_t gid_t;
+    typedef uint32_t mode_t;
+    typedef uint16_t nlink_t;
+    typedef uint32_t uid_t;
 #elif defined(__powerpc64__) || defined(__x86_64__)
     typedef unsigned long dev_t;
     typedef uint32_t gid_t;
diff -urNxCVS -xdebian ../../dietlibc/include/sys/vfs.h ./include/sys/vfs.h
--- ../../dietlibc/include/sys/vfs.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/vfs.h	2005-10-05 12:30:49.000000000 +0000
@@ -1,39 +1,6 @@
 #ifndef _SYS_VFS_H
 #define _SYS_VFS_H
 
-#include <sys/cdefs.h>
-#include <sys/types.h>
-
-__BEGIN_DECLS
-
-typedef struct {
-  int32_t __val[2];
-} __kernel_fsid_t;
-
-struct statfs {
-  long f_type;
-  long f_bsize;
-#ifdef __mips__
-  long f_frsize;
-#endif
-  long f_blocks;
-  long f_bfree;
-#ifndef __mips__
-  long f_bavail;
-#endif
-  long f_files;
-  long f_ffree;
-#ifdef __mips__
-  long f_bavail;
-#endif
-  __kernel_fsid_t f_fsid;
-  long f_namelen;
-  long f_spare[6];
-};
-
-int statfs(const char *path, struct statfs *buf) __THROW;
-int fstatfs(int fd, struct statfs *buf) __THROW;
-
-__END_DECLS
+#include <sys/statfs.h>
 
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/vm86.h ./include/sys/vm86.h
--- ../../dietlibc/include/sys/vm86.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/sys/vm86.h	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,147 @@
+#ifndef _SYS_VM86_H
+#define _SYS_VM86_H
+
+#include <sys/cdefs.h>
+#include <inttypes.h>
+
+/*
+ * I'm guessing at the VIF/VIP flag usage, but hope that this is how
+ * the Pentium uses them. Linux will return from vm86 mode when both
+ * VIF and VIP is set.
+ *
+ * On a Pentium, we could probably optimize the virtual flags directly
+ * in the eflags register instead of doing it "by hand" in vflags...
+ *
+ * Linus
+ */
+
+#define TF_MASK		0x00000100
+#define IF_MASK		0x00000200
+#define IOPL_MASK	0x00003000
+#define NT_MASK		0x00004000
+#define VM_MASK		0x00020000
+#define AC_MASK		0x00040000
+#define VIF_MASK	0x00080000	/* virtual interrupt flag */
+#define VIP_MASK	0x00100000	/* virtual interrupt pending */
+#define ID_MASK		0x00200000
+
+#define BIOSSEG		0x0f000
+
+#define CPU_086		0
+#define CPU_186		1
+#define CPU_286		2
+#define CPU_386		3
+#define CPU_486		4
+#define CPU_586		5
+
+/*
+ * Return values for the 'vm86()' system call
+ */
+#define VM86_TYPE(retval)	((retval) & 0xff)
+#define VM86_ARG(retval)	((retval) >> 8)
+
+#define VM86_SIGNAL	0	/* return due to signal */
+#define VM86_UNKNOWN	1	/* unhandled GP fault - IO-instruction or similar */
+#define VM86_INTx	2	/* int3/int x instruction (ARG = x) */
+#define VM86_STI	3	/* sti/popf/iret instruction enabled virtual interrupts */
+
+/*
+ * Additional return values when invoking new vm86()
+ */
+#define VM86_PICRETURN	4	/* return due to pending PIC request */
+#define VM86_TRAP	6	/* return due to DOS-debugger request */
+
+/*
+ * function codes when invoking new vm86()
+ */
+#define VM86_PLUS_INSTALL_CHECK	0
+#define VM86_ENTER		1
+#define VM86_ENTER_NO_BYPASS	2
+#define	VM86_REQUEST_IRQ	3
+#define VM86_FREE_IRQ		4
+#define VM86_GET_IRQ_BITS	5
+#define VM86_GET_AND_RESET_IRQ	6
+
+/*
+ * This is the stack-layout seen by the user space program when we have
+ * done a translation of "SAVE_ALL" from vm86 mode. The real kernel layout
+ * is 'kernel_vm86_regs' (see below).
+ */
+
+struct vm86_regs {
+/*
+ * normal regs, with special meaning for the segment descriptors..
+ */
+	int32_t ebx;
+	int32_t ecx;
+	int32_t edx;
+	int32_t esi;
+	int32_t edi;
+	int32_t ebp;
+	int32_t eax;
+	int32_t __null_ds;
+	int32_t __null_es;
+	int32_t __null_fs;
+	int32_t __null_gs;
+	int32_t orig_eax;
+	int32_t eip;
+	uint16_t cs, __csh;
+	int32_t eflags;
+	int32_t esp;
+	uint16_t ss, __ssh;
+/*
+ * these are specific to v86 mode:
+ */
+	uint16_t es, __esh;
+	uint16_t ds, __dsh;
+	uint16_t fs, __fsh;
+	uint16_t gs, __gsh;
+};
+
+struct revectored_struct {
+	uint32_t __map[8];			/* 256 bits */
+};
+
+struct vm86_struct {
+	struct vm86_regs regs;
+	uint32_t flags;
+	uint32_t screen_bitmap;
+	uint32_t cpu_type;
+	struct revectored_struct int_revectored;
+	struct revectored_struct int21_revectored;
+};
+
+/*
+ * flags masks
+ */
+#define VM86_SCREEN_BITMAP	0x0001
+
+struct vm86plus_info_struct {
+	uint32_t force_return_for_pic:1;
+	uint32_t vm86dbg_active:1;       /* for debugger */
+	uint32_t vm86dbg_TFpendig:1;     /* for debugger */
+	uint32_t unused:28;
+	uint32_t is_vm86pus:1;	      /* for vm86 internal use */
+	uint8_t vm86dbg_intxxtab[32];   /* for debugger */
+};
+
+struct vm86plus_struct {
+	struct vm86_regs regs;
+	uint32_t flags;
+	uint32_t screen_bitmap;
+	uint32_t cpu_type;
+	struct revectored_struct int_revectored;
+	struct revectored_struct int21_revectored;
+	struct vm86plus_info_struct vm86plus;
+};
+
+
+__BEGIN_DECLS
+
+/* Enter virtual 8086 mode.  */
+extern int vm86 (uint32_t __subfunction,
+		 struct vm86plus_struct *__info) __THROW;
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/wait.h ./include/sys/wait.h
--- ../../dietlibc/include/sys/wait.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/sys/wait.h	2005-10-05 12:30:49.000000000 +0000
@@ -48,6 +48,14 @@
 
 pid_t wait4(pid_t pid, int *status, int options, struct rusage *rusage) __THROW;
 
+typedef enum {
+  P_ALL,		/* Wait for any child.  */
+  P_PID,		/* Wait for specified process.  */
+  P_PGID		/* Wait for members of process group.  */
+} idtype_t;
+
+int waitid(idtype_t idtype, id_t id, siginfo_t *infop, int options);
+
 __END_DECLS
 
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/termios.h ./include/termios.h
--- ../../dietlibc/include/termios.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/termios.h	2005-10-05 12:30:49.000000000 +0000
@@ -90,7 +90,7 @@
   cc_t c_line;			/* line discipline */
   cc_t c_cc[NCCS];		/* control characters */
 };
-#elif defined(__mips__) || defined(__mips64__)
+#elif defined(__mips__)
 #define NCCS	23
 struct termios {
 	tcflag_t c_iflag;		/* input mode flags */
diff -urNxCVS -xdebian ../../dietlibc/include/time.h ./include/time.h
--- ../../dietlibc/include/time.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/time.h	2005-10-05 12:30:49.000000000 +0000
@@ -19,7 +19,8 @@
 
 int clock_settime(clockid_t clock_id,const struct timespec*tp);
 int clock_gettime(clockid_t clock_id,struct timespec*tp);
-int clock_getres (clockid_t clock_id,struct timespec*res);
+int clock_getres(clockid_t clock_id,struct timespec*res);
+int clock_nanosleep(clockid_t clock_id, int flags,const struct timespec *rqtp, struct timespec *rmtp);
 
 #define TIMER_ABSTIME            1
 
diff -urNxCVS -xdebian ../../dietlibc/include/unistd.h ./include/unistd.h
--- ../../dietlibc/include/unistd.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/unistd.h	2005-10-05 12:30:49.000000000 +0000
@@ -50,8 +50,8 @@
 int open64(const char* pathname,int flags, ...) __THROW;
 int creat(const char* pathname,mode_t mode) __THROW;
 int creat64(const char* pathname,mode_t mode) __THROW;
-int write(int fd,const void* buf,size_t len) __THROW;
-int read(int fd,void* buf,size_t len) __THROW;
+ssize_t write(int fd,const void* buf,size_t len) __THROW;
+ssize_t read(int fd,void* buf,size_t len) __THROW;
 int close(int fd) __THROW;
 
 int unlink(const char *pathname) __THROW;
@@ -68,7 +68,8 @@
 int execl(const char *path, ...) __THROW;
 int execle(const char *path, ...) __THROW;
 
-pid_t getpid(void) __THROW;
+pid_t getpid(void) __THROW __pure;
+
 pid_t getppid(void) __THROW;
 
 int setpgid (pid_t pid,pid_t pgid) __THROW;
@@ -260,6 +261,12 @@
 /* flags can be O_EXCL | O_NONBLOCK | O_TRUNC (forced unloading)
  * O_EXCL is there so the kernel can spot old rmmod versions */
 long delete_module(const char* name,unsigned int flags) __THROW;
+pid_t gettid(void) __THROW __pure;
+int tkill(pid_t tid, int sig) __THROW;
+int tgkill(pid_t tgid, pid_t tid, int sig) __THROW;
+/* see linux/fadvise.h */
+long fadvise64(int fd,off64_t offset,size_t len,int advice);
+long fadvise64_64(int fd,off64_t offset,off64_t len,int advice);
 #endif
 
 __END_DECLS
diff -urNxCVS -xdebian ../../dietlibc/include/ustat.h ./include/ustat.h
--- ../../dietlibc/include/ustat.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/ustat.h	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,25 @@
+#ifndef _USTAT_H
+#define _USTAT_H
+
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
+__BEGIN_DECLS
+
+struct ustat {
+#if defined(__mips__) || (defined(__sparc__) && !defined(__arch64__))
+  long f_tfree; /* should be daddr_t f_tfree */
+#else
+  int f_tfree; /* should be daddr_t f_tfree */
+#endif
+  unsigned long f_tinode;  /* should be ino_t f_tinode */
+  char f_fname[6];
+  char f_fpack[6];
+};
+
+int ustat(dev_t dev, struct ustat* ubuf) __THROW __attribute_dontuse__;
+
+__END_DECLS
+
+#endif
+
diff -urNxCVS -xdebian ../../dietlibc/include/wchar.h ./include/wchar.h
--- ../../dietlibc/include/wchar.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/wchar.h	2005-10-05 12:30:49.000000000 +0000
@@ -0,0 +1,99 @@
+#ifndef _WCHAR_H
+#define _WCHAR_H
+
+#include <sys/cdefs.h>
+#include <stddef.h>
+#include <stdarg.h>
+#include <stdio.h>
+
+__BEGIN_DECLS
+
+#if defined(__WINT_TYPE__)
+typedef __WINT_TYPE__ wint_t;
+#else
+typedef unsigned int wint_t;
+#endif
+typedef unsigned long int wctype_t;
+
+#ifndef WCHAR_MIN
+#define WCHAR_MIN (-2147483647 - 1)
+#define WCHAR_MAX (2147483647)
+#endif
+#ifndef WEOF
+#define WEOF 0xffffffffu
+#endif
+
+struct tm;
+
+typedef struct {
+  int count;
+  unsigned long sofar;
+} mbstate_t;
+
+wint_t btowc(int);
+wint_t fgetwc(FILE *);
+wchar_t* fgetws(wchar_t *__restrict__, int, FILE *__restrict__);
+wint_t fputwc(wchar_t, FILE *);
+int fputws(const wchar_t *__restrict__, FILE *__restrict__);
+int fwide(FILE *, int);
+int fwprintf(FILE *__restrict__, const wchar_t *__restrict__, ...);
+int fwscanf(FILE *__restrict__, const wchar_t *__restrict__, ...);
+wint_t getwc(FILE *);
+wint_t getwchar(void);
+
+size_t mbrlen(const char *__restrict__, size_t, mbstate_t *__restrict__);
+size_t mbrtowc(wchar_t *__restrict__, const char *__restrict__, size_t, mbstate_t *__restrict__);
+int mbsinit(const mbstate_t *);
+size_t mbsrtowcs(wchar_t *__restrict__, const char **__restrict__, size_t, mbstate_t *__restrict__);
+wint_t putwc(wchar_t, FILE *);
+wint_t putwchar(wchar_t);
+int swprintf(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, ...);
+int swscanf(const wchar_t *__restrict__, const wchar_t *__restrict__, ...);
+
+wint_t ungetwc(wint_t, FILE *);
+int vfwprintf(FILE *__restrict__, const wchar_t *__restrict__, va_list);
+int vfwscanf(FILE *__restrict__, const wchar_t *__restrict__, va_list);
+int vwprintf(const wchar_t *__restrict__, va_list);
+int vswprintf(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, va_list);
+int vswscanf(const wchar_t *__restrict__, const wchar_t *__restrict__, va_list);
+int vwscanf(const wchar_t *__restrict__, va_list);
+size_t wcrtomb(char *__restrict__, wchar_t, mbstate_t *__restrict__);
+wchar_t *wcscat(wchar_t *__restrict__, const wchar_t *__restrict__);
+wchar_t *wcschr(const wchar_t *, wchar_t);
+int wcscmp(const wchar_t *, const wchar_t *);
+int wcscoll(const wchar_t *, const wchar_t *);
+wchar_t* wcscpy(wchar_t *__restrict__, const wchar_t *__restrict__);
+size_t wcscspn(const wchar_t *, const wchar_t *);
+size_t wcsftime(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, const struct tm *__restrict__);
+size_t wcslen(const wchar_t *) __pure;
+wchar_t *wcsncat(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+int wcsncmp(const wchar_t *, const wchar_t *, size_t);
+wchar_t *wcsncpy(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+wchar_t *wcspbrk(const wchar_t *, const wchar_t *);
+wchar_t *wcsrchr(const wchar_t *, wchar_t);
+size_t wcsrtombs(char *__restrict__, const wchar_t **__restrict__, size_t, mbstate_t *__restrict__);
+size_t wcsspn(const wchar_t *, const wchar_t *);
+wchar_t *wcsstr(const wchar_t *__restrict__, const wchar_t *__restrict__);
+double wcstod(const wchar_t *__restrict__, wchar_t **__restrict__);
+float wcstof(const wchar_t *__restrict__, wchar_t **__restrict__);
+wchar_t *wcstok(wchar_t *__restrict__, const wchar_t *__restrict__, wchar_t **__restrict__);
+long wcstol(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+long double wcstold(const wchar_t *__restrict__, wchar_t **__restrict__);
+long long wcstoll(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+unsigned long wcstoul(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+unsigned long long wcstoull(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+
+size_t wcsxfrm(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+int wctob(wint_t);
+
+wchar_t *wmemchr(const wchar_t *, wchar_t, size_t);
+int wmemcmp(const wchar_t *, const wchar_t *, size_t);
+wchar_t *wmemcpy(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+wchar_t *wmemmove(wchar_t *, const wchar_t *, size_t);
+wchar_t *wmemset(wchar_t *, wchar_t, size_t);
+int wprintf(const wchar_t *__restrict__, ...);
+int wscanf(const wchar_t *__restrict__, ...);
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/wctype.h ./include/wctype.h
--- ../../dietlibc/include/wctype.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/wctype.h	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,28 @@
+#ifndef _WCTYPE_H
+#define _WCTYPE_H
+
+#include <sys/cdefs.h>
+#include <wchar.h>
+
+typedef const int32_t* wctrans_t;
+
+int iswalnum(wint_t) __THROW __attribute__ ((__const__));
+int iswalpha(wint_t) __THROW __attribute__ ((__const__));
+int iswblank(wint_t) __THROW __attribute__ ((__const__));
+int iswcntrl(wint_t) __THROW __attribute__ ((__const__));
+int iswdigit(wint_t) __THROW __attribute__ ((__const__));
+int iswgraph(wint_t) __THROW __attribute__ ((__const__));
+int iswlower(wint_t) __THROW __attribute__ ((__const__));
+int iswprint(wint_t) __THROW __attribute__ ((__const__));
+int iswpunct(wint_t) __THROW __attribute__ ((__const__));
+int iswspace(wint_t) __THROW __attribute__ ((__const__));
+int iswupper(wint_t) __THROW __attribute__ ((__const__));
+int iswxdigit(wint_t) __THROW __attribute__ ((__const__));
+int iswctype(wint_t, wctype_t) __THROW __attribute__ ((__const__));
+wint_t towctrans(wint_t, wctrans_t) __THROW;
+wint_t towlower(wint_t) __THROW;
+wint_t towupper(wint_t) __THROW;
+wctrans_t wctrans(const char *) __THROW;
+wctype_t wctype(const char *) __THROW;
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/write12.h ./include/write12.h
--- ../../dietlibc/include/write12.h	2005-10-05 13:17:23.000000000 +0000
+++ ./include/write12.h	2005-10-05 12:30:49.000000000 +0000
@@ -1,8 +1,9 @@
 #include <sys/cdefs.h>
+#include <sys/types.h>
 
 __BEGIN_DECLS
 
-int __write1 ( const char* s ) __attribute__ (( __regparm__(1) ));
-int __write2 ( const char* s ) __attribute__ (( __regparm__(1) ));
+ssize_t __write1 ( const char* s ) __attribute__ (( __regparm__(1) ));
+ssize_t __write2 ( const char* s ) __attribute__ (( __regparm__(1) ));
 
 __END_DECLS
diff -urNxCVS -xdebian ../../dietlibc/lib/__fcntl64.c ./lib/__fcntl64.c
--- ../../dietlibc/lib/__fcntl64.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/__fcntl64.c	2005-08-17 07:32:17.000000000 +0000
@@ -0,0 +1,58 @@
+#include <errno.h>
+#include "dietfeatures.h"
+#ifdef WANT_LARGEFILE_BACKCOMPAT
+#include <sys/stat.h>
+#ifndef __NO_STAT64
+#include <fcntl.h>
+#include <stdarg.h>
+
+extern int __dietlibc_fcntl64(int __fd, int cmd, ...);
+
+int fcntl64(int fd, int cmd, ...) {
+  va_list va;
+  va_start(va,cmd);
+  switch (cmd) {
+  case F_GETLK:
+  case F_SETLK:
+  case F_SETLKW:
+    {
+      struct flock64* x = va_arg(va,struct flock64*);
+      struct flock tmp;
+      int res;
+      if ((res=__dietlibc_fcntl64(fd,cmd,x))) {
+	if (errno!=ENOSYS) return -1;
+	tmp.l_type=x->l_type;
+	tmp.l_whence=x->l_whence;
+	tmp.l_start=x->l_start;
+	tmp.l_len=x->l_len;
+	tmp.l_pid=x->l_pid;
+	if (tmp.l_len != x->l_len || tmp.l_start != x->l_start) {
+	  errno=EOVERFLOW;
+	  return -1;
+	}
+	res=fcntl(fd,cmd,&tmp);
+	if (cmd==F_GETLK) {
+	  x->l_type=tmp.l_type;
+	  x->l_whence=tmp.l_whence;
+	  x->l_start=tmp.l_start;
+	  x->l_len=tmp.l_len;
+	  x->l_pid=tmp.l_pid;
+	}
+      }
+      return res;
+    }
+
+  default:
+    {
+      long arg = va_arg(va,long);
+      int res;
+      if ((res=__dietlibc_fcntl64(fd,cmd,arg))==-1) {
+	if (errno!=ENOSYS) return -1;
+	return fcntl(fd,cmd,arg);
+      }
+      return res;
+    }
+  }
+}
+#endif
+#endif
diff -urNxCVS -xdebian ../../dietlibc/lib/__fstatfs64.c ./lib/__fstatfs64.c
--- ../../dietlibc/lib/__fstatfs64.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/__fstatfs64.c	2005-10-04 17:48:30.000000000 +0000
@@ -0,0 +1,23 @@
+#include <errno.h>
+#include "dietfeatures.h"
+#include <sys/statfs.h>
+
+#if __WORDSIZE == 32
+
+extern int __dietlibc_fstatfs64(int fd, size_t bufsize, struct statfs64 *__buf);
+extern void __statfs64_cvt(const struct statfs *src,struct statfs64 *dest);
+
+int fstatfs64(int fd, struct statfs64 *__buf) {
+#ifdef WANT_LARGEFILE_BACKCOMPAT
+  if (__dietlibc_fstatfs64(fd,sizeof(*__buf),__buf)) {
+    struct statfs temp;
+    if (errno!=ENOSYS) return -1;
+    if (fstatfs(fd,&temp)) return -1;
+    __statfs64_cvt(&temp,__buf);
+  }
+  return 0;
+#else
+  return __dietlibc_fstatfs64(fd,sizeof(*__buf),buf);
+#endif
+}
+#endif
diff -urNxCVS -xdebian ../../dietlibc/lib/__statfs64.c ./lib/__statfs64.c
--- ../../dietlibc/lib/__statfs64.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/__statfs64.c	2005-10-04 17:48:30.000000000 +0000
@@ -0,0 +1,23 @@
+#include <errno.h>
+#include "dietfeatures.h"
+#include <sys/statfs.h>
+
+#if __WORDSIZE == 32
+
+extern int __dietlibc_statfs64(const char *path, size_t bufsize, struct statfs64 *__buf);
+extern void __statfs64_cvt(const struct statfs *src,struct statfs64 *dest);
+
+int statfs64(const char *__file, struct statfs64 *__buf) {
+#ifdef WANT_LARGEFILE_BACKCOMPAT
+  if (__dietlibc_statfs64(__file,sizeof(*__buf),__buf)) {
+    struct statfs temp;
+    if (errno!=ENOSYS) return -1;
+    if (statfs(__file,&temp)) return -1;
+    __statfs64_cvt(&temp,__buf);
+  }
+  return 0;
+#else
+  return __dietlibc_statfs64(__file,sizeof(*__buf),__buf);
+#endif
+}
+#endif
diff -urNxCVS -xdebian ../../dietlibc/lib/div.c ./lib/div.c
--- ../../dietlibc/lib/div.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/div.c	2005-10-12 08:53:33.000000000 +0000
@@ -0,0 +1,11 @@
+#include "dietwarning.h"
+#include <stdlib.h>
+
+div_t div(int numerator, int denominator) {
+  div_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
+
+link_warning("div","warning: your code uses div(), which is completely superfluous!");
diff -urNxCVS -xdebian ../../dietlibc/lib/getopt.c ./lib/getopt.c
--- ../../dietlibc/lib/getopt.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/getopt.c	2005-07-10 18:32:53.000000000 +0000
@@ -18,7 +18,7 @@
 int getopt(int argc, char * const argv[], const char *optstring) {
   static int lastidx,lastofs;
   char *tmp;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/lib/iswalnum.c ./lib/iswalnum.c
--- ../../dietlibc/lib/iswalnum.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswalnum.c	2005-07-25 14:53:14.000000000 +0000
@@ -0,0 +1,9 @@
+#include <ctype.h>
+#include <wctype.h>
+
+int __iswalnum_ascii(wint_t c);
+int __iswalnum_ascii(wint_t c) {
+  return (((unsigned char)c == c)?isalnum(c):0);
+}
+
+int iswalnum(wint_t c) __attribute__((weak,alias("__iswalnum_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswalpha.c ./lib/iswalpha.c
--- ../../dietlibc/lib/iswalpha.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswalpha.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <ctype.h>
+#include <wctype.h>
+
+int __iswalpha_ascii(wint_t c);
+int __iswalpha_ascii(wint_t c) {
+  return (((unsigned char)c == c)?isalpha(c):0);
+}
+
+int iswalpha(wint_t c) __attribute__((weak,alias("__iswalpha_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswblank.c ./lib/iswblank.c
--- ../../dietlibc/lib/iswblank.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswblank.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswblank_ascii(wint_t c);
+int __iswblank_ascii(wint_t c) {
+  return (c == ' ' || c == '\t');
+}
+
+int iswblank(wint_t c) __attribute__((weak,alias("__iswblank_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswcntrl.c ./lib/iswcntrl.c
--- ../../dietlibc/lib/iswcntrl.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswcntrl.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswcntrl_ascii(wint_t c);
+int __iswcntrl_ascii(wint_t c) {
+  return ((unsigned int)c < 32u || c == 127);
+}
+
+int iswcntrl(wint_t c) __attribute__((weak,alias("__iswcntrl_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswdigit.c ./lib/iswdigit.c
--- ../../dietlibc/lib/iswdigit.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswdigit.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,5 @@
+#include <wctype.h>
+
+int iswdigit(wint_t c) {
+    return (unsigned int)(c - '0') < 10u;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/iswgraph.c ./lib/iswgraph.c
--- ../../dietlibc/lib/iswgraph.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswgraph.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswgraph_ascii(wint_t c);
+int __iswgraph_ascii(wint_t c) {
+  return (unsigned int)(c - '!') < 127u - '!';
+}
+
+int iswgraph(wint_t c) __attribute__((weak,alias("__iswgraph_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswlower.c ./lib/iswlower.c
--- ../../dietlibc/lib/iswlower.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswlower.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswlower_ascii(wint_t c);
+int __iswlower_ascii(wint_t c) {
+  return (unsigned int) (c - 'a') < 26u;
+}
+
+int iswlower ( wint_t ch ) __attribute__((weak,alias("__iswlower_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswprint.c ./lib/iswprint.c
--- ../../dietlibc/lib/iswprint.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswprint.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswprint_ascii(wint_t c);
+int __iswprint_ascii(wint_t c) {
+    return (unsigned int)(c - ' ') < 127u - ' ';
+}
+
+int iswprint(wint_t c) __attribute__((weak,alias("__iswprint_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswpunct.c ./lib/iswpunct.c
--- ../../dietlibc/lib/iswpunct.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswpunct.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wctype.h>
+
+int __iswpunct_ascii(wint_t c);
+int __iswpunct_ascii(wint_t c)
+{
+  return iswprint (c) && !iswalnum(c) && !iswspace(c);
+}
+
+int iswpunct(wint_t c) __attribute__((weak,alias("__iswpunct_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswspace.c ./lib/iswspace.c
--- ../../dietlibc/lib/iswspace.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswspace.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswspace_ascii(wint_t c);
+int __iswspace_ascii(wint_t c) {
+  return (unsigned int)(c - 9) < 5u  ||  c == ' ';
+}
+
+int iswspace(wint_t c) __attribute__((weak,alias("__iswspace_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswupper.c ./lib/iswupper.c
--- ../../dietlibc/lib/iswupper.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswupper.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wctype.h>
+
+int __iswupper_ascii ( wint_t c );
+int __iswupper_ascii ( wint_t c )
+{
+    return (unsigned int)(c - 'A') < 26u;
+}
+
+int iswupper ( wint_t c ) __attribute__((weak,alias("__iswupper_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswxdigit.c ./lib/iswxdigit.c
--- ../../dietlibc/lib/iswxdigit.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswxdigit.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,10 @@
+#include <wctype.h>
+
+int __iswxdigit_ascii(wint_t c);
+int __iswxdigit_ascii(wint_t c)
+{
+    return (unsigned int)( c         - '0') < 10u  ||
+           (unsigned int)((c | 0x20) - 'a') <  6u;
+}
+
+int iswxdigit(wint_t c) __attribute__((weak,alias("__iswxdigit_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/ldiv.c ./lib/ldiv.c
--- ../../dietlibc/lib/ldiv.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/ldiv.c	2005-07-19 09:43:09.000000000 +0000
@@ -0,0 +1,8 @@
+#include <stdlib.h>
+
+ldiv_t ldiv(long numerator, long denominator) {
+  ldiv_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/lldiv.c ./lib/lldiv.c
--- ../../dietlibc/lib/lldiv.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/lldiv.c	2005-07-25 14:53:14.000000000 +0000
@@ -0,0 +1,9 @@
+#define _GNU_SOURCE
+#include <stdlib.h>
+
+lldiv_t lldiv(long long numerator, long long denominator) {
+  lldiv_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/mq_getattr.c ./lib/mq_getattr.c
--- ../../dietlibc/lib/mq_getattr.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/mq_getattr.c	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,6 @@
+#include <mqueue.h>
+
+int mq_getattr(mqd_t mqdes, struct mq_attr *mqstat) {
+  return mq_setattr(mqdes, NULL, mqstat);
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/mq_receive.c ./lib/mq_receive.c
--- ../../dietlibc/lib/mq_receive.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/mq_receive.c	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,6 @@
+#include <mqueue.h>
+
+ssize_t mq_receive(mqd_t mqdes, char *msg_ptr, size_t msg_len, unsigned int *msg_prio) {
+  return mq_timedreceive(mqdes, msg_ptr, msg_len, msg_prio, NULL);
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/mq_send.c ./lib/mq_send.c
--- ../../dietlibc/lib/mq_send.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/mq_send.c	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,6 @@
+#include <mqueue.h>
+
+int mq_send (mqd_t mqdes, const char *msg_ptr, size_t msg_len, unsigned int msg_prio) {
+  return mq_timedsend(mqdes, msg_ptr, msg_len, msg_prio, NULL);
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/sigisemptyset.c ./lib/sigisemptyset.c
--- ../../dietlibc/lib/sigisemptyset.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/sigisemptyset.c	2005-10-05 12:30:50.000000000 +0000
@@ -10,5 +10,5 @@
     ret|=set->sig[2];
     ret|=set->sig[3];
   }
-  return ret;
+  return ret != 0;
 }
diff -urNxCVS -xdebian ../../dietlibc/lib/sigjmp.c ./lib/sigjmp.c
--- ../../dietlibc/lib/sigjmp.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/sigjmp.c	2005-10-05 12:30:50.000000000 +0000
@@ -3,8 +3,9 @@
 
 int __sigjmp_save(sigjmp_buf env,int savemask);
 int __sigjmp_save(sigjmp_buf env,int savemask) {
+  env[0].__mask_was_saved = 0;
   if (savemask) {
-    env[0].__mask_was_saved=(sigprocmask(SIG_BLOCK,(sigset_t*)0,(sigset_t*)&env[0].__saved_mask)==0);
+    env[0].__mask_was_saved=(sigprocmask(SIG_BLOCK,(sigset_t*)0,&env[0].__saved_mask)==0);
   }
   return 0;
 }
diff -urNxCVS -xdebian ../../dietlibc/lib/signal.c ./lib/signal.c
--- ../../dietlibc/lib/signal.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/signal.c	2005-10-05 12:30:50.000000000 +0000
@@ -4,9 +4,10 @@
   struct sigaction sa,oa;
   sa.sa_handler=action;
   sigemptyset(&sa.sa_mask);
-  sigaddset(&sa.sa_mask,signum);
-  sa.sa_flags=SA_NODEFER;
-  if (sigaction(signum,&sa,&oa))
+  if (sigaddset(&sa.sa_mask,signum) != 0)
+    return SIG_ERR;
+  sa.sa_flags = SA_NODEFER; /* FIXME ??? */
+  if (sigaction(signum,&sa,&oa) != 0)
     return SIG_ERR;
   return oa.sa_handler;
 }
diff -urNxCVS -xdebian ../../dietlibc/lib/sigqueueinfo.c ./lib/sigqueueinfo.c
--- ../../dietlibc/lib/sigqueueinfo.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/sigqueueinfo.c	2005-10-05 12:30:50.000000000 +0000
@@ -1,7 +1,7 @@
 #include <signal.h>
 
-int __rt_sigqueueinfo(int pid, int sig, siginfo_t *info);
+int __rt_sigqueueinfo(pid_t pid, int sig, siginfo_t *info);
 
-int sigqueueinfo(int pid, int sig, siginfo_t *info) {
+int sigqueueinfo(pid_t pid, int sig, siginfo_t *info) {
   return __rt_sigqueueinfo(pid, sig, info);
 }
diff -urNxCVS -xdebian ../../dietlibc/lib/statfs64_cvt.c ./lib/statfs64_cvt.c
--- ../../dietlibc/lib/statfs64_cvt.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/statfs64_cvt.c	2005-10-04 17:49:09.000000000 +0000
@@ -0,0 +1,19 @@
+#include <sys/statfs.h>
+
+#if __WORDSIZE == 32
+
+void __statfs64_cvt(const struct statfs *src,struct statfs64 *dest);
+void __statfs64_cvt(const struct statfs *src,struct statfs64 *dest) {
+  dest->f_type=src->f_type;
+  dest->f_bsize=src->f_bsize;
+  dest->f_frsize=src->f_frsize;
+  dest->f_blocks=src->f_blocks;
+  dest->f_bfree=src->f_bfree;
+  dest->f_files=src->f_files;
+  dest->f_ffree=src->f_ffree;
+  dest->f_bavail=src->f_bavail;
+  dest->f_fsid=src->f_fsid;
+  dest->f_namelen=src->f_namelen;
+}
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/lib/towlower.c ./lib/towlower.c
--- ../../dietlibc/lib/towlower.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/towlower.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+wint_t towlower(wint_t c) {
+  if ( (unsigned int)(c - 'A') < 26u )
+    c += 'a' - 'A';
+  return c;
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/towupper.c ./lib/towupper.c
--- ../../dietlibc/lib/towupper.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/towupper.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+wint_t towupper(wint_t c) {
+  if ( (unsigned int)(c - 'a') < 26u )
+    c += 'A' - 'a';
+  return c;
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscat.c ./lib/wcscat.c
--- ../../dietlibc/lib/wcscat.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscat.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wchar.h>
+
+wchar_t* wcscat(wchar_t *__restrict__ dest, const wchar_t *__restrict__ src) {
+  wchar_t* orig=dest;
+  for (; *dest; ++dest) ;	/* go to end of dest */
+  for (; (*dest=*src); ++src,++dest) ;	/* then append from src */
+  return orig;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcschr.c ./lib/wcschr.c
--- ../../dietlibc/lib/wcschr.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcschr.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wchar.h>
+
+wchar_t* wcschr(const wchar_t *wcs, wchar_t wc) {
+  for (; *wcs; ++wcs)
+    if (*wcs == wc)
+      return (wchar_t*)wcs;
+  return 0;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscmp.c ./lib/wcscmp.c
--- ../../dietlibc/lib/wcscmp.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscmp.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wchar.h>
+
+int wcscmp(const wchar_t* a,const wchar_t* b) {
+  while (*a && *a == *b)
+    a++, b++;
+  return (*a - *b);
+}
+
+int wcscoll(const wchar_t *s,const wchar_t* t)       __attribute__((weak,alias("wcscmp")));
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscpy.c ./lib/wcscpy.c
--- ../../dietlibc/lib/wcscpy.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscpy.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,7 @@
+#include <wchar.h>
+
+wchar_t* wcscpy(wchar_t *__restrict__ dest, const wchar_t *__restrict__ src) {
+  wchar_t* orig=dest;
+  for (; (*dest=*src); ++src,++dest) ;
+  return orig;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcslen.c ./lib/wcslen.c
--- ../../dietlibc/lib/wcslen.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcslen.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,7 @@
+#include <wchar.h>
+
+size_t wcslen(const wchar_t* s) {
+  size_t i;
+  for (i=0; s[i]; ++i) ;
+  return i;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcsrchr.c ./lib/wcsrchr.c
--- ../../dietlibc/lib/wcsrchr.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcsrchr.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wchar.h>
+
+wchar_t* wcsrchr(const wchar_t *wcs, wchar_t wc) {
+  wchar_t* last=0;
+  for (; *wcs; ++wcs)
+    if (*wcs == wc)
+      last=(wchar_t*)wcs;
+  return last;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/write12.c ./lib/write12.c
--- ../../dietlibc/lib/write12.c	2005-10-05 13:17:23.000000000 +0000
+++ ./lib/write12.c	2005-10-05 12:30:50.000000000 +0000
@@ -8,10 +8,10 @@
 #define REGPARM(x)
 #endif
 
-int REGPARM(1) __write1 (const char* s) {
+ssize_t REGPARM(1) __write1 (const char* s) {
   return write(1, s, strlen(s));
 }
 
-int REGPARM(1) __write2 (const char* s) {
+ssize_t REGPARM(1) __write2 (const char* s) {
   return write(2, s, strlen(s));
 }
diff -urNxCVS -xdebian ../../dietlibc/libcompat/clearenv.c ./libcompat/clearenv.c
--- ../../dietlibc/libcompat/clearenv.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcompat/clearenv.c	2005-08-29 13:12:10.000000000 +0000
@@ -0,0 +1,7 @@
+#define _GNU_SOURCE
+#include <stdlib.h>
+
+int clearenv(void) {
+  environ=0;
+  return 0;
+}
diff -urNxCVS -xdebian ../../dietlibc/libcompat/strnlen.c ./libcompat/strnlen.c
--- ../../dietlibc/libcompat/strnlen.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcompat/strnlen.c	2005-08-29 13:07:15.000000000 +0000
@@ -0,0 +1,9 @@
+#define _GNU_SOURCE
+#include <string.h>
+
+size_t strnlen(const char *s,size_t maxlen) {
+  const char* max=s+maxlen;
+  const char* orig=s;
+  while (s<max && *s) ++s;
+  return s-orig;
+}
diff -urNxCVS -xdebian ../../dietlibc/libcompat/toascii.c ./libcompat/toascii.c
--- ../../dietlibc/libcompat/toascii.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcompat/toascii.c	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,8 @@
+#include <ctype.h>
+#include "dietwarning.h"
+
+int toascii(int c) {
+  return (c&0x7f);
+}
+
+link_warning("toascii","using this function converts accented characters to random unrelated characters and will make people very unhappy!")
diff -urNxCVS -xdebian ../../dietlibc/libcompat/utimes.c ./libcompat/utimes.c
--- ../../dietlibc/libcompat/utimes.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcompat/utimes.c	2005-10-05 12:30:50.000000000 +0000
@@ -7,7 +7,7 @@
 #include <utime.h>
 #include <sys/types.h>
 
-int utimes(char *filename, struct timeval *tvp) {
+int utimes(const char *filename, struct timeval *tvp) {
   struct utimbuf b;
   if (!tvp) {
     return utime(filename,NULL);
diff -urNxCVS -xdebian ../../dietlibc/libcruft/___div.c ./libcruft/___div.c
--- ../../dietlibc/libcruft/___div.c	2005-10-05 13:17:50.000000000 +0000
+++ ./libcruft/___div.c	1970-01-01 00:00:00.000000000 +0000
@@ -1,11 +0,0 @@
-#include "dietwarning.h"
-#include <stdlib.h>
-
-div_t div(int numer, int denom) {
-  div_t temp;
-  temp.quot=numer/denom;
-  temp.rem=numer%denom;
-  return temp;
-}
-
-link_warning("div","warning: your code uses div(), which is completely superfluous!");
diff -urNxCVS -xdebian ../../dietlibc/libcruft/dngettext.c ./libcruft/dngettext.c
--- ../../dietlibc/libcruft/dngettext.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcruft/dngettext.c	2005-09-26 10:52:22.000000000 +0000
@@ -0,0 +1,7 @@
+#include <libintl.h>
+
+#undef dngettext
+char* dngettext (const char* domainname,const char* msgid, const char* msgid_plural, unsigned long int n) {
+  (void)domainname;
+  return (char*)(n==1?msgid:msgid_plural);
+}
diff -urNxCVS -xdebian ../../dietlibc/libcruft/gethostbyname2_r.c ./libcruft/gethostbyname2_r.c
--- ../../dietlibc/libcruft/gethostbyname2_r.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcruft/gethostbyname2_r.c	2005-07-10 18:32:53.000000000 +0000
@@ -29,11 +29,13 @@
   if (buflen<L) { *h_errnop=ERANGE; return 1; }
 #ifdef WANT_ETC_HOSTS
   {
+    int foundsomething=0;
     struct hostent* r;
     while ((r=gethostent_r(buf,buflen))) {
-      if (r->h_addrtype==AF) {
-	int i;
-	if (!strcasecmp(r->h_name,name)) {	/* found it! */
+      int i;
+      if (!strcasecmp(r->h_name,name)) {
+	foundsomething=1;
+        if (r->h_addrtype==AF) {	/* found it! */
 found:
 	  memmove(result,r,sizeof(struct hostent));
 	  *RESULT=result;
@@ -41,14 +43,22 @@
 	  endhostent();
 	  return 0;
 	}
-	for (i=0; i<16; ++i) {
-	  if (r->h_aliases[i]) {
-	    if (!strcasecmp(r->h_aliases[i],name)) goto found;
-	  } else break;
-	}
+      }
+      for (i=0; i<16; ++i) {
+	if (r->h_aliases[i]) {
+	  if (!strcasecmp(r->h_aliases[i],name)) {
+	    foundsomething=1;
+	    if (r->h_addrtype==AF)
+	      goto found;
+	  }
+	} else break;
       }
     }
     endhostent();
+    if (foundsomething) {
+      *h_errnop=NO_DATA;
+      return -1;
+    }
   }
 #endif
   strcpy(buf,name);
diff -urNxCVS -xdebian ../../dietlibc/libcruft/getopt_long.c ./libcruft/getopt_long.c
--- ../../dietlibc/libcruft/getopt_long.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcruft/getopt_long.c	2005-07-10 18:32:53.000000000 +0000
@@ -19,7 +19,7 @@
 		const struct option *longopts, int *longindex) {
   static int lastidx,lastofs;
   char *tmp;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/libcruft/getopt_long_only.c ./libcruft/getopt_long_only.c
--- ../../dietlibc/libcruft/getopt_long_only.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcruft/getopt_long_only.c	2005-07-10 18:32:53.000000000 +0000
@@ -19,7 +19,7 @@
 		const struct option *longopts, int *longindex) {
   static int lastidx,lastofs;
   char *tmp,*arg;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/libcruft/ngettext.c ./libcruft/ngettext.c
--- ../../dietlibc/libcruft/ngettext.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcruft/ngettext.c	2005-09-26 10:52:22.000000000 +0000
@@ -0,0 +1,6 @@
+#include <libintl.h>
+
+#undef ngettext
+char* ngettext (const char* msgid, const char* msgid_plural, unsigned long int n) {
+  return (char*)(n==1?msgid:msgid_plural);
+}
diff -urNxCVS -xdebian ../../dietlibc/libcruft/res_query.c ./libcruft/res_query.c
--- ../../dietlibc/libcruft/res_query.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcruft/res_query.c	2005-07-10 18:32:53.000000000 +0000
@@ -116,7 +116,7 @@
       }
       /* if it doesn't work, we don't care */
 #endif
-      for (j=120; j>0; --j) {
+      for (j=20; j>0; --j) {
 	gettimeofday(&now,0);
 	if (now.tv_sec-last.tv_sec>10) {
 #ifdef WANT_IPV6_DNS
@@ -133,8 +133,10 @@
 	  if (duh[0].fd!=-1) {
 #endif
 	  duh[0].fd=tmpfd;
-	  if (sendto(tmpfd,packet,size,0,s,sizeof(struct sockaddr_in6))==0)
+	  if (sendto(tmpfd,packet,size,0,s,sizeof(struct sockaddr_in6))!=-1)
 	    gettimeofday(&last,0);
+	  else
+	    goto nxdomain;
 #ifdef WANT_PLUGPLAY_DNS
 	  }
 #endif
@@ -147,7 +149,7 @@
 	}
 	if (++i >= _res.nscount) i=0;
 #ifdef WANT_PLUGPLAY_DNS
-	if (now.tv_sec>first.tv_sec) goto nxdomain;
+	if (now.tv_sec>first.tv_sec && duh[0].fd==-1) goto nxdomain;
 	if (duh[0].fd==-1 && duh[1].fd==-1) goto nxdomain;
 	duh[0].revents=0;
 	if (poll(duh[0].fd==-1?duh+1:duh,duh[0].fd==-1?1:2,1000) > 0) {
diff -urNxCVS -xdebian ../../dietlibc/libcrypt/crypt.c ./libcrypt/crypt.c
--- ../../dietlibc/libcrypt/crypt.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libcrypt/crypt.c	2005-07-13 13:22:29.000000000 +0000
@@ -185,7 +185,8 @@
 };
 
 /* The current block, divided into 2 halves. */
-static char L[32], R[32];
+static char L[64];
+#define R (L+32)
 static char tempL[32];
 static char f[32];
 
diff -urNxCVS -xdebian ../../dietlibc/libdl/_dl_alloc.c ./libdl/_dl_alloc.c
--- ../../dietlibc/libdl/_dl_alloc.c	2005-05-25 08:40:01.000000000 +0000
+++ ./libdl/_dl_alloc.c	2005-10-12 08:53:33.000000000 +0000
@@ -74,7 +74,7 @@
       struct _dl_handle*tmp;
       for (tmp=_dl_root_handle;tmp;tmp=tmp->next) {
 	if (!tmp->name) continue;
-	if (!_dl_lib_strcmp(tmp->name,name)) return tmp;
+	if (!_dl_lib_strcmp((const unsigned char*)tmp->name,(const unsigned char*)name)) return tmp;
       }
     }
   }
diff -urNxCVS -xdebian ../../dietlibc/libdl/_dl_main.c ./libdl/_dl_main.c
--- ../../dietlibc/libdl/_dl_main.c	2005-05-25 08:40:01.000000000 +0000
+++ ./libdl/_dl_main.c	2005-10-12 08:53:33.000000000 +0000
@@ -40,9 +40,9 @@
 __attribute__((noreturn,visibility("hidden")))
 void _dl_sys_exit(int val);
 __attribute__((visibility("hidden")))
-int _dl_sys_read(int fd,char*buf,unsigned long len);
+int _dl_sys_read(int fd,void*buf,unsigned long len);
 __attribute__((visibility("hidden")))
-int _dl_sys_write(int fd,char*buf,unsigned long len);
+int _dl_sys_write(int fd,void*buf,unsigned long len);
 __attribute__((visibility("hidden")))
 int _dl_sys_open(const char*filename,int flags,int mode);
 __attribute__((visibility("hidden")))
@@ -632,7 +632,7 @@
 static char*getenv(const char*env) {
   unsigned int i,len=_dl_lib_strlen(env);
   for (i=0;_dl_environ[i];++i) {
-    if ((_dl_lib_memcmp(_dl_environ[i],env,len)==0) && (_dl_environ[i][len]=='='))
+    if ((_dl_lib_memcmp((const unsigned char*)_dl_environ[i],(const unsigned char*)env,len)==0) && (_dl_environ[i][len]=='='))
       return _dl_environ[i]+len+1;
   }
   return 0;
@@ -669,8 +669,12 @@
 }
 
 #ifdef WANT_LD_SO_GDB_SUPPORT
+/* gdb debug init stuff */
+static struct r_debug _r_debug;
+
 /* gdb debug break point */
-static volatile void _dl_debug_state(void) {
+__attribute__((used,noinline))
+static void _dl_debug_state(void) {
 #ifdef DEBUG
   struct _dl_handle*tmp;
   pf(__FUNCTION__); pf(": r_state "); ph(_r_debug.r_state); pf("\n");
@@ -682,9 +686,6 @@
   }
 #endif
 }
-
-/* gdb debug init stuff */
-static struct r_debug _r_debug;
 #endif
 
 /* now reuse some unchanged sources */
@@ -771,9 +772,11 @@
   Elf_Phdr*eph;
 
   int ld_nr=0;
-  Elf_Phdr*ld[4]={0,0,0,0};
+  Elf_Phdr*ld[4];
   Elf_Phdr*dyn=0;
 
+  _dl_lib_memset(ld,0,sizeof(ld));
+
   if (fd==-1) return 0;
 
   if (_dl_sys_fstat(fd,&st)<0) {
diff -urNxCVS -xdebian ../../dietlibc/libdl/_dl_queue.c ./libdl/_dl_queue.c
--- ../../dietlibc/libdl/_dl_queue.c	2003-09-13 08:47:07.000000000 +0000
+++ ./libdl/_dl_queue.c	2005-10-12 08:53:33.000000000 +0000
@@ -33,8 +33,8 @@
 #endif
 int _dl_open_dep() {
   while (_dl_queue_start!=_dl_queue_stop) {
-    register int tmp=_dl_queue_start;
-    (++_dl_queue_start>=MAX_QUEUE)?_dl_queue_start=0:0;
+    int tmp=_dl_queue_start;
+    if (++_dl_queue_start>=MAX_QUEUE) _dl_queue_start=0;
     if (!_dlopen(_dl_queue[tmp].name,_dl_queue[tmp].flags)) return 1;
   }
   return 0;
diff -urNxCVS -xdebian ../../dietlibc/libdl/_dl_search.c ./libdl/_dl_search.c
--- ../../dietlibc/libdl/_dl_search.c	2005-05-25 08:40:01.000000000 +0000
+++ ./libdl/_dl_search.c	2005-10-12 08:53:33.000000000 +0000
@@ -106,7 +106,7 @@
 
   /* default path search */
   {
-    const char def_path[]="/usr/lib:/lib";
+    const char*def_path="/usr/lib:/lib";
     return _dl_search_path(buf,len,def_path,_dl_lib_strlen(def_path),filename);
   }
 }
diff -urNxCVS -xdebian ../../dietlibc/libdl/dlsym.c ./libdl/dlsym.c
--- ../../dietlibc/libdl/dlsym.c	2005-05-25 08:40:01.000000000 +0000
+++ ./libdl/dlsym.c	2005-10-12 08:53:33.000000000 +0000
@@ -5,7 +5,7 @@
 #ifdef __DIET_LD_SO__
 static
 #endif
-void *_dlsym(void* handle,const char* symbol) {
+void *_dlsym(void* handle,const unsigned char* symbol) {
   unsigned long*sym=0;
   if (handle) {
     struct _dl_handle*dh=(struct _dl_handle*)handle;
@@ -13,7 +13,7 @@
     unsigned int bhash=hash%HASH_BUCKET_LEN(dh->hash_tab);
     unsigned int*chain=HASH_CHAIN(dh->hash_tab);
     unsigned int ind;
-    char *name=dh->dyn_str_tab;
+    unsigned char*name=(unsigned char*)dh->dyn_str_tab;
 
 #ifdef DEBUG
 //    pf(__FUNCTION__); pf(": bucket("); ph(bhash); pf(",\""); pf(symbol); pf("\")\n");
@@ -31,7 +31,7 @@
 #endif
       if (_dl_lib_strcmp(name+ptr,symbol)==0 && dh->dyn_sym_tab[ind].st_value!=0) {
 	if (dh->dyn_sym_tab[ind].st_shndx!=SHN_UNDEF) {
-	  sym=(long*)(dh->mem_base+dh->dyn_sym_tab[ind].st_value);
+	  sym=(unsigned long*)(dh->mem_base+dh->dyn_sym_tab[ind].st_value);
 	  break;	/* ok found ... */
 	}
       }
@@ -47,7 +47,7 @@
 #ifdef __DIET_LD_SO__
 static
 #endif
-void*_dl_sym_search_str(struct _dl_handle*dh_begin,const char*name) {
+void*_dl_sym_search_str(struct _dl_handle*dh_begin,const unsigned char*name) {
   void *sym=0;
   struct _dl_handle*tmp;
 #ifdef DEBUG
@@ -71,7 +71,7 @@
 #endif
 void*_dl_sym(struct _dl_handle*dh,int symbol) {
   char *name=dh->dyn_str_tab+dh->dyn_sym_tab[symbol].st_name;
-  void*sym=_dl_sym_search_str(_dl_root_handle,name);
+  void*sym=_dl_sym_search_str(_dl_root_handle,(const unsigned char*)name);
 #ifdef DEBUG
   pf(__FUNCTION__); pf(": "); ph(symbol); pf(" -> "); ph((long)sym); pf("\n");
 #endif
@@ -83,7 +83,7 @@
 #endif
 void*_dl_sym_next(struct _dl_handle*dh,int symbol) {
   char *name=dh->dyn_str_tab+dh->dyn_sym_tab[symbol].st_name;
-  void*sym=_dl_sym_search_str(dh->next,name);
+  void*sym=_dl_sym_search_str(dh->next,(const unsigned char*)name);
 #ifdef DEBUG
   pf(__FUNCTION__); pf(": "); ph(symbol); pf(" -> "); ph((long)sym); pf("\n");
 #endif
@@ -93,8 +93,8 @@
 void* dlsym(void* handle,const char* symbol) {
   void*h;
   if (handle==RTLD_DEFAULT || !handle /* RTLD_DEFAULT is NULL on glibc */ )
-    h=_dl_sym_search_str(0,symbol);
-  else h=_dlsym(handle,symbol);
+    h=_dl_sym_search_str(0,(const unsigned char*)symbol);
+  else h=_dlsym(handle,(const unsigned char*)symbol);
   if (h==0) {
     _dl_error_location="dlsym";
     _dl_error_data=symbol;
diff -urNxCVS -xdebian ../../dietlibc/libpthread/pthread_sys_read.c ./libpthread/pthread_sys_read.c
--- ../../dietlibc/libpthread/pthread_sys_read.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libpthread/pthread_sys_read.c	2005-10-05 12:30:50.000000000 +0000
@@ -3,7 +3,7 @@
 #include <pthread.h>
 #include "thread_internal.h"
 
-int read(int fd, void *buf, size_t count) {
+ssize_t read(int fd, void *buf, size_t count) {
   __TEST_CANCEL();
   return __libc_read(fd,buf,count);
 }
diff -urNxCVS -xdebian ../../dietlibc/libpthread/pthread_sys_write.c ./libpthread/pthread_sys_write.c
--- ../../dietlibc/libpthread/pthread_sys_write.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libpthread/pthread_sys_write.c	2005-10-05 12:30:50.000000000 +0000
@@ -3,7 +3,7 @@
 #include <pthread.h>
 #include "thread_internal.h"
 
-int write(int fd, const void *buf, size_t count) {
+ssize_t write(int fd, const void *buf, size_t count) {
   __TEST_CANCEL();
   return __libc_write(fd,buf,count);
 }
diff -urNxCVS -xdebian ../../dietlibc/libpthread/thread_internal.h ./libpthread/thread_internal.h
--- ../../dietlibc/libpthread/thread_internal.h	2005-10-05 13:17:23.000000000 +0000
+++ ./libpthread/thread_internal.h	2005-10-05 12:30:50.000000000 +0000
@@ -30,7 +30,7 @@
   struct _pthread_descr_struct**prev;
 
   /* thread/process data */
-  int pid;			/* Process id */
+  pid_t pid;			/* Process id */
 
   /* "stack handling" / find thread */
   void*stack_begin;		/* begin of stack / lowest address (to free) */
@@ -183,11 +183,11 @@
 int __libc_nanosleep(const struct timespec *req,struct timespec*rem);
 int __libc_open(const char*pathname,int flags,mode_t mode);
 int __libc_pause(void);
-int __libc_read(int fd,void*buf,size_t count);
+ssize_t __libc_read(int fd,void*buf,size_t count);
 int __libc_sigsuspend(const sigset_t*mask);
 int __libc_tcdrain(int fd);
 pid_t __libc_waitpid(pid_t pid,int*status,int options);
-int __libc_write(int fd,const void*buf,size_t count);
+ssize_t __libc_write(int fd,const void*buf,size_t count);
 
 int __libc_execve(const char*filename,char*const argv[],char*const envp[]);
 int __libc_sigaction(int signum,const struct sigaction*act,struct sigaction*oldact);
diff -urNxCVS -xdebian ../../dietlibc/libregex/rx.c ./libregex/rx.c
--- ../../dietlibc/libregex/rx.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libregex/rx.c	2005-07-25 14:53:15.000000000 +0000
@@ -414,7 +414,9 @@
       return s;
     }
 //    printf("assigned branch %d at %p\n",r->num-1,r->b);
-    s=tmp; if (*s=='|') ++s;
+    s=tmp;
+    if (*s==')') return s;
+    if (*s=='|') ++s;
   }
   return tmp;
 }
diff -urNxCVS -xdebian ../../dietlibc/librpc/svc_auth_unix.c ./librpc/svc_auth_unix.c
--- ../../dietlibc/librpc/svc_auth_unix.c	2005-10-05 13:17:23.000000000 +0000
+++ ./librpc/svc_auth_unix.c	2005-08-12 17:39:07.000000000 +0000
@@ -51,7 +51,9 @@
 /*
  * Unix longhand authenticator
  */
-static enum auth_stat _svcauth_unix(rqst, msg)
+enum auth_stat _svcauth_unix(struct svc_req* rqst, struct rpc_msg* msg);
+
+enum auth_stat _svcauth_unix(rqst, msg)
 register struct svc_req *rqst;
 register struct rpc_msg *msg;
 {
@@ -128,7 +130,9 @@
  * Shorthand unix authenticator
  * Looks up longhand in a cache.
  */
- /*ARGSUSED*/ static enum auth_stat _svcauth_short(rqst, msg)
+enum auth_stat _svcauth_short(struct svc_req* rqst, struct rpc_msg* msg);
+
+enum auth_stat _svcauth_short(rqst, msg)
 struct svc_req *rqst;
 struct rpc_msg *msg;
 {
diff -urNxCVS -xdebian ../../dietlibc/libstdio/fflush.c ./libstdio/fflush.c
--- ../../dietlibc/libstdio/fflush.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/fflush.c	2005-10-05 12:30:50.000000000 +0000
@@ -33,7 +33,7 @@
     }
     stream->bs=stream->bm=0;
   } else {
-    if (stream->bm && write(stream->fd,stream->buf,stream->bm)!=(int)stream->bm) {
+    if (stream->bm && write(stream->fd,stream->buf,stream->bm)!=(ssize_t)stream->bm) {
       stream->flags|=ERRORINDICATOR;
       return -1;
     }
diff -urNxCVS -xdebian ../../dietlibc/libstdio/fgetc_unlocked.c ./libstdio/fgetc_unlocked.c
--- ../../dietlibc/libstdio/fgetc_unlocked.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/fgetc_unlocked.c	2005-10-05 12:30:50.000000000 +0000
@@ -12,7 +12,7 @@
     return EOF;
   if (__fflush4(stream,BUFINPUT)) return EOF;
   if (stream->bm>=stream->bs) {
-    int len=__libc_read(stream->fd,stream->buf,stream->buflen);
+    ssize_t len=__libc_read(stream->fd,stream->buf,stream->buflen);
     if (len==0) {
       stream->flags|=EOFINDICATOR;
       return EOF;
diff -urNxCVS -xdebian ../../dietlibc/libstdio/fread.c ./libstdio/fread.c
--- ../../dietlibc/libstdio/fread.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/fread.c	2005-10-05 12:30:50.000000000 +0000
@@ -23,14 +23,14 @@
 #ifdef WANT_FREAD_OPTIMIZATION
   if ( !(stream->flags&FDPIPE) && (j>stream->buflen)) {
     size_t tmp=j-i;
-    int res;
+    ssize_t res;
     size_t inbuf=stream->bs-stream->bm;
     memcpy(ptr+i,stream->buf+stream->bm,inbuf);
     stream->bm=stream->bs=0;
     tmp-=inbuf;
     i+=inbuf;
     if (fflush_unlocked(stream)) return 0;
-    while ((res=__libc_read(stream->fd,ptr+i,tmp))<(int)tmp) {
+    while ((res=__libc_read(stream->fd,ptr+i,tmp))<(ssize_t)tmp) {
       if (res==-1) {
 	stream->flags|=ERRORINDICATOR;
 	goto exit;
diff -urNxCVS -xdebian ../../dietlibc/libstdio/fwrite.c ./libstdio/fwrite.c
--- ../../dietlibc/libstdio/fwrite.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/fwrite.c	2005-10-05 12:30:50.000000000 +0000
@@ -4,7 +4,7 @@
 #include <errno.h>
 
 size_t fwrite_unlocked(const void *ptr, size_t size, size_t nmemb, FILE *stream) {
-  int res;
+  ssize_t res;
   unsigned long len=size*nmemb;
   long i;
   if (!(stream->flags&CANWRITE)) {
diff -urNxCVS -xdebian ../../dietlibc/libstdio/puts.c ./libstdio/puts.c
--- ../../dietlibc/libstdio/puts.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/puts.c	2005-10-05 12:30:50.000000000 +0000
@@ -5,7 +5,7 @@
 
 int __stdio_outs(const char *s,size_t len) __attribute__((weak));
 int __stdio_outs(const char *s,size_t len) {
-  return (write(1,s,len)==(int)len)?1:0;
+  return (write(1,s,len)==(ssize_t)len)?1:0;
 }
 
 int puts(const char *s) {
diff -urNxCVS -xdebian ../../dietlibc/libstdio/vprintf.c ./libstdio/vprintf.c
--- ../../dietlibc/libstdio/vprintf.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libstdio/vprintf.c	2005-10-05 12:30:50.000000000 +0000
@@ -4,7 +4,7 @@
 
 int __stdio_outs(const char *s,size_t len) __attribute__((weak));
 int __stdio_outs(const char *s,size_t len) {
-  return (write(1,s,len)==(int)len)?1:0;
+  return (write(1,s,len)==(ssize_t)len)?1:0;
 }
 
 int vprintf(const char *format, va_list ap)
diff -urNxCVS -xdebian ../../dietlibc/libugly/getaddrinfo.c ./libugly/getaddrinfo.c
--- ../../dietlibc/libugly/getaddrinfo.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/getaddrinfo.c	2005-10-05 12:30:50.000000000 +0000
@@ -33,6 +33,7 @@
       h.h_addr_list=(char**)buf+16;
       if (node) {
 	if ((interface=strchr(node,'%'))) ++interface;
+	if (family==PF_INET6 && inet_pton(AF_INET,node,buf)) continue;
 	if (inet_pton(family,node,buf)>0) {
 	  h.h_name=(char*)node;
 	  h.h_addr_list[0]=buf;
@@ -82,8 +83,11 @@
 	}
 	foo->ip.ip6.sin6_family=foo->ai.ai_family=family;
 #ifdef WANT_PLUGPLAY_DNS
-	if (family==AF_INET6)
-	  foo->ip.ip6.sin6_scope_id=__dns_plugplay_interface;
+	if (family==AF_INET6 && node) {
+	  int l=strlen(node);
+	  if (!strcmp(node-6,".local"))
+	    foo->ip.ip6.sin6_scope_id=__dns_plugplay_interface;
+	}
 #endif
 	if (h.h_name) {
 	  foo->ai.ai_canonname=foo->name;
@@ -97,7 +101,7 @@
 	    struct servent* se;
 	    if ((se=getservbyname(service,"tcp"))) {	/* found a service. */
 	      port=se->s_port;
-  blah1:
+blah1:
 	      if (family==PF_INET6)
 		foo->ip.ip6.sin6_port=port;
 	      else
diff -urNxCVS -xdebian ../../dietlibc/libugly/gethostent_nor.c ./libugly/gethostent_nor.c
--- ../../dietlibc/libugly/gethostent_nor.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libugly/gethostent_nor.c	2005-07-29 12:57:21.000000000 +0000
@@ -0,0 +1,7 @@
+#include <netdb.h>
+
+static char hostentbuf[1024];
+
+struct hostent* gethostent() {
+  return gethostent_r(hostentbuf,sizeof(hostentbuf));
+}
diff -urNxCVS -xdebian ../../dietlibc/libugly/getnameinfo.c ./libugly/getnameinfo.c
--- ../../dietlibc/libugly/getnameinfo.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/getnameinfo.c	2005-10-05 12:30:50.000000000 +0000
@@ -3,8 +3,7 @@
 #include <netdb.h>
 #include <arpa/inet.h>
 #include <string.h>
-
-extern int __ltostr(char *s, int size, unsigned long i, int base, char UpCase);
+#include <stdlib.h>
 
 int getnameinfo(const struct sockaddr *sa, socklen_t salen, char *host,
 		size_t hostlen, char *serv, size_t servlen, int flags) {
diff -urNxCVS -xdebian ../../dietlibc/libugly/logging.c ./libugly/logging.c
--- ../../dietlibc/libugly/logging.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/logging.c	2005-10-05 12:30:50.000000000 +0000
@@ -20,7 +20,7 @@
 
 /* declare internal functions */
 int __libc_open(const char*name,int flags, ...);
-int __libc_write(int fd,void*buf,int len);
+ssize_t __libc_write(int fd,void*buf,size_t len);
 int __libc_fcntl(int fd,int op,...);
 int __libc_close(int fd);
 
@@ -140,13 +140,13 @@
   strftime(time_buf, 20, "%h %e %T", localtime_r (&now, &now_tm));
 
   if (LogStat & LOG_PID)
-    headerlen = snprintf(buffer, 130, "<%d>%s %s[%d]: ", priority, time_buf, LogTag, pid);
+    headerlen = snprintf(buffer, 130, "<%d>%s %s[%ld]: ", priority, time_buf, LogTag, (long) pid);
   else
     headerlen = snprintf(buffer, 130, "<%d>%s %s: ", priority, time_buf, LogTag);
 
   if (!LogTag[0]) {
     if ((LogStat & LOG_PID) != LOG_PID)
-      headerlen = snprintf(buffer, 130, "<%d>%s (unknown)[%d]: ", priority, time_buf, pid);
+      headerlen = snprintf(buffer, 130, "<%d>%s (unknown)[%ld]: ", priority, time_buf, (long) pid);
     strcat(buffer+headerlen, "syslog without openlog w/ ident, please check code!");
     buflen = 41;
   }
diff -urNxCVS -xdebian ../../dietlibc/libugly/openpty.c ./libugly/openpty.c
--- ../../dietlibc/libugly/openpty.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/openpty.c	2005-10-05 12:30:50.000000000 +0000
@@ -5,8 +5,7 @@
 #include <sys/ioctl.h>
 #include <errno.h>
 #include <string.h>
-
-extern int __ltostr(char *s, int size, unsigned long i, int base, char UpCase);
+#include <stdlib.h>
 
 int openpty(int *amaster, int *aslave, char *name, struct termios
 	    *termp, struct winsize *winp) {
diff -urNxCVS -xdebian ../../dietlibc/libugly/pclose.c ./libugly/pclose.c
--- ../../dietlibc/libugly/pclose.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/pclose.c	2005-07-10 18:32:53.000000000 +0000
@@ -4,8 +4,9 @@
 
 int pclose(FILE *f) {
   int status;
+  pid_t pid=f->popen_kludge;
   fclose(f);
-  if (waitpid(f->popen_kludge,&status,0)>=0)
+  if (waitpid(pid,&status,0)>=0)
     return status;
   return -1;
 }
diff -urNxCVS -xdebian ../../dietlibc/libugly/strftime.c ./libugly/strftime.c
--- ../../dietlibc/libugly/strftime.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/strftime.c	2005-07-27 12:57:34.000000000 +0000
@@ -21,20 +21,19 @@
     "AM", "PM"
 };
 
-static int  i2a ( char* dest,unsigned int x ) 
+static void i2a ( char* dest,unsigned long x ) 
 {
     int  div = 10;
     *dest++ = x/div + '0';
     *dest++ = x%div + '0';
     *dest++ = '\0';
-    return 2;
 }
 
 size_t  strftime ( char* dst, size_t max, const char* format, const struct tm* tm ) 
 {
     char*         p = dst;
     const char*   src;
-    unsigned int  no;
+    unsigned long no;
     char          buf [5];
   
   
@@ -80,6 +79,19 @@
             case 'w': no  = tm->tm_wday;              		 goto _no;
 	    case 'U': no  = (tm->tm_yday - tm->tm_wday + 7) / 7; goto _no;
 	    case 'W': no  = (tm->tm_yday - (tm->tm_wday - 1 + 7) % 7 + 7) / 7; goto _no;
+	    case 's': {
+			time_t t = mktime((struct tm*)tm);
+			char buf[101];
+			char* c;
+			buf[100]=0;
+			for (c=buf+99; c>buf; --c) {
+			  *c=(t%10)+'0';
+			  t/=10;
+			  if (!t) break;
+			}
+			src=c;
+			goto _str;
+		      }
 	    case 'Z':
 #ifdef WANT_TZFILE_PARSER
 		      tzset(); src = tzname[0];
diff -urNxCVS -xdebian ../../dietlibc/libugly/strptime.c ./libugly/strptime.c
--- ../../dietlibc/libugly/strptime.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/strptime.c	2005-08-12 17:39:07.000000000 +0000
@@ -14,7 +14,7 @@
     if (!isdigit(**s)) {
       if (j==0) return -1; else break;
     }
-    i=**s-'0';
+    i=i*10+**s-'0';
     ++*s;
   }
   return i;
@@ -79,8 +79,8 @@
 	break;
       case 'm':
 	i=getint(&s,2);
-	if (i==-1 || i>12) return (char*)s;
-	tm->tm_mon=i;
+	if (i<=0 || i>12) return (char*)s;
+	tm->tm_mon=i-1;
 	break;
       case 'M':
 	i=getint(&s,2);
@@ -123,13 +123,13 @@
 	break;
       case 'y':
 	i=getint(&s,2);
-	if (i==-1) return (char*)s;
-	tm->tm_year=(tm->tm_year/100)*100+i;
+	if (i<0) return (char*)s;
+	tm->tm_year=(i<69)?i+100:i;
 	break;
       case 'Y':
 	i=getint(&s,5);
 	if (i==-1) return (char*)s;
-	tm->tm_year=i;
+	tm->tm_year=i-1900;
 	break;
       }
       ++format;
diff -urNxCVS -xdebian ../../dietlibc/libugly/tzfile.c ./libugly/tzfile.c
--- ../../dietlibc/libugly/tzfile.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/tzfile.c	2005-09-08 12:08:16.000000000 +0000
@@ -108,7 +108,7 @@
   } else {	/* reverse map, for mktime */
     time_t nexttz=0,lastval=0;
 //    printf("tzh_timecnt: %d\n",tzh_timecnt);
-    for (i=0; i<tzh_timecnt-1; ++i) {
+    for (i=1; i<tzh_timecnt-1; ++i) {
       unsigned char* x, j;
       long k=0;
 //      printf("ab %ld: ",__myntohl(tmp+i*4));
diff -urNxCVS -xdebian ../../dietlibc/libugly/utent.c ./libugly/utent.c
--- ../../dietlibc/libugly/utent.c	2005-10-05 13:17:23.000000000 +0000
+++ ./libugly/utent.c	2005-10-05 12:30:50.000000000 +0000
@@ -47,7 +47,7 @@
 
 struct utmp *getutent(void) {
   static struct utmp getutent_tmp;
-  int ret;
+  ssize_t ret;
 
   if (fd<0) {
     setutent();
@@ -96,7 +96,7 @@
   else {
     lseek(fd, 0, SEEK_END);
     if (lock_record(F_WRLCK)) return;
-    write(fd, ut, (off_t)sizeof(struct utmp));
+    write(fd, ut, sizeof(struct utmp));
   }
   unlock_record();
 }
diff -urNxCVS -xdebian ../../dietlibc/ppc/syscalls.h ./ppc/syscalls.h
--- ../../dietlibc/ppc/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./ppc/syscalls.h	2005-10-05 12:30:50.000000000 +0000
@@ -270,6 +270,13 @@
 #define __NR_add_key		269
 #define __NR_request_key	270
 #define __NR_keyctl		271
+#define __NR_waitid		272
+#define __NR_ioprio_set		273
+#define __NR_ioprio_get		274
+#define __NR_inotify_init	275
+#define __NR_inotify_add_watch	276
+#define __NR_inotify_rm_watch	277
+
 
 #define syscall_weak(name,wsym,sym) \
 .text; \
diff -urNxCVS -xdebian ../../dietlibc/ppc64/__longjmp.S ./ppc64/__longjmp.S
--- ../../dietlibc/ppc64/__longjmp.S	2005-10-05 13:17:23.000000000 +0000
+++ ./ppc64/__longjmp.S	2005-10-05 12:30:50.000000000 +0000
@@ -11,44 +11,44 @@
 	ld  2,(JB_GPR2*8)(3)
 	ld  0,(JB_LR*8)(3)
 	ld  14,((JB_GPRS+0)*8)(3)
-	lfd 14,((JB_FPRS+0*2)*8)(3)
+	lfd 14,((JB_FPRS+0)*8)(3)
 	ld  15,((JB_GPRS+1)*8)(3)
-	lfd 15,((JB_FPRS+1*2)*8)(3)
+	lfd 15,((JB_FPRS+1)*8)(3)
 	ld  16,((JB_GPRS+2)*8)(3)
-	lfd 16,((JB_FPRS+2*2)*8)(3)
+	lfd 16,((JB_FPRS+2)*8)(3)
 	ld  17,((JB_GPRS+3)*8)(3)
-	lfd 17,((JB_FPRS+3*2)*8)(3)
+	lfd 17,((JB_FPRS+3)*8)(3)
 	ld  18,((JB_GPRS+4)*8)(3)
-	lfd 18,((JB_FPRS+4*2)*8)(3)
+	lfd 18,((JB_FPRS+4)*8)(3)
 	ld  19,((JB_GPRS+5)*8)(3)
-	lfd 19,((JB_FPRS+5*2)*8)(3)
+	lfd 19,((JB_FPRS+5)*8)(3)
 	ld  20,((JB_GPRS+6)*8)(3)
-	lfd 20,((JB_FPRS+6*2)*8)(3)
+	lfd 20,((JB_FPRS+6)*8)(3)
 	mtlr 0
 	ld  21,((JB_GPRS+7)*8)(3)
-	lfd 21,((JB_FPRS+7*2)*8)(3)
+	lfd 21,((JB_FPRS+7)*8)(3)
 	ld  22,((JB_GPRS+8)*8)(3)
-	lfd 22,((JB_FPRS+8*2)*8)(3)
+	lfd 22,((JB_FPRS+8)*8)(3)
 	ld  0,(JB_CR*8)(3)
 	ld  23,((JB_GPRS+9)*8)(3)
-	lfd 23,((JB_FPRS+9*2)*8)(3)
+	lfd 23,((JB_FPRS+9)*8)(3)
 	ld  24,((JB_GPRS+10)*8)(3)
-	lfd 24,((JB_FPRS+10*2)*8)(3)
+	lfd 24,((JB_FPRS+10)*8)(3)
 	ld  25,((JB_GPRS+11)*8)(3)
-	lfd 25,((JB_FPRS+11*2)*8)(3)
+	lfd 25,((JB_FPRS+11)*8)(3)
 	mtcrf 0xFF,0
 	ld  26,((JB_GPRS+12)*8)(3)
-	lfd 26,((JB_FPRS+12*2)*8)(3)
+	lfd 26,((JB_FPRS+12)*8)(3)
 	ld  27,((JB_GPRS+13)*8)(3)
-	lfd 27,((JB_FPRS+13*2)*8)(3)
+	lfd 27,((JB_FPRS+13)*8)(3)
 	ld  28,((JB_GPRS+14)*8)(3)
-	lfd 28,((JB_FPRS+14*2)*8)(3)
+	lfd 28,((JB_FPRS+14)*8)(3)
 	ld  29,((JB_GPRS+15)*8)(3)
-	lfd 29,((JB_FPRS+15*2)*8)(3)
+	lfd 29,((JB_FPRS+15)*8)(3)
 	ld  30,((JB_GPRS+16)*8)(3)
-	lfd 30,((JB_FPRS+16*2)*8)(3)
+	lfd 30,((JB_FPRS+16)*8)(3)
 	ld  31,((JB_GPRS+17)*8)(3)
-	lfd 31,((JB_FPRS+17*2)*8)(3)
+	lfd 31,((JB_FPRS+17)*8)(3)
 	mr 3,4
 	blr
 .size .__longjmp,.-.__longjmp
diff -urNxCVS -xdebian ../../dietlibc/ppc64/setjmp.S ./ppc64/setjmp.S
--- ../../dietlibc/ppc64/setjmp.S	2005-10-05 13:17:23.000000000 +0000
+++ ./ppc64/setjmp.S	2005-10-05 12:30:50.000000000 +0000
@@ -17,43 +17,43 @@
         mflr 0
         std  2,(JB_GPR2*8)(3)
         std  14,((JB_GPRS+0)*8)(3)
-        stfd 14,((JB_FPRS+0*2)*8)(3)
+        stfd 14,((JB_FPRS+0)*8)(3)
         std  0,(JB_LR*8)(3)
         std  15,((JB_GPRS+1)*8)(3)
-        stfd 15,((JB_FPRS+1*2)*8)(3)
+        stfd 15,((JB_FPRS+1)*8)(3)
         mfcr 0
         std  16,((JB_GPRS+2)*8)(3)
-        stfd 16,((JB_FPRS+2*2)*8)(3)
+        stfd 16,((JB_FPRS+2)*8)(3)
         std  0,(JB_CR*8)(3)
         std  17,((JB_GPRS+3)*8)(3)
-        stfd 17,((JB_FPRS+3*2)*8)(3)
+        stfd 17,((JB_FPRS+3)*8)(3)
         std  18,((JB_GPRS+4)*8)(3)
-        stfd 18,((JB_FPRS+4*2)*8)(3)
+        stfd 18,((JB_FPRS+4)*8)(3)
         std  19,((JB_GPRS+5)*8)(3)
-        stfd 19,((JB_FPRS+5*2)*8)(3)
+        stfd 19,((JB_FPRS+5)*8)(3)
         std  20,((JB_GPRS+6)*8)(3)
-        stfd 20,((JB_FPRS+6*2)*8)(3)
+        stfd 20,((JB_FPRS+6)*8)(3)
         std  21,((JB_GPRS+7)*8)(3)
-        stfd 21,((JB_FPRS+7*2)*8)(3)
+        stfd 21,((JB_FPRS+7)*8)(3)
         std  22,((JB_GPRS+8)*8)(3)
-        stfd 22,((JB_FPRS+8*2)*8)(3)
+        stfd 22,((JB_FPRS+8)*8)(3)
         std  23,((JB_GPRS+9)*8)(3)
-        stfd 23,((JB_FPRS+9*2)*8)(3)
+        stfd 23,((JB_FPRS+9)*8)(3)
         std  24,((JB_GPRS+10)*8)(3)
-        stfd 24,((JB_FPRS+10*2)*8)(3)
+        stfd 24,((JB_FPRS+10)*8)(3)
         std  25,((JB_GPRS+11)*8)(3)
-        stfd 25,((JB_FPRS+11*2)*8)(3)
+        stfd 25,((JB_FPRS+11)*8)(3)
         std  26,((JB_GPRS+12)*8)(3)
-        stfd 26,((JB_FPRS+12*2)*8)(3)
+        stfd 26,((JB_FPRS+12)*8)(3)
         std  27,((JB_GPRS+13)*8)(3)
-        stfd 27,((JB_FPRS+13*2)*8)(3)
+        stfd 27,((JB_FPRS+13)*8)(3)
         std  28,((JB_GPRS+14)*8)(3)
-        stfd 28,((JB_FPRS+14*2)*8)(3)
+        stfd 28,((JB_FPRS+14)*8)(3)
         std  29,((JB_GPRS+15)*8)(3)
-        stfd 29,((JB_FPRS+15*2)*8)(3)
+        stfd 29,((JB_FPRS+15)*8)(3)
         std  30,((JB_GPRS+16)*8)(3)
-        stfd 30,((JB_FPRS+16*2)*8)(3)
+        stfd 30,((JB_FPRS+16)*8)(3)
         std  31,((JB_GPRS+17)*8)(3)
-        stfd 31,((JB_FPRS+17*2)*8)(3)
+        stfd 31,((JB_FPRS+17)*8)(3)
         b JUMPTARGET (__sigjmp_save)
 .size .__sigsetjmp,.-.__sigsetjmp
diff -urNxCVS -xdebian ../../dietlibc/ppc64/syscalls.h ./ppc64/syscalls.h
--- ../../dietlibc/ppc64/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./ppc64/syscalls.h	2005-10-05 12:30:50.000000000 +0000
@@ -270,39 +270,48 @@
 #define __NR_add_key		269
 #define __NR_request_key	270
 #define __NR_keyctl		271
+#define __NR_waitid		272
+#define __NR_ioprio_set		273
+#define __NR_ioprio_get		274
+#define __NR_inotify_init	275
+#define __NR_inotify_add_watch	276
+#define __NR_inotify_rm_watch	277
 
 
-#define diet_proto_weak(wsym) \
-wsym: \
-	.quad	.wsym,.TOC.@tocbase,0;\
-	.previous;\
-	.size	wsym,24;\
-	.type	.wsym,@function;\
-	.globl	.wsym;\
-	.weak	wsym;\
+
+#define __diet_proto_common(sym) \
+	.section ".opd","aw"; \
+	.align	3; \
+sym: \
+	.quad	.sym,.TOC.@tocbase,0; \
+	.previous; \
+	.size	sym,24; \
+	.type	.sym,@function
+
+#define diet_proto_weak(sym) \
+	.weak	sym; \
+	.weak	.sym; \
+	__diet_proto_common(sym)
 
 #define diet_proto(sym) \
-sym:\
-	.quad	.sym,.TOC.@tocbase,0;\
-	.previous;\
-	.size	sym,24;\
-	.type	.sym,@function;\
-	.globl	.sym;\
+	.globl	sym; \
+	.globl	.sym; \
+	__diet_proto_common(sym)
+
 
 #define syscall_weak(name,wsym,sym) \
 .text; \
 diet_proto_weak(wsym); \
 diet_proto(sym); \
-.wsym:\
-	.weak	.wsym;\
+.wsym: \
 .sym: \
 	li	0,__NR_##name; \
-	b __unified_syscall
+	b	__unified_syscall
 
 #define syscall(name,sym) \
 .text; \
 diet_proto(sym); \
 .sym: \
 	li	0,__NR_##name; \
-	b __unified_syscall
+	b	__unified_syscall
 
diff -urNxCVS -xdebian ../../dietlibc/s390/syscalls.h ./s390/syscalls.h
--- ../../dietlibc/s390/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./s390/syscalls.h	2005-10-12 08:53:33.000000000 +0000
@@ -251,7 +251,7 @@
 #define __NR_fadvise64_64	264
 #define __NR_statfs64		265
 #define __NR_fstatfs64		266
-/* Number 267 is reserved for new sys_remap_file_pages */
+#define __NR_remap_file_pages	267
 /* Number 268 is reserved for new sys_mbind */
 /* Number 269 is reserved for new sys_get_mempolicy */
 /* Number 270 is reserved for new sys_set_mempolicy */
@@ -261,7 +261,17 @@
 #define __NR_mq_timedreceive	274
 #define __NR_mq_notify		275
 #define __NR_mq_getsetattr	276
-/* Number 277 is reserved for new sys_kexec_load */
+#define __NR_kexec_load		277
+#define __NR_add_key		278
+#define __NR_request_key	279
+#define __NR_keyctl		280
+#define __NR_waitid		281
+#define __NR_ioprio_set		282
+#define __NR_ioprio_get		283
+#define __NR_inotify_init	284
+#define __NR_inotify_add_watch	285
+#define __NR_inotify_rm_watch	286
+
 
 #define syscall_weak(name,wsym,sym) \
 .text; \
diff -urNxCVS -xdebian ../../dietlibc/s390x/syscalls.h ./s390x/syscalls.h
--- ../../dietlibc/s390x/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./s390x/syscalls.h	2005-10-12 08:53:33.000000000 +0000
@@ -251,7 +251,7 @@
 #define __NR_fadvise64_64	264
 #define __NR_statfs64		265
 #define __NR_fstatfs64		266
-/* Number 267 is reserved for new sys_remap_file_pages */
+#define __NR_remap_file_pages	267
 /* Number 268 is reserved for new sys_mbind */
 /* Number 269 is reserved for new sys_get_mempolicy */
 /* Number 270 is reserved for new sys_set_mempolicy */
@@ -261,7 +261,16 @@
 #define __NR_mq_timedreceive	274
 #define __NR_mq_notify		275
 #define __NR_mq_getsetattr	276
-/* Number 277 is reserved for new sys_kexec_load */
+#define __NR_kexec_load		277
+#define __NR_add_key		278
+#define __NR_request_key	279
+#define __NR_keyctl		280
+#define __NR_waitid		281
+#define __NR_ioprio_set		282
+#define __NR_ioprio_get		283
+#define __NR_inotify_init	284
+#define __NR_inotify_add_watch	285
+#define __NR_inotify_rm_watch	286
 
 
 /* 
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/add_key.S ./syscalls.s/add_key.S
--- ../../dietlibc/syscalls.s/add_key.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/add_key.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(add_key,add_key)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/clock_getres.S ./syscalls.s/clock_getres.S
--- ../../dietlibc/syscalls.s/clock_getres.S	2005-10-05 13:17:23.000000000 +0000
+++ ./syscalls.s/clock_getres.S	2005-10-05 12:30:50.000000000 +0000
@@ -1,5 +1,3 @@
 #include "syscalls.h"
 
-#ifdef __NR_clock_getres
 syscall(clock_getres,clock_getres)
-#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/clock_gettime.S ./syscalls.s/clock_gettime.S
--- ../../dietlibc/syscalls.s/clock_gettime.S	2005-10-05 13:17:23.000000000 +0000
+++ ./syscalls.s/clock_gettime.S	2005-10-05 12:30:50.000000000 +0000
@@ -1,5 +1,3 @@
 #include "syscalls.h"
 
-#ifdef __NR_clock_gettime
 syscall(clock_gettime,clock_gettime)
-#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/clock_nanosleep.S ./syscalls.s/clock_nanosleep.S
--- ../../dietlibc/syscalls.s/clock_nanosleep.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/clock_nanosleep.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(clock_nanosleep,clock_nanosleep)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/clock_settime.S ./syscalls.s/clock_settime.S
--- ../../dietlibc/syscalls.s/clock_settime.S	2005-10-05 13:17:23.000000000 +0000
+++ ./syscalls.s/clock_settime.S	2005-10-05 12:30:50.000000000 +0000
@@ -1,5 +1,3 @@
 #include "syscalls.h"
 
-#ifdef __NR_clock_settime
 syscall(clock_settime,clock_settime)
-#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fadvise64.S ./syscalls.s/fadvise64.S
--- ../../dietlibc/syscalls.s/fadvise64.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fadvise64.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(fadvise64,fadvise64)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fadvise64_64.S ./syscalls.s/fadvise64_64.S
--- ../../dietlibc/syscalls.s/fadvise64_64.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fadvise64_64.S	2005-10-12 08:53:33.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_fadvise64_64
+syscall(fadvise64_64,fadvise64_64)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fcntl64.S ./syscalls.s/fcntl64.S
--- ../../dietlibc/syscalls.s/fcntl64.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fcntl64.S	2005-08-05 17:58:03.000000000 +0000
@@ -0,0 +1,10 @@
+#include "dietfeatures.h"
+#include "syscalls.h"
+
+#ifdef __NR_fcntl64
+#ifdef WANT_LARGEFILE_BACKCOMPAT
+syscall(fcntl64,__dietlibc_fcntl64)
+#else
+syscall(fcntl64,fcntl64)
+#endif
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fgetxattr.S ./syscalls.s/fgetxattr.S
--- ../../dietlibc/syscalls.s/fgetxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fgetxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(fgetxattr,fgetxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/flistxattr.S ./syscalls.s/flistxattr.S
--- ../../dietlibc/syscalls.s/flistxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/flistxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(flistxattr,flistxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fremovexattr.S ./syscalls.s/fremovexattr.S
--- ../../dietlibc/syscalls.s/fremovexattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fremovexattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(fremovexattr,fremovexattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fsetxattr.S ./syscalls.s/fsetxattr.S
--- ../../dietlibc/syscalls.s/fsetxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fsetxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(fsetxattr,fsetxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/fstatfs64.S ./syscalls.s/fstatfs64.S
--- ../../dietlibc/syscalls.s/fstatfs64.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/fstatfs64.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_fstatfs64
+syscall(fstatfs64,__dietlibc_fstatfs64)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/futex.S ./syscalls.s/futex.S
--- ../../dietlibc/syscalls.s/futex.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/futex.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(futex,futex)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/get_mempolicy.S ./syscalls.s/get_mempolicy.S
--- ../../dietlibc/syscalls.s/get_mempolicy.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/get_mempolicy.S	2005-10-12 08:53:33.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_get_mempolicy
+syscall(get_mempolicy,get_mempolicy)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/get_thread_area.S ./syscalls.s/get_thread_area.S
--- ../../dietlibc/syscalls.s/get_thread_area.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/get_thread_area.S	2005-10-12 08:53:33.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_get_thread_area
+syscall(get_thread_area,get_thread_area)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/gettid.S ./syscalls.s/gettid.S
--- ../../dietlibc/syscalls.s/gettid.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/gettid.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(gettid,gettid)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/getxattr.S ./syscalls.s/getxattr.S
--- ../../dietlibc/syscalls.s/getxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/getxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(getxattr,getxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/inotify_add_watch.S ./syscalls.s/inotify_add_watch.S
--- ../../dietlibc/syscalls.s/inotify_add_watch.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/inotify_add_watch.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_inotify_add_watch
+syscall(inotify_add_watch,inotify_add_watch)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/inotify_init.S ./syscalls.s/inotify_init.S
--- ../../dietlibc/syscalls.s/inotify_init.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/inotify_init.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_inotify_init
+syscall(inotify_init,inotify_init)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/inotify_rm_watch.S ./syscalls.s/inotify_rm_watch.S
--- ../../dietlibc/syscalls.s/inotify_rm_watch.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/inotify_rm_watch.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_inotify_rm_watch
+syscall(inotify_rm_watch,inotify_rm_watch)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/io_cancel.S ./syscalls.s/io_cancel.S
--- ../../dietlibc/syscalls.s/io_cancel.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/io_cancel.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(io_cancel,io_cancel)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/io_destroy.S ./syscalls.s/io_destroy.S
--- ../../dietlibc/syscalls.s/io_destroy.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/io_destroy.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(io_destroy,io_destroy)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/io_getevents.S ./syscalls.s/io_getevents.S
--- ../../dietlibc/syscalls.s/io_getevents.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/io_getevents.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(io_getevents,io_getevents)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/io_setup.S ./syscalls.s/io_setup.S
--- ../../dietlibc/syscalls.s/io_setup.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/io_setup.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(io_setup,io_setup)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/io_submit.S ./syscalls.s/io_submit.S
--- ../../dietlibc/syscalls.s/io_submit.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/io_submit.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(io_submit,io_submit)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/keyctl.S ./syscalls.s/keyctl.S
--- ../../dietlibc/syscalls.s/keyctl.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/keyctl.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(keyctl,keyctl)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/lgetxattr.S ./syscalls.s/lgetxattr.S
--- ../../dietlibc/syscalls.s/lgetxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/lgetxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(lgetxattr,lgetxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/listxattr.S ./syscalls.s/listxattr.S
--- ../../dietlibc/syscalls.s/listxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/listxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(listxattr,listxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/llistxattr.S ./syscalls.s/llistxattr.S
--- ../../dietlibc/syscalls.s/llistxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/llistxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(llistxattr,llistxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/lremovexattr.S ./syscalls.s/lremovexattr.S
--- ../../dietlibc/syscalls.s/lremovexattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/lremovexattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(lremovexattr,lremovexattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/lsetxattr.S ./syscalls.s/lsetxattr.S
--- ../../dietlibc/syscalls.s/lsetxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/lsetxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(lsetxattr,lsetxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mbind.S ./syscalls.s/mbind.S
--- ../../dietlibc/syscalls.s/mbind.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mbind.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_mbind
+syscall(mbind,mbind)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mincore.S ./syscalls.s/mincore.S
--- ../../dietlibc/syscalls.s/mincore.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mincore.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mincore,mincore)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_getsetattr.S ./syscalls.s/mq_getsetattr.S
--- ../../dietlibc/syscalls.s/mq_getsetattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_getsetattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_getsetattr,mq_setattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_notify.S ./syscalls.s/mq_notify.S
--- ../../dietlibc/syscalls.s/mq_notify.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_notify.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_notify,mq_notify)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_open.S ./syscalls.s/mq_open.S
--- ../../dietlibc/syscalls.s/mq_open.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_open.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_open,mq_open)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_timedreceive.S ./syscalls.s/mq_timedreceive.S
--- ../../dietlibc/syscalls.s/mq_timedreceive.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_timedreceive.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_timedreceive,mq_timedreceive)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_timedsend.S ./syscalls.s/mq_timedsend.S
--- ../../dietlibc/syscalls.s/mq_timedsend.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_timedsend.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_timedsend,mq_timedsend)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/mq_unlink.S ./syscalls.s/mq_unlink.S
--- ../../dietlibc/syscalls.s/mq_unlink.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/mq_unlink.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(mq_unlink,mq_unlink)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/quotactl.S ./syscalls.s/quotactl.S
--- ../../dietlibc/syscalls.s/quotactl.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/quotactl.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(quotactl,quotactl)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/readahead.S ./syscalls.s/readahead.S
--- ../../dietlibc/syscalls.s/readahead.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/readahead.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(readahead,readahead)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/remap_file_pages.S ./syscalls.s/remap_file_pages.S
--- ../../dietlibc/syscalls.s/remap_file_pages.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/remap_file_pages.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(remap_file_pages,remap_file_pages)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/removexattr.S ./syscalls.s/removexattr.S
--- ../../dietlibc/syscalls.s/removexattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/removexattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(removexattr,removexattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/request_key.S ./syscalls.s/request_key.S
--- ../../dietlibc/syscalls.s/request_key.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/request_key.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(request_key,request_key)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/rt_sigreturn.S ./syscalls.s/rt_sigreturn.S
--- ../../dietlibc/syscalls.s/rt_sigreturn.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/rt_sigreturn.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(rt_sigreturn,rt_sigreturn)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/set_mempolicy.S ./syscalls.s/set_mempolicy.S
--- ../../dietlibc/syscalls.s/set_mempolicy.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/set_mempolicy.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_set_mempolicy
+syscall(set_mempolicy,set_mempolicy)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/set_thread_area.S ./syscalls.s/set_thread_area.S
--- ../../dietlibc/syscalls.s/set_thread_area.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/set_thread_area.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_set_thread_area
+syscall(set_thread_area,set_thread_area)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/set_tid_address.S ./syscalls.s/set_tid_address.S
--- ../../dietlibc/syscalls.s/set_tid_address.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/set_tid_address.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(set_tid_address,set_tid_address)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/setxattr.S ./syscalls.s/setxattr.S
--- ../../dietlibc/syscalls.s/setxattr.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/setxattr.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(setxattr,setxattr)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/statfs64.S ./syscalls.s/statfs64.S
--- ../../dietlibc/syscalls.s/statfs64.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/statfs64.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_statfs64
+syscall(statfs64,__dietlibc_statfs64)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/tgkill.S ./syscalls.s/tgkill.S
--- ../../dietlibc/syscalls.s/tgkill.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/tgkill.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(tgkill,tgkill)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/tkill.S ./syscalls.s/tkill.S
--- ../../dietlibc/syscalls.s/tkill.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/tkill.S	2005-10-04 17:47:03.000000000 +0000
@@ -0,0 +1,2 @@
+#include "syscalls.h"
+syscall(tkill,tkill)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/ustat.S ./syscalls.s/ustat.S
--- ../../dietlibc/syscalls.s/ustat.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/ustat.S	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(ustat,ustat)
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/vserver.S ./syscalls.s/vserver.S
--- ../../dietlibc/syscalls.s/vserver.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/vserver.S	2005-10-12 08:53:34.000000000 +0000
@@ -0,0 +1,5 @@
+#include "syscalls.h"
+
+#ifdef __NR_vserver
+syscall(vserver,vserver)
+#endif
diff -urNxCVS -xdebian ../../dietlibc/t.c ./t.c
--- ../../dietlibc/t.c	2005-10-05 13:17:23.000000000 +0000
+++ ./t.c	2005-10-12 08:53:33.000000000 +0000
@@ -45,6 +45,8 @@
 #include <features.h>
 #include <sys/ioctl.h>
 #include <pty.h>
+#include <sys/statfs.h>
+#include <mqueue.h>
 #ifdef __dietlibc__
 #include <md5.h>
 #include <write12.h>
@@ -104,9 +106,31 @@
      __asm__ __volatile__ ("rdtsc" : "=a" (low) : : "edx")
 
 int main(int argc,char *argv[]) {
+  struct stat s;
+  time_t t=time(0);
+  struct tm* T;
+  stat("/tmp/nyt.html",&s);
+  T=gmtime(&s.st_mtime);
+#if 0
+  static struct mq_attr x;
+  mqd_t a=mq_open("fnord",O_WRONLY|O_CREAT,0600,&x);
+  mqd_t b=mq_open("fnord",O_RDONLY);
+#endif
+#if 0
+  struct statfs s;
+  if (statfs("/tmp",&s)!=-1) {
+    printf("%llu blocks, %llu free\n",(unsigned long long)s.f_blocks,(unsigned long long)s.f_bfree);
+  }
+#endif
+#if 0
+  char* c=strndupa("fnord",3);
+  puts(c);
+#endif
+#if 0
   char buf[100];
   __write2("foo!\n");
   memset(buf,0,200);
+#endif
 #if 0
   printf("%+05d\n",500);
 #endif
diff -urNxCVS -xdebian ../../dietlibc/test/gethostent.c ./test/gethostent.c
--- ../../dietlibc/test/gethostent.c	1970-01-01 00:00:00.000000000 +0000
+++ ./test/gethostent.c	2005-07-29 12:57:21.000000000 +0000
@@ -0,0 +1,17 @@
+#include <netinet/in.h>
+#include <netdb.h>
+#include <stdio.h>
+#include <arpa/inet.h>
+
+int main() {
+  struct hostent *foo;
+  foo=gethostent();
+  if (foo) {
+    int i;
+    printf("%s -> %s\n",foo->h_name,inet_ntoa(*(struct in_addr*)foo->h_addr));
+    for (i=0; foo->h_aliases[i]; ++i) {
+      printf("  also known as %s\n",foo->h_aliases[i]);
+    }
+  } else return 1;
+  return 0;
+}
diff -urNxCVS -xdebian ../../dietlibc/test/regex.c ./test/regex.c
--- ../../dietlibc/test/regex.c	2005-10-05 13:17:23.000000000 +0000
+++ ./test/regex.c	2005-07-25 14:53:15.000000000 +0000
@@ -23,6 +23,10 @@
   assert(regexec(&r,"abuse@fefe.de",0,0,0)==0);
   regfree(&r);
 
+  assert(regcomp(&r,"@(ioctl.codeblau.de|fcntl.codeblau.de|knuth.codeblau.de|codeblau.de|lists.codeblau.de|code-blau.de|codeblau.com|code-blau.com|ccc.fefe.de|wegwerfdomain.de|fefes.wegwerfdomain.de|bewaff.net|rc23.rx|fnord.st|ist.schwervernetzt.de|kesim.(org|net|com)|tinydns.net|spiral-dynamics.org|hinke.org|2.0.1.0.8.5.6.0.1.0.0.2.ip6.int|eckner.org|mindbase.de|codeblau.walledcity.de)",REG_EXTENDED)==0);
+  assert(regexec(&r,"abuse@fefe.de",0,0,0)==REG_NOMATCH);
+  regfree(&r);
+
   assert(regcomp(&r,"^$",REG_EXTENDED)==0);
   assert(regexec(&r,"",0,0,0)==0);
   assert(matches[0].rm_so==0 && matches[0].rm_eo==0);
diff -urNxCVS -xdebian ../../dietlibc/test/strnlen.c ./test/strnlen.c
--- ../../dietlibc/test/strnlen.c	1970-01-01 00:00:00.000000000 +0000
+++ ./test/strnlen.c	2005-08-29 13:07:15.000000000 +0000
@@ -0,0 +1,8 @@
+#define _GNU_SOURCE
+#include <string.h>
+#include <assert.h>
+
+int main() {
+  assert(strnlen("fnord",3)==3);
+  assert(strnlen("fnord",17)==5);
+}
diff -urNxCVS -xdebian ../../dietlibc/test/strptime.c ./test/strptime.c
--- ../../dietlibc/test/strptime.c	2005-10-05 13:17:23.000000000 +0000
+++ ./test/strptime.c	2005-07-10 18:32:53.000000000 +0000
@@ -7,9 +7,12 @@
   struct tm* t;
   time_t T=time(0);
   t=localtime(&T);
-  
+
   strftime(buf,sizeof(buf),"%c",t);
   printf("%s\n",strptime(buf,"%c",t));
 
+  printf("%s\n",strptime("Tue, 31 May 2005 14:16:16 GMT","%a, %d %b %Y %T",t));
+  printf("%2d.%02d.%d %2d:%02d:%02d\n",t->tm_mday,t->tm_mon+1,t->tm_year+1900,t->tm_hour,t->tm_min,t->tm_sec);
+
   return 0;
 }
diff -urNxCVS -xdebian ../../dietlibc/x86_64/dyn_syscalls.S ./x86_64/dyn_syscalls.S
--- ../../dietlibc/x86_64/dyn_syscalls.S	2005-10-05 13:17:23.000000000 +0000
+++ ./x86_64/dyn_syscalls.S	2005-10-12 08:53:34.000000000 +0000
@@ -57,9 +57,6 @@
 #include "../syscalls.s/chown.S"
 #include "../syscalls.s/chown32.S"
 #include "../syscalls.s/chroot.S"
-#include "../syscalls.s/clock_getres.S"
-#include "../syscalls.s/clock_gettime.S"
-#include "../syscalls.s/clock_settime.S"
 #include "../syscalls.s/close.S"
 #include "../syscalls.s/create_module.S"
 #include "../syscalls.s/delete_module.S"
@@ -107,7 +104,6 @@
 #include "../syscalls.s/getrlimit.S"
 #include "../syscalls.s/getrusage.S"
 #include "../syscalls.s/getsid.S"
-#include "../syscalls.s/gettimeofday.S"
 #include "../syscalls.s/getuid.S"
 #include "../syscalls.s/getuid32.S"
 #include "../syscalls.s/init_module.S"
@@ -229,6 +225,68 @@
 #include "../syscalls.s/waitpid.S"
 #include "../syscalls.s/write.S"
 #include "../syscalls.s/writev.S"
+#include "../syscalls.s/ustat.S"
+
+#include "../syscalls.s/clock_settime.S"
+#include "../syscalls.s/clock_gettime.S"
+#include "../syscalls.s/clock_getres.S"
+#include "../syscalls.s/clock_nanosleep.S"
+
+#include "../syscalls.s/mq_getsetattr.S"
+#include "../syscalls.s/mq_notify.S"
+#include "../syscalls.s/mq_open.S"
+#include "../syscalls.s/mq_timedreceive.S"
+#include "../syscalls.s/mq_timedsend.S"
+#include "../syscalls.s/mq_unlink.S"
+
+#include "../syscalls.s/statfs64.S"
+#include "../syscalls.s/fstatfs64.S"
+
+#include "../syscalls.s/tkill.S"
+#include "../syscalls.s/tgkill.S"
+#include "../syscalls.s/set_tid_address.S"
+#include "../syscalls.s/set_thread_area.S"
+#include "../syscalls.s/set_mempolicy.S"
+#include "../syscalls.s/rt_sigreturn.S"
+#include "../syscalls.s/gettid.S"
+#include "../syscalls.s/get_thread_area.S"
+
+#include "../syscalls.s/remap_file_pages.S"
+#include "../syscalls.s/readahead.S"
+#include "../syscalls.s/quotactl.S"
+#include "../syscalls.s/mincore.S"
+#include "../syscalls.s/mbind.S"
+#include "../syscalls.s/get_mempolicy.S"
+#include "../syscalls.s/futex.S"
+#include "../syscalls.s/fadvise64.S"
+#include "../syscalls.s/vserver.S"
+
+#include "../syscalls.s/request_key.S"
+#include "../syscalls.s/keyctl.S"
+#include "../syscalls.s/add_key.S"
+
+#include "../syscalls.s/io_submit.S"
+#include "../syscalls.s/io_setup.S"
+#include "../syscalls.s/io_getevents.S"
+#include "../syscalls.s/io_destroy.S"
+#include "../syscalls.s/io_cancel.S"
+
+#include "../syscalls.s/inotify_rm_watch.S"
+#include "../syscalls.s/inotify_init.S"
+#include "../syscalls.s/inotify_add_watch.S"
+
+#include "../syscalls.s/setxattr.S"
+#include "../syscalls.s/lsetxattr.S"
+#include "../syscalls.s/fsetxattr.S"
+#include "../syscalls.s/removexattr.S"
+#include "../syscalls.s/lremovexattr.S"
+#include "../syscalls.s/fremovexattr.S"
+#include "../syscalls.s/listxattr.S"
+#include "../syscalls.s/llistxattr.S"
+#include "../syscalls.s/flistxattr.S"
+#include "../syscalls.s/getxattr.S"
+#include "../syscalls.s/lgetxattr.S"
+#include "../syscalls.s/fgetxattr.S"
 
 #define _exit __exit
 #include "clone.S"
@@ -236,3 +294,6 @@
 
 #include "__longjmp.S"
 #include "setjmp.S"
+
+#define __errno_location __errno_location@PLT
+#include "x86_64/gettimeofday.S"
diff -urNxCVS -xdebian ../../dietlibc/x86_64/gettimeofday.S ./x86_64/gettimeofday.S
--- ../../dietlibc/x86_64/gettimeofday.S	2005-10-05 13:17:23.000000000 +0000
+++ ./x86_64/gettimeofday.S	2005-07-19 12:14:11.000000000 +0000
@@ -5,14 +5,14 @@
 	mov	$0xffffffffff600000,%rax
 	callq	*%rax
 	cmpq	$-128, %rax
-	jbe	.Lnoerror
+	jbe	1f
 	negl	%eax
 	pushq	%rax
 	call	__errno_location
 	popq	%rcx
 	movl	%ecx,(%rax)
 	orq	$-1, %rax
-.Lnoerror:
+1:
 	ret
 .Lhere:
 	.size	 gettimeofday,.Lhere-gettimeofday
diff -urNxCVS -xdebian ../../dietlibc/x86_64/sigaction.c ./x86_64/sigaction.c
--- ../../dietlibc/x86_64/sigaction.c	2005-10-05 13:17:23.000000000 +0000
+++ ./x86_64/sigaction.c	2005-10-05 12:30:50.000000000 +0000
@@ -5,9 +5,17 @@
 
 int __rt_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact, long nr);
 
-static void restore_rt(void) {
+#if 0
+static void __restore_rt(void) {
   asm volatile ("syscall" : : "a" (__NR_rt_sigreturn));
 }
+#else
+/* exactly match MD_FALLBACK_FRAME_STATE_FOR in gcc-3.4/gcc/config/i386/linux64.h */
+void __restore_rt(void);
+asm(".text\n" ".align 16\n"
+    "__restore_rt:"
+    "movq $15, %rax\n" "syscall\n" "hlt\n");
+#endif
 
 int __libc_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact);
 int __libc_sigaction(int signum, const struct sigaction *act, struct sigaction *oldact) {
@@ -16,7 +24,7 @@
 	newact = alloca(sizeof(*newact));
 	newact->sa_handler = act->sa_handler;
 	newact->sa_flags = act->sa_flags | SA_RESTORER;
-	newact->sa_restorer = &restore_rt;
+	newact->sa_restorer = &__restore_rt;
 	newact->sa_mask = act->sa_mask;
   }
   return __rt_sigaction(signum, newact, oldact, _NSIG/8);
diff -urNxCVS -xdebian ../../dietlibc/x86_64/syscalls.h ./x86_64/syscalls.h
--- ../../dietlibc/x86_64/syscalls.h	2005-10-05 13:17:23.000000000 +0000
+++ ./x86_64/syscalls.h	2005-10-05 12:30:50.000000000 +0000
@@ -296,8 +296,11 @@
 #define __NR_add_key		248
 #define __NR_request_key	249
 #define __NR_keyctl		250
-
-#define __NR_syscall_max __NR_exit_group
+#define __NR_ioprio_set		251
+#define __NR_ioprio_get		252
+#define __NR_inotify_init	253
+#define __NR_inotify_add_watch	254
+#define __NR_inotify_rm_watch	255
 
 #ifdef __PIC__
 #define syscall_weak(name,wsym,sym) \
