diff -urNxCVS -xdebian ../../dietlibc/CHANGES ./CHANGES
--- ../../dietlibc/CHANGES	2005-07-31 11:05:38.000000000 +0000
+++ ./CHANGES	2005-07-27 12:57:33.000000000 +0000
@@ -1,4 +1,26 @@
-0.29
+0.30:
+  put exception handling frames in read-only section on AMD64 and S/390
+  make sys/stat.h ILP64 compatible
+    (both Markus Oberhumer)
+  whoops, strptime was completely broken, and noone noticed :-)
+  fix DNS resolver to only use shorter timeout for .local queries
+  remove throw() statements for functions taking function pointer
+    arguments (qsort, besearch, ftw)
+  fix embarassing bug in pclose (Juergen Sawinski, René Rebe)
+  when asking for an IPv6 address and there is an IPv4 address in
+    /etc/hosts but not an IPv6 address, return NO_DATA without
+    querying DNS.  This is how glibc does it, and it means you can use
+    e.g. elinks to browse http://localhost/ without being connected to
+    the internet / a DNS server.
+  make libcrypt/crypt.c to work when compiled with gcc 4
+  provide toascii and ustat (Reynir Stefansson)
+  change size of struct sigaction.sa_flags from long to int on alpha.
+  beginnings of wide char string routines
+  fix regex match bug ("@(a|b)" would also match "x@z")
+  ARM big-endian support (Paul Clifford)
+  support %s in strftime, so date in embutils does :-)
+
+0.29:
   oops, fix LD_RUN_PATH unsetting (Enrico Scholz)
   Markus Oberhumer sent the following diffs:
     dl_iterate_phdr for libgcc_eh
diff -urNxCVS -xdebian ../../dietlibc/Makefile ./Makefile
--- ../../dietlibc/Makefile	2005-07-31 11:05:38.000000000 +0000
+++ ./Makefile	2005-07-25 14:53:14.000000000 +0000
@@ -8,7 +8,7 @@
 BINDIR=${prefix}/bin
 MAN1DIR=${prefix}/man/man1
 
-MYARCH:=$(shell uname -m | sed -e 's/i[4-9]86/i386/' -e 's/armv[3-6][lb]/arm/')
+MYARCH:=$(shell uname -m | sed -e 's/i[4-9]86/i386/' -e 's/armv[3-6]t\?e\?[lb]/arm/')
 
 # This extra-ugly cruft is here so make will not run uname and sed each
 # time it looks at $(OBJDIR).  This alone sped up running make when
@@ -100,6 +100,7 @@
 CROSS=
 
 CC=gcc
+INC=-I. -isystem include
 
 VPATH=lib:libstdio:libugly:libcruft:libcrypt:libshell:liblatin1:libcompat:libdl:librpc:libregex:libm:profiling
 
@@ -150,19 +151,28 @@
 
 % :: %,v
 
+ifeq ($(CC),tcc)
+$(OBJDIR)/%.o: %.S $(ARCH)/syscalls.h
+	$(CROSS)cpp $(INC) $< | $(CROSS)as -o $@
+
+$(OBJDIR)/%.o: %.c
+	tcc -I. -Iinclude -c $< -o $@
+	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
+else
 $(OBJDIR)/pstart.o: start.S
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -DPROFILING -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -DPROFILING -c $< -o $@
 
 $(OBJDIR)/%.o: %.S $(ARCH)/syscalls.h
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 
 $(OBJDIR)/pthread_%.o: libpthread/pthread_%.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
 
 $(OBJDIR)/%.o: %.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -c $< -o $@
 	$(COMMENT) -$(CROSS)strip -x -R .comment -R .note $@
+endif
 
 ifeq ($(shell $(CC) -v 2>&1 | grep "gcc version"),gcc version 4.0.0)
 SAFE_CFLAGS=$(shell echo $(CFLAGS)|sed 's/-Os/-O2/')
@@ -173,7 +183,7 @@
 endif
 
 $(OBJDIR)/crypt.o: libcrypt/crypt.c
-	$(CROSS)$(CC) -I. -isystem include $(SAFER_CFLAGS) -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(SAFER_CFLAGS) -c $< -o $@
 
 DIETLIBC_OBJ = $(OBJDIR)/unified.o \
 $(SYSCALLOBJ) $(LIBOBJ) $(LIBSTDIOOBJ) $(LIBUGLYOBJ) \
@@ -228,21 +238,21 @@
 	$(PICODIR)/libm.so $(PICODIR)/diet-dyn $(PICODIR)/diet-dyn-i
 
 $(PICODIR)/%.o: %.S $(ARCH)/syscalls.h
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 
 $(PICODIR)/pthread_%.o: libpthread/pthread_%.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 $(PICODIR)/%.o: %.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 $(PICODIR)/dstart.o: start.S
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -c $< -o $@
 
 $(PICODIR)/dyn_so_start.o: dyn_start.c
-	$(CROSS)$(CC) -I. -isystem include $(CFLAGS) -fPIC -D__DYN_LIB -D__DYN_LIB_SHARED -c $< -o $@
+	$(CROSS)$(CC) $(INC) $(CFLAGS) -fPIC -D__DYN_LIB -D__DYN_LIB_SHARED -c $< -o $@
 	$(COMMENT) $(CROSS)strip -x -R .comment -R .note $@
 
 DYN_LIBC_PIC = $(LIBOBJ) $(LIBSTDIOOBJ) $(LIBUGLYOBJ) \
@@ -267,7 +277,7 @@
 
 $(PICODIR)/libdl.so: libdl/_dl_main.c dietfeatures.h
 	$(LD_UNSET) $(CROSS)$(CC) -D__OD_CLEAN_ROOM -DNODIETREF -fPIC -nostdlib -shared -Bsymbolic -Wl,-Bsymbolic \
-		-o $@ $(SAFE_CFLAGS) -I. -isystem include libdl/_dl_main.c -Wl,-soname=libdl.so
+		-o $@ $(SAFE_CFLAGS) $(INC) libdl/_dl_main.c -Wl,-soname=libdl.so
 
 #$(PICODIR)/libdl.so: $(DYN_LIBDL_OBJS) dietfeatures.h
 #	$(CROSS)$(CC) -nostdlib -shared -o $@ $(CFLAGS) -fPIC $(DYN_LIBDL_OBJS) -L$(PICODIR) -ldietc -Wl,-soname=libdl.so
@@ -465,7 +475,7 @@
 
 # these depend on dietfeatures.h for WANT_LINKER_WARNINGS
 $(OBJDIR)/setlinebuf.o $(OBJDIR)/bzero.o $(OBJDIR)/setegid.o \
-$(OBJDIR)/seteuid.o: dietfeatures.h
+$(OBJDIR)/seteuid.o $(OBJDIR)/toascii.o: dietfeatures.h
 
 # these depend on dietfeatures.h for WANT_FULL_POSIX_COMPAT
 $(OBJDIR)/strncpy.o: dietfeatures.h
diff -urNxCVS -xdebian ../../dietlibc/arm/dyn_syscalls.S ./arm/dyn_syscalls.S
--- ../../dietlibc/arm/dyn_syscalls.S	2005-07-31 11:05:38.000000000 +0000
+++ ./arm/dyn_syscalls.S	2005-07-13 13:22:28.000000000 +0000
@@ -203,6 +203,7 @@
 #include "../syscalls.s/ptrace.S"
 #include "../syscalls.s/ftruncate64.S"
 #include "../syscalls.s/truncate64.S"
+#include "../syscalls.s/ustat.S"
 
 /* other asm-files w.o. changes ... */
 __exit:
diff -urNxCVS -xdebian ../../dietlibc/arm/strcpy.S ./arm/strcpy.S
--- ../../dietlibc/arm/strcpy.S	2005-07-31 11:05:38.000000000 +0000
+++ ./arm/strcpy.S	2005-07-25 14:53:14.000000000 +0000
@@ -1,39 +1,66 @@
+#include "dietfeatures.h"
+
 .text
 	.align	2
 	.global	strcpy
-	.type	 strcpy,function
+
 strcpy:
-	mov	ip, r0
 #ifndef WANT_SMALL_STRING_ROUTINES
+	mov	ip, r0
 	ands	r2, r1, #3
 	ldr	r3, [r1, -r2]!
 	movne	r2, r2, lsl #3
+#ifdef __ARMEB__
+	movne	r3, r3, lsl r2
+#else
 	movne	r3, r3, lsr r2
+#endif
 	addne	pc, pc, r2, lsl #1
 	mov	r0, r0			@ nop
 .Lloop:
+#ifdef __ARMEB__
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
+	mov	r3, r3, ror #24
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
+	mov	r3, r3, ror #24
+	tst	r3, #255
+	strb	r3, [ip], #1
+	ldrne	r3, [r1, #4]!
+#else
+	tst	r3, #255
+	strb	r3, [ip], #1
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
-	moveqs	pc, lr
+	moveq	pc, lr
 	mov	r3, r3, lsr #8
 	tst	r3, #255
 	strb	r3, [ip], #1
 	ldrne	r3, [r1, #4]!
+#endif
 #else
+	ldrb	r2, [r1], #1
+	mov	r3, r0
 .Lloop:
-	ldrb	r3, [ip], #1
-	strb	r3, [r1], #1
-	tst	r3, #255
+	strb	r2, [r3], #1
+	tst	r2, #255
+	ldrneb	r2, [r1], #1
 #endif
 	bne	.Lloop
-	movs	pc, lr
+	mov	pc, lr
 .Lfe1:
 	.size	 strcpy,.Lfe1-strcpy
diff -urNxCVS -xdebian ../../dietlibc/arm/strlen.S ./arm/strlen.S
--- ../../dietlibc/arm/strlen.S	2005-07-31 11:05:38.000000000 +0000
+++ ./arm/strlen.S	2005-07-25 14:53:14.000000000 +0000
@@ -1,3 +1,4 @@
+#include "dietfeatures.h"
 
 	.text
 	.align	2
@@ -11,16 +12,21 @@
 	moveq	pc, lr			@ if so, return 0
 #endif
 
+#ifndef WANT_SMALL_STRING_ROUTINES
 	ands	a3, a1, #3
 	ldr	ip, .Lmagic
-	rsb	a2, a1, #0
+	mov	a2, a1
 	ldr	a4, [a1, -a3]!
 
 	/* ensure junk bytes aren't nulls */
 
 	rsbne	a3, a3, #4
 	movne	a3, a3, lsl #3
+#ifdef __ARMEB__
+	orrne	a4, a4, ip, lsl a3
+#else
 	orrne	a4, a4, ip, lsr a3
+#endif
 
 .Lloop:
 	sub	a3, a4, ip
@@ -31,17 +37,36 @@
 
 	/* a3 & 0x80808080 == a3 */
 
-	sub	a3, a3, #1
-	tst	a3, #0x10000
-	movne	a3, a3, lsr #16
-	addne	a1, a1, #2
-	movs	a3, a3, lsr #9
-	adc	a1, a1, a2
+#ifdef __ARMEB__
+	tst	a3, ip, lsl #16 + 7
+	moveq	a3, a3, lsl #16
+	addeq	a1, a1, #2
+	tst	a3, #0x80000000
+	addeq	a1, a1, #1
+#else
+	tst	a3, ip, lsr #16 - 7
+	moveq	a3, a3, lsr #16
+	addeq	a1, a1, #2
+	tst	a3, #0x80
+	addeq	a1, a1, #1
+#endif
+	sub	a1, a1, a2
+#else
+	ldrb	a3, [a1], #1
+	mov	a2, a1
+.Lloop:
+	tst	a3, #255
+	ldrneb	a3, [a1], #1
+	bne	.Lloop
+	sub	a1, a1, a2
+#endif
 
 	mov	pc, lr
 
+#ifndef WANT_SMALL_STRING_ROUTINES
 .Lmagic:
 	.word	0x01010101
+#endif
 
 .Lstrlen:
 	.size	strlen,.Lstrlen-strlen
diff -urNxCVS -xdebian ../../dietlibc/diet.c ./diet.c
--- ../../dietlibc/diet.c	2005-07-31 11:05:38.000000000 +0000
+++ ./diet.c	2005-07-31 09:47:16.000000000 +0000
@@ -285,15 +285,17 @@
 
       dest=newargv;
       *dest++=argv[1];
-      if (!strcmp(argv[2],"-V")) {
-	*dest++=argv[2];
-	*dest++=argv[3];
-	argv+=2;
-	argc-=2;
-      } else if (!memcmp(argv[2],"-V",2)) {
-	*dest++=argv[2];
-	++argv;
-	--argc;
+      if (argv[2]) {
+	if (!strcmp(argv[2],"-V")) {
+	  *dest++=argv[2];
+	  *dest++=argv[3];
+	  argv+=2;
+	  argc-=2;
+	} else if (!memcmp(argv[2],"-V",2)) {
+	  *dest++=argv[2];
+	  ++argv;
+	  --argc;
+	}
       }
 #ifndef __DYN_LIB
       if (_link) { *dest++=(char*)nostdlib; *dest++=dashstatic; *dest++=dashL; }
diff -urNxCVS -xdebian ../../dietlibc/dyn_start.c ./dyn_start.c
--- ../../dietlibc/dyn_start.c	2005-07-31 11:05:38.000000000 +0000
+++ ./dyn_start.c	2005-06-08 07:50:27.000000000 +0000
@@ -22,9 +22,19 @@
 __attribute_used
 static structor __DTOR_LIST__[1]={((structor)-1)};
 
+/* see gcc-3.4/gcc/crtstuff.c */
+#if !defined(EH_FRAME_SECTION_CONST)
+#if defined(__s390__) || defined(__x86_64__)
+# define EH_FRAME_SECTION_CONST const
+#endif
+#endif
+#if !defined(EH_FRAME_SECTION_CONST)
+# define EH_FRAME_SECTION_CONST
+#endif
+
 __attribute__((section(".eh_frame")))
 __attribute_used
-char __EH_FRAME_BEGIN__[] = { };
+EH_FRAME_SECTION_CONST char __EH_FRAME_BEGIN__[] = { };
 
 
 static void __do_global_dtors_aux(void)
diff -urNxCVS -xdebian ../../dietlibc/dyn_stop.c ./dyn_stop.c
--- ../../dietlibc/dyn_stop.c	2005-07-31 11:05:38.000000000 +0000
+++ ./dyn_stop.c	2005-06-08 07:50:27.000000000 +0000
@@ -14,12 +14,22 @@
 __attribute_used
 static structor __DTOR_END__[1]={((structor)0)};
 
+/* see gcc-3.4/gcc/crtstuff.c */
+#if !defined(EH_FRAME_SECTION_CONST)
+#if defined(__s390__) || defined(__x86_64__)
+# define EH_FRAME_SECTION_CONST const
+#endif
+#endif
+#if !defined(EH_FRAME_SECTION_CONST)
+# define EH_FRAME_SECTION_CONST
+#endif
+
 __attribute__((section(".eh_frame")))
 __attribute_used
 #if __WORDSIZE == 32
-char __FRAME_END__[4] = { 0, 0, 0, 0 };
+EH_FRAME_SECTION_CONST char __FRAME_END__[4] = { 0, 0, 0, 0 };
 #else
-char __FRAME_END__[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
+EH_FRAME_SECTION_CONST char __FRAME_END__[8] = { 0, 0, 0, 0, 0, 0, 0, 0 };
 #endif
 
 static void __do_global_ctors_aux(void)
diff -urNxCVS -xdebian ../../dietlibc/i386/dyn_syscalls.S ./i386/dyn_syscalls.S
--- ../../dietlibc/i386/dyn_syscalls.S	2005-07-31 11:05:38.000000000 +0000
+++ ./i386/dyn_syscalls.S	2005-07-13 13:22:28.000000000 +0000
@@ -69,6 +69,7 @@
 #include "../syscalls.s/wait4.S"
 #include "../syscalls.s/writev.S"
 #include "../syscalls.s/__getpagesize.S"
+#include "../syscalls.s/ustat.S"
 
 /* OK this is basicaly unified.S */
 .text
diff -urNxCVS -xdebian ../../dietlibc/include/ctype.h ./include/ctype.h
--- ../../dietlibc/include/ctype.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/ctype.h	2005-07-13 13:22:28.000000000 +0000
@@ -15,6 +15,7 @@
 extern int isupper (int c) __THROW __attribute__ ((__const__));
 extern int islower (int c) __THROW __attribute__ ((__const__));
 
+extern int toascii(int c) __THROW __attribute__ ((__const__));
 extern int tolower(int c) __THROW __attribute__ ((__const__));
 extern int toupper(int c) __THROW __attribute__ ((__const__));
 
diff -urNxCVS -xdebian ../../dietlibc/include/dirent.h ./include/dirent.h
--- ../../dietlibc/include/dirent.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/dirent.h	2005-07-10 18:32:53.000000000 +0000
@@ -42,10 +42,10 @@
 
 int scandir(const char *dir, struct dirent ***namelist,
       int (*selection)(const struct dirent *),
-      int (*compar)(const struct dirent **, const struct dirent **)) __THROW;
+      int (*compar)(const struct dirent **, const struct dirent **));
 int scandir64(const char *dir, struct dirent64 ***namelist,
       int (*selection)(const struct dirent64 *),
-      int (*compar)(const struct dirent64 **, const struct dirent64 **)) __THROW;
+      int (*compar)(const struct dirent64 **, const struct dirent64 **));
 
 int alphasort(const struct dirent **a, const struct dirent **b) __THROW __attribute__((const));
 int alphasort64(const struct dirent64 **a, const struct dirent64 **b) __THROW __attribute__((const));
diff -urNxCVS -xdebian ../../dietlibc/include/ftw.h ./include/ftw.h
--- ../../dietlibc/include/ftw.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/ftw.h	2005-07-10 18:32:53.000000000 +0000
@@ -11,11 +11,11 @@
   int level;
 };
 
-int ftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag), int depth) __THROW;
-int nftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag, struct FTW *s), int depth, int flags) __THROW;
+int ftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag), int depth);
+int nftw(const char *dir, int (*fn)(const char *file, const struct stat *sb, int flag, struct FTW *s), int depth, int flags);
 
 #ifndef __NO_STAT64
-int ftw64(const char *dir, int (*fn)(const char *file, const struct stat64 *sb, int flag), int depth) __THROW;
+int ftw64(const char *dir, int (*fn)(const char *file, const struct stat64 *sb, int flag), int depth);
 
 #if defined _FILE_OFFSET_BITS && _FILE_OFFSET_BITS == 64
 #define ftw(dir,fn,depth) ftw64(dir,fn,depth)
@@ -42,19 +42,19 @@
 };
 
 typedef int (*__ftw_func_t) (const char *__filename,
-			     const struct stat *__status, int __flag) __THROW;
+			     const struct stat *__status, int __flag);
 
 typedef int (*__nftw_func_t) (const char *__filename,
 			      const struct stat *__status, int __flag,
-			      struct FTW *__info) __THROW;
+			      struct FTW *__info);
 
 #ifndef __NO_STAT64
 typedef int (*__ftw64_func_t) (const char *__filename,
-			       const struct stat64 *__status, int __flag) __THROW;
+			       const struct stat64 *__status, int __flag);
 
 typedef int (*__nftw64_func_t) (const char *__filename,
 				const struct stat64 *__status,
-				int __flag, struct FTW *__info) __THROW;
+				int __flag, struct FTW *__info);
 #endif
 
 __END_DECLS
diff -urNxCVS -xdebian ../../dietlibc/include/signal.h ./include/signal.h
--- ../../dietlibc/include/signal.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/signal.h	2005-07-19 12:14:10.000000000 +0000
@@ -438,14 +438,7 @@
 } sigset_t;
 
 struct sigaction {
-#if defined(__alpha__)
-  union {
-    sighandler_t _sa_handler;
-    void (*_sa_sigaction)(int, siginfo_t*, void*);
-  } _u;
-  sigset_t sa_mask;
-  unsigned long sa_flags;
-#elif defined(__ia64__) || defined(__hppa__)
+#if defined(__alpha__) || defined(__ia64__) || defined(__hppa__)
   union {
     sighandler_t _sa_handler;
     void (*_sa_sigaction)(int, siginfo_t*, void*);
diff -urNxCVS -xdebian ../../dietlibc/include/stdlib.h ./include/stdlib.h
--- ../../dietlibc/include/stdlib.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/stdlib.h	2005-07-19 12:14:10.000000000 +0000
@@ -64,16 +64,11 @@
 long nrand48(randbuf buf) __THROW;
 double erand48(randbuf buf) __THROW;
 
-void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *)) __THROW;
-void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *)) __THROW;
+void qsort(void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
+void *bsearch(const void *key, const void *base, size_t nmemb, size_t size, int (*compar)(const void *, const void *));
 
 extern char **environ;
 
-/* now this function is the greatest bullshit I have ever seen.
- * The ISO people must be out of their minds. */
-typedef struct { int quot,rem; } div_t;
-div_t div(int numer, int denom) __THROW __attribute__((__const__));
-
 char *realpath(const char *path, char *resolved_path) __THROW;
 
 int mkstemp(char *_template);
@@ -100,6 +95,20 @@
 
 #define MB_CUR_MAX 1
 
+/* now these functions are the greatest bullshit I have ever seen.
+ * The ISO people must be out of their minds. */
+
+typedef struct { int quot,rem; } div_t;
+typedef struct { long quot,rem; } ldiv_t;
+
+div_t div(int numerator, int denominator);
+ldiv_t ldiv(long numerator, long denominator);
+
+#ifdef _GNU_SOURCE
+typedef struct { long long quot,rem; } lldiv_t;
+lldiv_t lldiv(long long numerator, long long denominator);
+#endif
+
 __END_DECLS
 
 #endif
diff -urNxCVS -xdebian ../../dietlibc/include/sys/stat.h ./include/sys/stat.h
--- ../../dietlibc/include/sys/stat.h	2005-07-31 11:05:38.000000000 +0000
+++ ./include/sys/stat.h	2005-07-25 14:53:14.000000000 +0000
@@ -9,15 +9,15 @@
 
 #if defined(__i386__)
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -32,19 +32,19 @@
 };
 
 struct stat64 {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned char	__pad0[10];
 
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 	unsigned char	__pad3[10];
 
 __extension__	long long	st_size;
@@ -67,13 +67,13 @@
 #elif defined(__sparc__) && defined(__arch64__)
 
 struct stat {
-	unsigned int  st_dev;
+	uint32_t  st_dev;
 	unsigned long   st_ino;
-	unsigned int  st_mode;
-	short   st_nlink;
-	unsigned int   st_uid;
-	unsigned int   st_gid;
-	unsigned int  st_rdev;
+	uint32_t  st_mode;
+	int16_t   st_nlink;
+	uint32_t   st_uid;
+	uint32_t   st_gid;
+	uint32_t  st_rdev;
 	long   st_size;
 	time_t  st_atime;
 	time_t  st_mtime;
@@ -88,44 +88,44 @@
 
 	unsigned long long	st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 
 	unsigned long long	st_rdev;
 
 	unsigned char	__pad3[8];
 
 	long long	st_size;
-	unsigned int	st_blksize;
+	uint32_t	st_blksize;
 
 	unsigned char	__pad4[8];
-	unsigned int	st_blocks;
+	uint32_t	st_blocks;
 
-	unsigned int	st_atime;
-	unsigned int	st_atime_nsec;
+	uint32_t	st_atime;
+	uint32_t	st_atime_nsec;
 
-	unsigned int	st_mtime;
-	unsigned int	st_mtime_nsec;
+	uint32_t	st_mtime;
+	uint32_t	st_mtime_nsec;
 
-	unsigned int	st_ctime;
-	unsigned int	st_ctime_nsec;
+	uint32_t	st_ctime;
+	uint32_t	st_ctime_nsec;
 
-	unsigned int	__unused4;
-	unsigned int	__unused5;
+	uint32_t	__unused4;
+	uint32_t	__unused5;
 };
 
 #elif defined(__sparc__)
 struct stat {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	short		st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
+	uint16_t	st_mode;
+	int16_t		st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
 	long		st_size;
 	long		st_atime;
 	unsigned long	__unused1;
@@ -140,67 +140,67 @@
 
 struct stat64 {
 	unsigned char	__pad0[6];
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 
 __extension__	unsigned long long	st_ino;
 
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 
 	unsigned char	__pad2[6];
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 
 	unsigned char	__pad3[8];
 
 __extension__	long long	st_size;
-	unsigned int	st_blksize;
+	uint32_t	st_blksize;
 
 	unsigned char	__pad4[8];
-	unsigned int	st_blocks;
+	uint32_t	st_blocks;
 
-	  signed int	st_atime;
-	unsigned int	__unused1;
+	 int32_t	st_atime;
+	uint32_t	__unused1;
 
-	  signed int	st_mtime;
-	unsigned int	__unused2;
+	 int32_t	st_mtime;
+	uint32_t	__unused2;
 
-	  signed int	st_ctime;
-	unsigned int	__unused3;
+	 int32_t	st_ctime;
+	uint32_t	__unused3;
 
-	unsigned int	__unused4;
-	unsigned int	__unused5;
+	uint32_t	__unused4;
+	uint32_t	__unused5;
 };
 #elif defined(__alpha__)
 struct stat {
-	unsigned int	st_dev;
-	unsigned int	st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
-	unsigned int	st_rdev;
-	long		st_size;
-	  signed long	st_atime;
-	  signed long	st_mtime;
-	  signed long	st_ctime;
-	unsigned int	st_blksize;
-	int		st_blocks;
-	unsigned int	st_flags;
-	unsigned int	st_gen;
+	uint32_t	st_dev;
+	uint32_t	st_ino;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
+	uint32_t	st_rdev;
+	signed long	st_size;
+	signed long	st_atime;
+	signed long	st_mtime;
+	signed long	st_ctime;
+	uint32_t	st_blksize;
+	int32_t		st_blocks;
+	uint32_t	st_flags;
+	uint32_t	st_gen;
 };
 #elif defined(__mips__)
 struct stat {
-	unsigned int	st_dev;
+	uint32_t	st_dev;
 	long		st_pad1[3];		/* Reserved for network id */
 	ino_t		st_ino;
-	unsigned int	st_mode;
-	int		st_nlink;
-	int		st_uid;
-	int		st_gid;
-	unsigned int	st_rdev;
+	uint32_t	st_mode;
+	int32_t		st_nlink;
+	int32_t		st_uid;
+	int32_t		st_gid;
+	uint32_t	st_rdev;
 	long		st_pad2[2];
 	long		st_size;
 	long		st_pad3;
@@ -219,18 +219,18 @@
 	char		st_fstype[16];	/* Filesystem type name */
 	long		st_pad4[8];
 	/* Linux specific fields */
-	unsigned int	st_flags;
-	unsigned int	st_gen;
+	uint32_t	st_flags;
+	uint32_t	st_gen;
 };
 
 struct stat64 {
 	unsigned long	st_dev;
 	unsigned long	st_pad0[3];	/* Reserved for st_dev expansion  */
 __extension__ unsigned long long	st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
 	unsigned long	st_rdev;
 	unsigned long	st_pad1[3];	/* Reserved for st_rdev expansion  */
 __extension__ long long	st_size;
@@ -280,17 +280,17 @@
 	uint32_t 	st_gid;
 	unsigned long	st_rdev;
 	off_t		st_size;
-	unsigned long  	st_blksize;
-	unsigned long  	st_blocks;
-	unsigned long  	st_atime;
+	unsigned long	st_blksize;
+	unsigned long	st_blocks;
+	unsigned long	st_atime;
 	unsigned long	st_atime_nsec;
-	unsigned long  	st_mtime;
-	unsigned long  	st_mtime_nsec;
-	unsigned long  	st_ctime;
-	unsigned long  	st_ctime_nsec;
-	unsigned long  	__unused4;
-	unsigned long  	__unused5;
-	unsigned long  	__unused6;
+	unsigned long	st_mtime;
+	unsigned long	st_mtime_nsec;
+	unsigned long	st_ctime;
+	unsigned long	st_ctime_nsec;
+	unsigned long	__unused4;
+	unsigned long	__unused5;
+	unsigned long	__unused6;
 };
 #endif
 
@@ -320,15 +320,15 @@
 };
 #elif defined(__arm__)
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -346,25 +346,30 @@
  * insane amounts of padding around dev_t's.
  */
 struct stat64 {
-	unsigned short	st_dev;
+	uint16_t	st_dev;
 	unsigned char	__pad0[10];
 
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 
-	unsigned short	st_rdev;
+	uint16_t	st_rdev;
 	unsigned char	__pad3[10];
 
 __extension__	long long	st_size;
 	unsigned long	st_blksize;
 
+#ifdef __ARMEB__
+	unsigned long	__pad4;		/* future possible st_blocks high bits */
+	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
+#else
 	unsigned long	st_blocks;	/* Number 512-byte blocks allocated. */
 	unsigned long	__pad4;		/* future possible st_blocks high bits */
+#endif
 
 	  signed long	st_atime;
 	unsigned long	__pad5;
@@ -380,36 +385,36 @@
 #elif defined(__s390__)
 #if defined(__s390x__)
 struct stat {
-        unsigned long  st_dev;
-        unsigned long  st_ino;
-        unsigned long  st_nlink;
-        unsigned int   st_mode;
-        unsigned int   st_uid;
-        unsigned int   st_gid;
-        unsigned int   __pad1;
-        unsigned long  st_rdev;
-        unsigned long  st_size;
-        unsigned long  st_atime;
-        unsigned long   __reserved0;    /* reserved for atime.nanoseconds */
-        unsigned long  st_mtime;
-        unsigned long   __reserved1;    /* reserved for mtime.nanoseconds */
-        unsigned long  st_ctime;
-        unsigned long   __reserved2;    /* reserved for ctime.nanoseconds */
-        unsigned long  st_blksize;
-        long           st_blocks;
-        unsigned long  __unused[3];
+        unsigned long	st_dev;
+        unsigned long	st_ino;
+        unsigned long	st_nlink;
+        uint32_t	st_mode;
+        uint32_t	st_uid;
+        uint32_t	st_gid;
+        uint32_t	__pad1;
+        unsigned long	st_rdev;
+        unsigned long	st_size;
+        unsigned long	st_atime;
+        unsigned long	__reserved0;    /* reserved for atime.nanoseconds */
+        unsigned long	st_mtime;
+        unsigned long	__reserved1;    /* reserved for mtime.nanoseconds */
+        unsigned long	st_ctime;
+        unsigned long	__reserved2;    /* reserved for ctime.nanoseconds */
+        unsigned long	st_blksize;
+        long		st_blocks;
+        unsigned long	__unused[3];
 };
 #else
 struct stat {
-	unsigned short	st_dev;
-	unsigned short	__pad1;
+	uint16_t	st_dev;
+	uint16_t	__pad1;
 	unsigned long	st_ino;
-	unsigned short	st_mode;
-	unsigned short	st_nlink;
-	unsigned short	st_uid;
-	unsigned short	st_gid;
-	unsigned short	st_rdev;
-	unsigned short	__pad2;
+	uint16_t	st_mode;
+	uint16_t	st_nlink;
+	uint16_t	st_uid;
+	uint16_t	st_gid;
+	uint16_t	st_rdev;
+	uint16_t	__pad2;
 	unsigned long	st_size;
 	unsigned long	st_blksize;
 	unsigned long	st_blocks;
@@ -425,17 +430,17 @@
 #endif
 struct stat64 {
 	unsigned char	__pad0[6];
-	unsigned short	st_dev;
-	unsigned int	__pad1;
+	uint16_t	st_dev;
+	uint32_t	__pad1;
 #define STAT64_HAS_BROKEN_ST_INO	1
 	unsigned long	__st_ino;
-	unsigned int	st_mode;
-	unsigned int	st_nlink;
+	uint32_t	st_mode;
+	uint32_t	st_nlink;
 	unsigned long	st_uid;
 	unsigned long	st_gid;
 	unsigned char	__pad2[6];
-	unsigned short	st_rdev;
-	unsigned int	__pad3;
+	uint16_t	st_rdev;
+	uint32_t	__pad3;
 __extension__	long long	st_size;
 	unsigned long	st_blksize;
 	unsigned char	__pad4[4];
@@ -453,57 +458,57 @@
 #elif defined(__hppa__)
 
 struct stat {
-       unsigned long   st_dev;         /* dev_t is 32 bits on parisc */
-       unsigned long   st_ino;         /* 32 bits */
-       unsigned short  st_mode;        /* 16 bits */
-       unsigned short  st_nlink;       /* 16 bits */
-       unsigned short  st_reserved1;   /* old st_uid */
-       unsigned short  st_reserved2;   /* old st_gid */
-       unsigned long   st_rdev;
-       unsigned long   st_size;
-       unsigned long   st_atime;
-       unsigned long   st_spare1;
-       unsigned long   st_mtime;
-       unsigned long   st_spare2;
-       unsigned long   st_ctime;
-       unsigned long   st_spare3;
-       long            st_blksize;
-       long            st_blocks;
-       unsigned long   __unused1;      /* ACL stuff */
-       unsigned long   __unused2;      /* network */
-       unsigned long   __unused3;      /* network */
-       unsigned long   __unused4;      /* cnodes */
-       unsigned short  __unused5;      /* netsite */
-       short           st_fstype;
-       unsigned long   st_realdev;
-       unsigned short  st_basemode;
-       unsigned short  st_spareshort;
-       unsigned long   st_uid;
-       unsigned long   st_gid;
-       unsigned long   st_spare4[3];
+       unsigned long	st_dev;         /* dev_t is 32 bits on parisc */
+       unsigned long	st_ino;         /* 32 bits */
+       uint16_t		st_mode;        /* 16 bits */
+       uint16_t		st_nlink;       /* 16 bits */
+       uint16_t		st_reserved1;   /* old st_uid */
+       uint16_t		st_reserved2;   /* old st_gid */
+       unsigned long	st_rdev;
+       unsigned long	st_size;
+       unsigned long	st_atime;
+       unsigned long	st_spare1;
+       unsigned long	st_mtime;
+       unsigned long	st_spare2;
+       unsigned long	st_ctime;
+       unsigned long	st_spare3;
+       long		st_blksize;
+       long		st_blocks;
+       unsigned long	__unused1;      /* ACL stuff */
+       unsigned long	__unused2;      /* network */
+       unsigned long	__unused3;      /* network */
+       unsigned long	__unused4;      /* cnodes */
+       uint16_t		__unused5;      /* netsite */
+       int16_t		st_fstype;
+       unsigned long	st_realdev;
+       uint16_t		st_basemode;
+       uint16_t		st_spareshort;
+       unsigned long	st_uid;
+       unsigned long	st_gid;
+       unsigned long	st_spare4[3];
 };
 
 struct stat64 {
 	unsigned long long st_dev;
-	unsigned int __pad1;
+	uint32_t	__pad1;
 #define STAT64_HAS_BROKEN_ST_INO	1
-	unsigned long __st_ino;
-	unsigned long st_mode;
-	unsigned long st_nlink;
-	unsigned long st_uid;
-	unsigned long st_gid;
+	unsigned long	__st_ino;
+	unsigned long	st_mode;
+	unsigned long	st_nlink;
+	unsigned long	st_uid;
+	unsigned long	st_gid;
 	unsigned long long st_rdev;
-	unsigned int __pad2;
+	uint32_t	__pad2;
 	unsigned long long st_size;
-	unsigned long st_blksize;
+	unsigned long	st_blksize;
 
 	unsigned long long st_blocks;
- 	unsigned long st_atime;
-	unsigned long int __unused1;
-	unsigned long st_mtime;
-	unsigned long int __unused2;
-	unsigned long st_ctime;
-	unsigned long int __unused3;
+ 	unsigned long	st_atime;
+	unsigned long	__unused1;
+	unsigned long	st_mtime;
+	unsigned long	__unused2;
+	unsigned long	st_ctime;
+	unsigned long	__unused3;
 	unsigned long long st_ino;
 };
 
@@ -535,10 +540,10 @@
 	unsigned long	st_dev;
 	unsigned long	st_ino;
 	unsigned long	st_nlink;
-	unsigned int	st_mode;
-	unsigned int	st_uid;
-	unsigned int	st_gid;
-	unsigned int	__pad;
+	uint32_t	st_mode;
+	uint32_t	st_uid;
+	uint32_t	st_gid;
+	uint32_t	__pad;
 	unsigned long	st_rdev;
 	unsigned long	st_size;
 	unsigned long	st_atime;
@@ -554,17 +559,17 @@
 
 #endif
 
-#define S_IFMT  00170000
-#define S_IFSOCK 0140000
-#define S_IFLNK	 0120000
-#define S_IFREG  0100000
-#define S_IFBLK  0060000
-#define S_IFDIR  0040000
-#define S_IFCHR  0020000
-#define S_IFIFO  0010000
-#define S_ISUID  0004000
-#define S_ISGID  0002000
-#define S_ISVTX  0001000
+#define S_IFMT	       00170000
+#define S_IFSOCK	0140000
+#define S_IFLNK		0120000
+#define S_IFREG		0100000
+#define S_IFBLK		0060000
+#define S_IFDIR		0040000
+#define S_IFCHR		0020000
+#define S_IFIFO		0010000
+#define S_ISUID		0004000
+#define S_ISGID		0002000
+#define S_ISVTX		0001000
 
 #define S_ISLNK(m)	(((m) & S_IFMT) == S_IFLNK)
 #define S_ISREG(m)	(((m) & S_IFMT) == S_IFREG)
@@ -611,7 +616,7 @@
 
 #define major(dev) (((dev)>>8) & 0xff)
 #define minor(dev) ((dev) & 0xff)
-#define makedev(major, minor) ((((unsigned int) (major)) << 8) | ((unsigned int) (minor)))
+#define makedev(major, minor) ((((uint32_t) (major)) << 8) | ((uint32_t) (minor)))
 
 extern int chmod (const char *__file, mode_t __mode) __THROW;
 extern int fchmod (int __fd, mode_t __mode) __THROW;
diff -urNxCVS -xdebian ../../dietlibc/include/ustat.h ./include/ustat.h
--- ../../dietlibc/include/ustat.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/ustat.h	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,25 @@
+#ifndef _USTAT_H
+#define _USTAT_H
+
+#include <sys/cdefs.h>
+#include <sys/types.h>
+
+__BEGIN_DECLS
+
+struct ustat {
+#if defined(__mips__) || (defined(__sparc__) && !defined(__arch64__))
+  long f_tfree; /* should be daddr_t f_tfree */
+#else
+  int f_tfree; /* should be daddr_t f_tfree */
+#endif
+  unsigned long f_tinode;  /* should be ino_t f_tinode */
+  char f_fname[6];
+  char f_fpack[6];
+};
+
+int ustat(dev_t dev, struct ustat* ubuf) __THROW __attribute_dontuse__;
+
+__END_DECLS
+
+#endif
+
diff -urNxCVS -xdebian ../../dietlibc/include/wchar.h ./include/wchar.h
--- ../../dietlibc/include/wchar.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/wchar.h	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,92 @@
+#ifndef _WCHAR_H
+#define _WCHAR_H
+
+#include <sys/cdefs.h>
+
+__BEGIN_DECLS
+
+#include <stddef.h>
+#include <stdarg.h>
+#include <stdio.h>
+
+typedef unsigned int wint_t;
+typedef unsigned long int wctype_t;
+
+#define WCHAR_MIN (-2147483647l - 1l)
+#define WCHAR_MAX (2147483647l)
+#define WEOF 0xfffffffful
+
+struct tm;
+
+typedef struct {
+  int count;
+  unsigned long sofar;
+} mbstate_t;
+
+wint_t btowc(int);
+wint_t fgetwc(FILE *);
+wchar_t* fgetws(wchar_t *__restrict__, int, FILE *__restrict__);
+wint_t fputwc(wchar_t, FILE *);
+int fputws(const wchar_t *__restrict__, FILE *__restrict__);
+int fwide(FILE *, int);
+int fwprintf(FILE *__restrict__, const wchar_t *__restrict__, ...);
+int fwscanf(FILE *__restrict__, const wchar_t *__restrict__, ...);
+wint_t getwc(FILE *);
+wint_t getwchar(void);
+
+size_t mbrlen(const char *__restrict__, size_t, mbstate_t *__restrict__);
+size_t mbrtowc(wchar_t *__restrict__, const char *__restrict__, size_t, mbstate_t *__restrict__);
+int mbsinit(const mbstate_t *);
+size_t mbsrtowcs(wchar_t *__restrict__, const char **__restrict__, size_t, mbstate_t *__restrict__);
+wint_t putwc(wchar_t, FILE *);
+wint_t putwchar(wchar_t);
+int swprintf(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, ...);
+int swscanf(const wchar_t *__restrict__, const wchar_t *__restrict__, ...);
+
+wint_t ungetwc(wint_t, FILE *);
+int vfwprintf(FILE *__restrict__, const wchar_t *__restrict__, va_list);
+int vfwscanf(FILE *__restrict__, const wchar_t *__restrict__, va_list);
+int vwprintf(const wchar_t *__restrict__, va_list);
+int vswprintf(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, va_list);
+int vswscanf(const wchar_t *__restrict__, const wchar_t *__restrict__, va_list);
+int vwscanf(const wchar_t *__restrict__, va_list);
+size_t wcrtomb(char *__restrict__, wchar_t, mbstate_t *__restrict__);
+wchar_t *wcscat(wchar_t *__restrict__, const wchar_t *__restrict__);
+wchar_t *wcschr(const wchar_t *, wchar_t);
+int wcscmp(const wchar_t *, const wchar_t *);
+int wcscoll(const wchar_t *, const wchar_t *);
+wchar_t* wcscpy(wchar_t *__restrict__, const wchar_t *__restrict__);
+size_t wcscspn(const wchar_t *, const wchar_t *);
+size_t wcsftime(wchar_t *__restrict__, size_t, const wchar_t *__restrict__, const struct tm *__restrict__);
+size_t wcslen(const wchar_t *) __pure;
+wchar_t *wcsncat(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+int wcsncmp(const wchar_t *, const wchar_t *, size_t);
+wchar_t *wcsncpy(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+wchar_t *wcspbrk(const wchar_t *, const wchar_t *);
+wchar_t *wcsrchr(const wchar_t *, wchar_t);
+size_t wcsrtombs(char *__restrict__, const wchar_t **__restrict__, size_t, mbstate_t *__restrict__);
+size_t wcsspn(const wchar_t *, const wchar_t *);
+wchar_t *wcsstr(const wchar_t *__restrict__, const wchar_t *__restrict__);
+double wcstod(const wchar_t *__restrict__, wchar_t **__restrict__);
+float wcstof(const wchar_t *__restrict__, wchar_t **__restrict__);
+wchar_t *wcstok(wchar_t *__restrict__, const wchar_t *__restrict__, wchar_t **__restrict__);
+long wcstol(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+long double wcstold(const wchar_t *__restrict__, wchar_t **__restrict__);
+long long wcstoll(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+unsigned long wcstoul(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+unsigned long long wcstoull(const wchar_t *__restrict__, wchar_t **__restrict__, int);
+
+size_t wcsxfrm(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+int wctob(wint_t);
+
+wchar_t *wmemchr(const wchar_t *, wchar_t, size_t);
+int wmemcmp(const wchar_t *, const wchar_t *, size_t);
+wchar_t *wmemcpy(wchar_t *__restrict__, const wchar_t *__restrict__, size_t);
+wchar_t *wmemmove(wchar_t *, const wchar_t *, size_t);
+wchar_t *wmemset(wchar_t *, wchar_t, size_t);
+int wprintf(const wchar_t *__restrict__, ...);
+int wscanf(const wchar_t *__restrict__, ...);
+
+__END_DECLS
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/include/wctype.h ./include/wctype.h
--- ../../dietlibc/include/wctype.h	1970-01-01 00:00:00.000000000 +0000
+++ ./include/wctype.h	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,28 @@
+#ifndef _WCTYPE_H
+#define _WCTYPE_H
+
+#include <sys/cdefs.h>
+#include <wchar.h>
+
+typedef const int32_t* wctrans_t;
+
+int iswalnum(wint_t) __THROW __attribute__ ((__const__));
+int iswalpha(wint_t) __THROW __attribute__ ((__const__));
+int iswblank(wint_t) __THROW __attribute__ ((__const__));
+int iswcntrl(wint_t) __THROW __attribute__ ((__const__));
+int iswdigit(wint_t) __THROW __attribute__ ((__const__));
+int iswgraph(wint_t) __THROW __attribute__ ((__const__));
+int iswlower(wint_t) __THROW __attribute__ ((__const__));
+int iswprint(wint_t) __THROW __attribute__ ((__const__));
+int iswpunct(wint_t) __THROW __attribute__ ((__const__));
+int iswspace(wint_t) __THROW __attribute__ ((__const__));
+int iswupper(wint_t) __THROW __attribute__ ((__const__));
+int iswxdigit(wint_t) __THROW __attribute__ ((__const__));
+int iswctype(wint_t, wctype_t) __THROW __attribute__ ((__const__));
+wint_t towctrans(wint_t, wctrans_t) __THROW;
+wint_t towlower(wint_t) __THROW;
+wint_t towupper(wint_t) __THROW;
+wctrans_t wctrans(const char *) __THROW;
+wctype_t wctype(const char *) __THROW;
+
+#endif
diff -urNxCVS -xdebian ../../dietlibc/lib/div.c ./lib/div.c
--- ../../dietlibc/lib/div.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/div.c	2005-07-19 09:43:09.000000000 +0000
@@ -0,0 +1,8 @@
+#include <stdlib.h>
+
+div_t div(int numerator, int denominator) {
+  div_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/getopt.c ./lib/getopt.c
--- ../../dietlibc/lib/getopt.c	2005-07-31 11:05:38.000000000 +0000
+++ ./lib/getopt.c	2005-07-10 18:32:53.000000000 +0000
@@ -18,7 +18,7 @@
 int getopt(int argc, char * const argv[], const char *optstring) {
   static int lastidx,lastofs;
   char *tmp;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/lib/iswalnum.c ./lib/iswalnum.c
--- ../../dietlibc/lib/iswalnum.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswalnum.c	2005-07-25 14:53:14.000000000 +0000
@@ -0,0 +1,9 @@
+#include <ctype.h>
+#include <wctype.h>
+
+int __iswalnum_ascii(wint_t c);
+int __iswalnum_ascii(wint_t c) {
+  return (((unsigned char)c == c)?isalnum(c):0);
+}
+
+int iswalnum(wint_t c) __attribute__((weak,alias("__iswalnum_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswalpha.c ./lib/iswalpha.c
--- ../../dietlibc/lib/iswalpha.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswalpha.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <ctype.h>
+#include <wctype.h>
+
+int __iswalpha_ascii(wint_t c);
+int __iswalpha_ascii(wint_t c) {
+  return (((unsigned char)c == c)?isalpha(c):0);
+}
+
+int iswalpha(wint_t c) __attribute__((weak,alias("__iswalpha_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswblank.c ./lib/iswblank.c
--- ../../dietlibc/lib/iswblank.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswblank.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswblank_ascii(wint_t c);
+int __iswblank_ascii(wint_t c) {
+  return (c == ' ' || c == '\t');
+}
+
+int iswblank(wint_t c) __attribute__((weak,alias("__iswblank_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswcntrl.c ./lib/iswcntrl.c
--- ../../dietlibc/lib/iswcntrl.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswcntrl.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswcntrl_ascii(wint_t c);
+int __iswcntrl_ascii(wint_t c) {
+  return ((unsigned int)c < 32u || c == 127);
+}
+
+int iswcntrl(wint_t c) __attribute__((weak,alias("__iswcntrl_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswdigit.c ./lib/iswdigit.c
--- ../../dietlibc/lib/iswdigit.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswdigit.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,5 @@
+#include <wctype.h>
+
+int iswdigit(wint_t c) {
+    return (unsigned int)(c - '0') < 10u;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/iswgraph.c ./lib/iswgraph.c
--- ../../dietlibc/lib/iswgraph.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswgraph.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswgraph_ascii(wint_t c);
+int __iswgraph_ascii(wint_t c) {
+  return (unsigned int)(c - '!') < 127u - '!';
+}
+
+int iswgraph(wint_t c) __attribute__((weak,alias("__iswgraph_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswlower.c ./lib/iswlower.c
--- ../../dietlibc/lib/iswlower.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswlower.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswlower_ascii(wint_t c);
+int __iswlower_ascii(wint_t c) {
+  return (unsigned int) (c - 'a') < 26u;
+}
+
+int iswlower ( wint_t ch ) __attribute__((weak,alias("__iswlower_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswprint.c ./lib/iswprint.c
--- ../../dietlibc/lib/iswprint.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswprint.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswprint_ascii(wint_t c);
+int __iswprint_ascii(wint_t c) {
+    return (unsigned int)(c - ' ') < 127u - ' ';
+}
+
+int iswprint(wint_t c) __attribute__((weak,alias("__iswprint_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswpunct.c ./lib/iswpunct.c
--- ../../dietlibc/lib/iswpunct.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswpunct.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wctype.h>
+
+int __iswpunct_ascii(wint_t c);
+int __iswpunct_ascii(wint_t c)
+{
+  return iswprint (c) && !iswalnum(c) && !iswspace(c);
+}
+
+int iswpunct(wint_t c) __attribute__((weak,alias("__iswpunct_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswspace.c ./lib/iswspace.c
--- ../../dietlibc/lib/iswspace.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswspace.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+int __iswspace_ascii(wint_t c);
+int __iswspace_ascii(wint_t c) {
+  return (unsigned int)(c - 9) < 5u  ||  c == ' ';
+}
+
+int iswspace(wint_t c) __attribute__((weak,alias("__iswspace_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswupper.c ./lib/iswupper.c
--- ../../dietlibc/lib/iswupper.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswupper.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wctype.h>
+
+int __iswupper_ascii ( wint_t c );
+int __iswupper_ascii ( wint_t c )
+{
+    return (unsigned int)(c - 'A') < 26u;
+}
+
+int iswupper ( wint_t c ) __attribute__((weak,alias("__iswupper_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/iswxdigit.c ./lib/iswxdigit.c
--- ../../dietlibc/lib/iswxdigit.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/iswxdigit.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,10 @@
+#include <wctype.h>
+
+int __iswxdigit_ascii(wint_t c);
+int __iswxdigit_ascii(wint_t c)
+{
+    return (unsigned int)( c         - '0') < 10u  ||
+           (unsigned int)((c | 0x20) - 'a') <  6u;
+}
+
+int iswxdigit(wint_t c) __attribute__((weak,alias("__iswxdigit_ascii")));
diff -urNxCVS -xdebian ../../dietlibc/lib/ldiv.c ./lib/ldiv.c
--- ../../dietlibc/lib/ldiv.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/ldiv.c	2005-07-19 09:43:09.000000000 +0000
@@ -0,0 +1,8 @@
+#include <stdlib.h>
+
+ldiv_t ldiv(long numerator, long denominator) {
+  ldiv_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/lldiv.c ./lib/lldiv.c
--- ../../dietlibc/lib/lldiv.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/lldiv.c	2005-07-25 14:53:14.000000000 +0000
@@ -0,0 +1,9 @@
+#define _GNU_SOURCE
+#include <stdlib.h>
+
+lldiv_t lldiv(long long numerator, long long denominator) {
+  lldiv_t x;
+  x.quot=numerator/denominator;
+  x.rem=numerator-x.quot*denominator;
+  return x;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/towlower.c ./lib/towlower.c
--- ../../dietlibc/lib/towlower.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/towlower.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+wint_t towlower(wint_t c) {
+  if ( (unsigned int)(c - 'A') < 26u )
+    c += 'a' - 'A';
+  return c;
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/towupper.c ./lib/towupper.c
--- ../../dietlibc/lib/towupper.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/towupper.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wctype.h>
+
+wint_t towupper(wint_t c) {
+  if ( (unsigned int)(c - 'a') < 26u )
+    c += 'A' - 'a';
+  return c;
+}
+
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscat.c ./lib/wcscat.c
--- ../../dietlibc/lib/wcscat.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscat.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wchar.h>
+
+wchar_t* wcscat(wchar_t *__restrict__ dest, const wchar_t *__restrict__ src) {
+  wchar_t* orig=dest;
+  for (; *dest; ++dest) ;	/* go to end of dest */
+  for (; (*dest=*src); ++src,++dest) ;	/* then append from src */
+  return orig;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcschr.c ./lib/wcschr.c
--- ../../dietlibc/lib/wcschr.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcschr.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,8 @@
+#include <wchar.h>
+
+wchar_t* wcschr(const wchar_t *wcs, wchar_t wc) {
+  for (; *wcs; ++wcs)
+    if (*wcs == wc)
+      return (wchar_t*)wcs;
+  return 0;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscmp.c ./lib/wcscmp.c
--- ../../dietlibc/lib/wcscmp.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscmp.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wchar.h>
+
+int wcscmp(const wchar_t* a,const wchar_t* b) {
+  while (*a && *a == *b)
+    a++, b++;
+  return (*a - *b);
+}
+
+int wcscoll(const wchar_t *s,const wchar_t* t)       __attribute__((weak,alias("wcscmp")));
diff -urNxCVS -xdebian ../../dietlibc/lib/wcscpy.c ./lib/wcscpy.c
--- ../../dietlibc/lib/wcscpy.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcscpy.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,7 @@
+#include <wchar.h>
+
+wchar_t* wcscpy(wchar_t *__restrict__ dest, const wchar_t *__restrict__ src) {
+  wchar_t* orig=dest;
+  for (; (*dest=*src); ++src,++dest) ;
+  return orig;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcslen.c ./lib/wcslen.c
--- ../../dietlibc/lib/wcslen.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcslen.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,7 @@
+#include <wchar.h>
+
+size_t wcslen(const wchar_t* s) {
+  size_t i;
+  for (i=0; s[i]; ++i) ;
+  return i;
+}
diff -urNxCVS -xdebian ../../dietlibc/lib/wcsrchr.c ./lib/wcsrchr.c
--- ../../dietlibc/lib/wcsrchr.c	1970-01-01 00:00:00.000000000 +0000
+++ ./lib/wcsrchr.c	2005-07-15 18:34:03.000000000 +0000
@@ -0,0 +1,9 @@
+#include <wchar.h>
+
+wchar_t* wcsrchr(const wchar_t *wcs, wchar_t wc) {
+  wchar_t* last=0;
+  for (; *wcs; ++wcs)
+    if (*wcs == wc)
+      last=(wchar_t*)wcs;
+  return last;
+}
diff -urNxCVS -xdebian ../../dietlibc/libcompat/toascii.c ./libcompat/toascii.c
--- ../../dietlibc/libcompat/toascii.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libcompat/toascii.c	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,8 @@
+#include <ctype.h>
+#include "dietwarning.h"
+
+int toascii(int c) {
+  return (c&0x7f);
+}
+
+link_warning("toascii","using this function converts accented characters to random unrelated characters and will make people very unhappy!")
diff -urNxCVS -xdebian ../../dietlibc/libcruft/___div.c ./libcruft/___div.c
--- ../../dietlibc/libcruft/___div.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcruft/___div.c	1970-01-01 00:00:00.000000000 +0000
@@ -1,11 +0,0 @@
-#include "dietwarning.h"
-#include <stdlib.h>
-
-div_t div(int numer, int denom) {
-  div_t temp;
-  temp.quot=numer/denom;
-  temp.rem=numer%denom;
-  return temp;
-}
-
-link_warning("div","warning: your code uses div(), which is completely superfluous!");
diff -urNxCVS -xdebian ../../dietlibc/libcruft/gethostbyname2_r.c ./libcruft/gethostbyname2_r.c
--- ../../dietlibc/libcruft/gethostbyname2_r.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcruft/gethostbyname2_r.c	2005-07-10 18:32:53.000000000 +0000
@@ -29,11 +29,13 @@
   if (buflen<L) { *h_errnop=ERANGE; return 1; }
 #ifdef WANT_ETC_HOSTS
   {
+    int foundsomething=0;
     struct hostent* r;
     while ((r=gethostent_r(buf,buflen))) {
-      if (r->h_addrtype==AF) {
-	int i;
-	if (!strcasecmp(r->h_name,name)) {	/* found it! */
+      int i;
+      if (!strcasecmp(r->h_name,name)) {
+	foundsomething=1;
+        if (r->h_addrtype==AF) {	/* found it! */
 found:
 	  memmove(result,r,sizeof(struct hostent));
 	  *RESULT=result;
@@ -41,14 +43,22 @@
 	  endhostent();
 	  return 0;
 	}
-	for (i=0; i<16; ++i) {
-	  if (r->h_aliases[i]) {
-	    if (!strcasecmp(r->h_aliases[i],name)) goto found;
-	  } else break;
-	}
+      }
+      for (i=0; i<16; ++i) {
+	if (r->h_aliases[i]) {
+	  if (!strcasecmp(r->h_aliases[i],name)) {
+	    foundsomething=1;
+	    if (r->h_addrtype==AF)
+	      goto found;
+	  }
+	} else break;
       }
     }
     endhostent();
+    if (foundsomething) {
+      *h_errnop=NO_DATA;
+      return -1;
+    }
   }
 #endif
   strcpy(buf,name);
diff -urNxCVS -xdebian ../../dietlibc/libcruft/getopt_long.c ./libcruft/getopt_long.c
--- ../../dietlibc/libcruft/getopt_long.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcruft/getopt_long.c	2005-07-10 18:32:53.000000000 +0000
@@ -19,7 +19,7 @@
 		const struct option *longopts, int *longindex) {
   static int lastidx,lastofs;
   char *tmp;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/libcruft/getopt_long_only.c ./libcruft/getopt_long_only.c
--- ../../dietlibc/libcruft/getopt_long_only.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcruft/getopt_long_only.c	2005-07-10 18:32:53.000000000 +0000
@@ -19,7 +19,7 @@
 		const struct option *longopts, int *longindex) {
   static int lastidx,lastofs;
   char *tmp,*arg;
-  if (optind==0) optind=1;	/* whoever started setting optind to 0 should be shot */
+  if (optind==0) { optind=1; lastidx=0; }	/* whoever started setting optind to 0 should be shot */
 again:
   if (optind>argc || !argv[optind] || *argv[optind]!='-' || argv[optind][1]==0)
     return -1;
diff -urNxCVS -xdebian ../../dietlibc/libcruft/res_query.c ./libcruft/res_query.c
--- ../../dietlibc/libcruft/res_query.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcruft/res_query.c	2005-07-10 18:32:53.000000000 +0000
@@ -116,7 +116,7 @@
       }
       /* if it doesn't work, we don't care */
 #endif
-      for (j=120; j>0; --j) {
+      for (j=20; j>0; --j) {
 	gettimeofday(&now,0);
 	if (now.tv_sec-last.tv_sec>10) {
 #ifdef WANT_IPV6_DNS
@@ -133,8 +133,10 @@
 	  if (duh[0].fd!=-1) {
 #endif
 	  duh[0].fd=tmpfd;
-	  if (sendto(tmpfd,packet,size,0,s,sizeof(struct sockaddr_in6))==0)
+	  if (sendto(tmpfd,packet,size,0,s,sizeof(struct sockaddr_in6))!=-1)
 	    gettimeofday(&last,0);
+	  else
+	    goto nxdomain;
 #ifdef WANT_PLUGPLAY_DNS
 	  }
 #endif
@@ -147,7 +149,7 @@
 	}
 	if (++i >= _res.nscount) i=0;
 #ifdef WANT_PLUGPLAY_DNS
-	if (now.tv_sec>first.tv_sec) goto nxdomain;
+	if (now.tv_sec>first.tv_sec && duh[0].fd==-1) goto nxdomain;
 	if (duh[0].fd==-1 && duh[1].fd==-1) goto nxdomain;
 	duh[0].revents=0;
 	if (poll(duh[0].fd==-1?duh+1:duh,duh[0].fd==-1?1:2,1000) > 0) {
diff -urNxCVS -xdebian ../../dietlibc/libcrypt/crypt.c ./libcrypt/crypt.c
--- ../../dietlibc/libcrypt/crypt.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libcrypt/crypt.c	2005-07-13 13:22:29.000000000 +0000
@@ -185,7 +185,8 @@
 };
 
 /* The current block, divided into 2 halves. */
-static char L[32], R[32];
+static char L[64];
+#define R (L+32)
 static char tempL[32];
 static char f[32];
 
diff -urNxCVS -xdebian ../../dietlibc/libregex/rx.c ./libregex/rx.c
--- ../../dietlibc/libregex/rx.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libregex/rx.c	2005-07-25 14:53:15.000000000 +0000
@@ -414,7 +414,9 @@
       return s;
     }
 //    printf("assigned branch %d at %p\n",r->num-1,r->b);
-    s=tmp; if (*s=='|') ++s;
+    s=tmp;
+    if (*s==')') return s;
+    if (*s=='|') ++s;
   }
   return tmp;
 }
diff -urNxCVS -xdebian ../../dietlibc/libugly/gethostent_nor.c ./libugly/gethostent_nor.c
--- ../../dietlibc/libugly/gethostent_nor.c	1970-01-01 00:00:00.000000000 +0000
+++ ./libugly/gethostent_nor.c	2005-07-29 12:57:21.000000000 +0000
@@ -0,0 +1,7 @@
+#include <netdb.h>
+
+static char hostentbuf[1024];
+
+struct hostent* gethostent() {
+  return gethostent_r(hostentbuf,sizeof(hostentbuf));
+}
diff -urNxCVS -xdebian ../../dietlibc/libugly/pclose.c ./libugly/pclose.c
--- ../../dietlibc/libugly/pclose.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libugly/pclose.c	2005-07-10 18:32:53.000000000 +0000
@@ -4,8 +4,9 @@
 
 int pclose(FILE *f) {
   int status;
+  pid_t pid=f->popen_kludge;
   fclose(f);
-  if (waitpid(f->popen_kludge,&status,0)>=0)
+  if (waitpid(pid,&status,0)>=0)
     return status;
   return -1;
 }
diff -urNxCVS -xdebian ../../dietlibc/libugly/strftime.c ./libugly/strftime.c
--- ../../dietlibc/libugly/strftime.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libugly/strftime.c	2005-07-27 12:57:34.000000000 +0000
@@ -21,20 +21,19 @@
     "AM", "PM"
 };
 
-static int  i2a ( char* dest,unsigned int x ) 
+static void i2a ( char* dest,unsigned long x ) 
 {
     int  div = 10;
     *dest++ = x/div + '0';
     *dest++ = x%div + '0';
     *dest++ = '\0';
-    return 2;
 }
 
 size_t  strftime ( char* dst, size_t max, const char* format, const struct tm* tm ) 
 {
     char*         p = dst;
     const char*   src;
-    unsigned int  no;
+    unsigned long no;
     char          buf [5];
   
   
@@ -80,6 +79,19 @@
             case 'w': no  = tm->tm_wday;              		 goto _no;
 	    case 'U': no  = (tm->tm_yday - tm->tm_wday + 7) / 7; goto _no;
 	    case 'W': no  = (tm->tm_yday - (tm->tm_wday - 1 + 7) % 7 + 7) / 7; goto _no;
+	    case 's': {
+			time_t t = mktime((struct tm*)tm);
+			char buf[101];
+			char* c;
+			buf[100]=0;
+			for (c=buf+99; c>buf; --c) {
+			  *c=(t%10)+'0';
+			  t/=10;
+			  if (!t) break;
+			}
+			src=c;
+			goto _str;
+		      }
 	    case 'Z':
 #ifdef WANT_TZFILE_PARSER
 		      tzset(); src = tzname[0];
diff -urNxCVS -xdebian ../../dietlibc/libugly/strptime.c ./libugly/strptime.c
--- ../../dietlibc/libugly/strptime.c	2005-07-31 11:05:38.000000000 +0000
+++ ./libugly/strptime.c	2005-07-10 18:32:53.000000000 +0000
@@ -14,7 +14,7 @@
     if (!isdigit(**s)) {
       if (j==0) return -1; else break;
     }
-    i=**s-'0';
+    i=i*10+**s-'0';
     ++*s;
   }
   return i;
@@ -124,12 +124,12 @@
       case 'y':
 	i=getint(&s,2);
 	if (i==-1) return (char*)s;
-	tm->tm_year=(tm->tm_year/100)*100+i;
+	if (i<69) tm->tm_year+=100;
 	break;
       case 'Y':
 	i=getint(&s,5);
 	if (i==-1) return (char*)s;
-	tm->tm_year=i;
+	tm->tm_year=i-1900;
 	break;
       }
       ++format;
diff -urNxCVS -xdebian ../../dietlibc/syscalls.s/ustat.S ./syscalls.s/ustat.S
--- ../../dietlibc/syscalls.s/ustat.S	1970-01-01 00:00:00.000000000 +0000
+++ ./syscalls.s/ustat.S	2005-07-13 07:31:41.000000000 +0000
@@ -0,0 +1,3 @@
+#include "syscalls.h"
+
+syscall(ustat,ustat)
diff -urNxCVS -xdebian ../../dietlibc/test/gethostent.c ./test/gethostent.c
--- ../../dietlibc/test/gethostent.c	1970-01-01 00:00:00.000000000 +0000
+++ ./test/gethostent.c	2005-07-29 12:57:21.000000000 +0000
@@ -0,0 +1,17 @@
+#include <netinet/in.h>
+#include <netdb.h>
+#include <stdio.h>
+#include <arpa/inet.h>
+
+int main() {
+  struct hostent *foo;
+  foo=gethostent();
+  if (foo) {
+    int i;
+    printf("%s -> %s\n",foo->h_name,inet_ntoa(*(struct in_addr*)foo->h_addr));
+    for (i=0; foo->h_aliases[i]; ++i) {
+      printf("  also known as %s\n",foo->h_aliases[i]);
+    }
+  } else return 1;
+  return 0;
+}
diff -urNxCVS -xdebian ../../dietlibc/test/regex.c ./test/regex.c
--- ../../dietlibc/test/regex.c	2005-07-31 11:05:38.000000000 +0000
+++ ./test/regex.c	2005-07-25 14:53:15.000000000 +0000
@@ -23,6 +23,10 @@
   assert(regexec(&r,"abuse@fefe.de",0,0,0)==0);
   regfree(&r);
 
+  assert(regcomp(&r,"@(ioctl.codeblau.de|fcntl.codeblau.de|knuth.codeblau.de|codeblau.de|lists.codeblau.de|code-blau.de|codeblau.com|code-blau.com|ccc.fefe.de|wegwerfdomain.de|fefes.wegwerfdomain.de|bewaff.net|rc23.rx|fnord.st|ist.schwervernetzt.de|kesim.(org|net|com)|tinydns.net|spiral-dynamics.org|hinke.org|2.0.1.0.8.5.6.0.1.0.0.2.ip6.int|eckner.org|mindbase.de|codeblau.walledcity.de)",REG_EXTENDED)==0);
+  assert(regexec(&r,"abuse@fefe.de",0,0,0)==REG_NOMATCH);
+  regfree(&r);
+
   assert(regcomp(&r,"^$",REG_EXTENDED)==0);
   assert(regexec(&r,"",0,0,0)==0);
   assert(matches[0].rm_so==0 && matches[0].rm_eo==0);
diff -urNxCVS -xdebian ../../dietlibc/test/strptime.c ./test/strptime.c
--- ../../dietlibc/test/strptime.c	2005-07-31 11:05:38.000000000 +0000
+++ ./test/strptime.c	2005-07-10 18:32:53.000000000 +0000
@@ -7,9 +7,12 @@
   struct tm* t;
   time_t T=time(0);
   t=localtime(&T);
-  
+
   strftime(buf,sizeof(buf),"%c",t);
   printf("%s\n",strptime(buf,"%c",t));
 
+  printf("%s\n",strptime("Tue, 31 May 2005 14:16:16 GMT","%a, %d %b %Y %T",t));
+  printf("%2d.%02d.%d %2d:%02d:%02d\n",t->tm_mday,t->tm_mon+1,t->tm_year+1900,t->tm_hour,t->tm_min,t->tm_sec);
+
   return 0;
 }
diff -urNxCVS -xdebian ../../dietlibc/x86_64/dyn_syscalls.S ./x86_64/dyn_syscalls.S
--- ../../dietlibc/x86_64/dyn_syscalls.S	2005-07-31 11:05:38.000000000 +0000
+++ ./x86_64/dyn_syscalls.S	2005-07-19 12:14:11.000000000 +0000
@@ -107,7 +107,6 @@
 #include "../syscalls.s/getrlimit.S"
 #include "../syscalls.s/getrusage.S"
 #include "../syscalls.s/getsid.S"
-#include "../syscalls.s/gettimeofday.S"
 #include "../syscalls.s/getuid.S"
 #include "../syscalls.s/getuid32.S"
 #include "../syscalls.s/init_module.S"
@@ -229,6 +228,7 @@
 #include "../syscalls.s/waitpid.S"
 #include "../syscalls.s/write.S"
 #include "../syscalls.s/writev.S"
+#include "../syscalls.s/ustat.S"
 
 #define _exit __exit
 #include "clone.S"
@@ -236,3 +236,6 @@
 
 #include "__longjmp.S"
 #include "setjmp.S"
+
+#define __errno_location __errno_location@PLT
+#include "x86_64/gettimeofday.S"
diff -urNxCVS -xdebian ../../dietlibc/x86_64/gettimeofday.S ./x86_64/gettimeofday.S
--- ../../dietlibc/x86_64/gettimeofday.S	2005-07-31 11:05:38.000000000 +0000
+++ ./x86_64/gettimeofday.S	2005-07-19 12:14:11.000000000 +0000
@@ -5,14 +5,14 @@
 	mov	$0xffffffffff600000,%rax
 	callq	*%rax
 	cmpq	$-128, %rax
-	jbe	.Lnoerror
+	jbe	1f
 	negl	%eax
 	pushq	%rax
 	call	__errno_location
 	popq	%rcx
 	movl	%ecx,(%rax)
 	orq	$-1, %rax
-.Lnoerror:
+1:
 	ret
 .Lhere:
 	.size	 gettimeofday,.Lhere-gettimeofday
